[
  {
    "link": "watch?v=t0YVD-Nt5jY",
    "title": "Free Frequency Regularization (FreeNeRF) in \ud83d\udcaf lines of PyTorch code | NeRF#8",
    "tags": "film, udost",
    "scraped_at": 1684583192.1422117,
    "genre": "Science",
    "views": "129",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "557",
    "uploadDate": "2023-05-13",
    "thumbnail_url": "https://i.ytimg.com/vi/t0YVD"
  },
  {
    "link": "watch?v=uYi9AWy2Ioc",
    "title": "K-Planes in \ud83d\udcaf lines of PyTorch code | NeRF#7",
    "tags": "film, udost",
    "scraped_at": 1684583190.8302078,
    "genre": "Science",
    "views": "95",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "827",
    "uploadDate": "2023-05-06",
    "thumbnail_url": "https://i.ytimg.com/vi/uYi9AWy2Ioc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=-SWvlm1naQY",
    "title": "PlenOctrees in 100 lines of PyTorch code | NeRF#6",
    "tags": "film, udost",
    "scraped_at": 1684583192.0082111,
    "genre": "Science",
    "views": "192",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "1114",
    "uploadDate": "2023-04-29",
    "thumbnail_url": "https://i.ytimg.com/vi/"
  },
  {
    "link": "watch?v=Cf63bTpbt0s",
    "title": "NeRF-- in 100 lines of PyTorch code | NeRF#5",
    "tags": "film, udost",
    "scraped_at": 1684583191.9411852,
    "genre": "Science",
    "views": "207",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "1468",
    "uploadDate": "2023-04-22",
    "thumbnail_url": "https://i.ytimg.com/vi/Cf63bTpbt0s/maxresdefault.jpg"
  },
  {
    "link": "watch?v=5sZV0Yuh4Io",
    "title": "Minimax algorithm with Alpha\u2013beta pruning | Implementation",
    "tags": "film, udost",
    "scraped_at": 1684583190.7622123,
    "genre": "Science",
    "views": "39",
    "desc": "Implementation of the Minimax algorithm with Alpha\\xe2\\x80\\x93beta pruning in 40 lines of Python code.\\\\n\\\\nUdemy Course: https://www.udemy.com/course/artificial-intelligence-minimax-algorithm/?referralCode=C35F4393A020FD4F8A14\\\\nGitHub: https://github.com/TheCodingAcademy/Minimax-algorithm\\\\n-----------------------------------------------------------------------------------------------------\\\\nCONTACT: papers.100.lines@gmail.com\\\\n#python #artificialintelligence #minimax  #algorithm #searching #unity #unrealengine #ue5 #gamedevelopment #gamedev #alpha #beta #pruning\"",
    "lengthSeconds": "540",
    "uploadDate": "2023-04-08",
    "thumbnail_url": "https://i.ytimg.com/vi/5sZV0Yuh4Io/maxresdefault.jpg"
  },
  {
    "link": "watch?v=1n-bhPX38g8",
    "title": "Minimax Algorithm | Implementation",
    "tags": "film, udost",
    "scraped_at": 1684583191.4832115,
    "genre": "Science",
    "views": "44",
    "desc": "Implementation of the Minimax algorithm in 30 lines of Python code.\\\\n\\\\nUdemy Course: https://www.udemy.com/course/artificial-intelligence-minimax-algorithm/?referralCode=C35F4393A020FD4F8A14\\\\nGitHub: https://github.com/TheCodingAcademy/Minimax-algorithm\\\\n-----------------------------------------------------------------------------------------------------\\\\nCONTACT: papers.100.lines@gmail.com\\\\n#python #artificialintelligence #minimax  #algorithm #searching #unity #unrealengine #ue5 #gamedevelopment #gamedev\"",
    "lengthSeconds": "430",
    "uploadDate": "2023-04-01",
    "thumbnail_url": "https://i.ytimg.com/vi/1n"
  },
  {
    "link": "watch?v=g2XqCTN5-Nw",
    "title": "Pathfinding & Searching Tree Algorithms | DFS, BFS & A* in 20 lines of Python code",
    "tags": "film, udost",
    "scraped_at": 1684583191.6772118,
    "genre": "Science",
    "views": "42",
    "desc": "Implementation of the Depth-first search (DFS) algorithm in 20 lines of Python code.\\\\n\\\\nUdemy Course: https://www.udemy.com/course/artificial-intelligence-path-finding-algorithms/?referralCode=CAE1D9917E6D411BFC43\\\\nGitHub: https://github.com/TheCodingAcademy/Searching-tree-algorithms\\\\n\\\\n-----------------------------------------------------------------------------------------------------\\\\nCONTACT: papers.100.lines@gmail.com\\\\n#python #artificialintelligence #dfs #bfs #astar #depthfirstsearch #breadthfirstsearch #searching #tree #algorithm #pathfinding #unity #unrealengine #ue5 #gamedevelopment #gamedev\"",
    "lengthSeconds": "481",
    "uploadDate": "2023-03-25",
    "thumbnail_url": "https://i.ytimg.com/vi/g2XqCTN5"
  },
  {
    "link": "watch?v=pgIgj3so-Z8",
    "title": "KiloNeRF: Speeding up Neural Radiance Fields with Thousands of Tiny MLPs | 100 lines of PyTorch code",
    "tags": "film, udost",
    "scraped_at": 1684583191.0911853,
    "genre": "Science",
    "views": "194",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "840",
    "uploadDate": "2023-03-18",
    "thumbnail_url": "https://i.ytimg.com/vi/pgIgj3so"
  },
  {
    "link": "watch?v=dDp0jBWiHQM",
    "title": "Machine Learning: Rectified ADAM in 100 lines of PyTorch code",
    "tags": "film, udost",
    "scraped_at": 1684583191.7402117,
    "genre": "Science",
    "views": "68",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "369",
    "uploadDate": "2023-03-11",
    "thumbnail_url": "https://i.ytimg.com/vi/dDp0jBWiHQM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=GyCGtzoCiQY",
    "title": "Machine Learning: ADAM in 100 lines of PyTorch code",
    "tags": "film, udost",
    "scraped_at": 1684583191.025212,
    "genre": "Science",
    "views": "345",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "381",
    "uploadDate": "2023-03-04",
    "thumbnail_url": "https://i.ytimg.com/vi/GyCGtzoCiQY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=e-kIv_ht1XM",
    "title": "Neural Network from Scratch without ML libraries | 100 lines of Python code",
    "tags": "film, udost",
    "scraped_at": 1684583191.6111853,
    "genre": "Science",
    "views": "504",
    "desc": "Implementation of a Neural Network from Scratch in 100 lines of Python code, without using AD libraries (PyTorch, TensorFlow, JAX, ...).\\\\n\\\\nUdemy course: https://www.udemy.com/course/machine-learning-neural-networks/?referralCode=A3A49CA2DB6B573EF671\\\\nGitHub: https://github.com/TheCodingAcademy/Neural-Network-from-Scratch\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------------\\\\nCONTACT: papers.100.lines@gmail.com\\\\n#python #neuralnetworks #machinelearning #artificialintelligence #deeplearning #data #supervisedlearning #research #neural #function #relu #fromscratch #perceptron #multilayerperceptron #mlp #classification #MNIST #logsoftmax #nllloss\"",
    "lengthSeconds": "1376",
    "uploadDate": "2023-02-25",
    "thumbnail_url": "https://i.ytimg.com/vi/e"
  },
  {
    "link": "watch?v=o4_OYWxGrnk",
    "title": "Machine Learning Papers: Multiplicative Filter Networks in 100 lines of PyTorch code",
    "tags": "film, udost",
    "scraped_at": 1684583191.15722,
    "genre": "Science",
    "views": "233",
    "desc": "Representing images with Neural Networks. Implementation of the paper \\\\\"",
    "lengthSeconds": "590",
    "uploadDate": "2023-02-18",
    "thumbnail_url": "https://i.ytimg.com/vi/o4_OYWxGrnk/maxresdefault.jpg"
  },
  {
    "link": "watch?v=JTjMA743gTQ",
    "title": "NeRF | Fourier Features Let Networks LearnHigh Frequency Functions in Low Dimensional Domains",
    "tags": "film, udost",
    "scraped_at": 1684583191.2232118,
    "genre": "Science",
    "views": "140",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "579",
    "uploadDate": "2023-01-21",
    "thumbnail_url": "https://i.ytimg.com/vi/JTjMA743gTQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=1OsRruZmAaM",
    "title": "Neural Radiance Fields at High FPS | FastNeRF in 100 lines of PyTorch code",
    "tags": "film, udost",
    "scraped_at": 1684583190.6972125,
    "genre": "Science",
    "views": "360",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "742",
    "uploadDate": "2023-01-14",
    "thumbnail_url": "https://i.ytimg.com/vi/1OsRruZmAaM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Q1zqf5tfeJw",
    "title": "Neural Radiance Fields | NeRF in 100 lines of PyTorch code",
    "tags": "film, udost",
    "scraped_at": 1684583191.8732123,
    "genre": "Science",
    "views": "2975",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "713",
    "uploadDate": "2023-01-07",
    "thumbnail_url": "https://i.ytimg.com/vi/Q1zqf5tfeJw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=VTuA6hy7KCQ",
    "title": "Machine Learning | Convolutional Generative Adversarial Networks in 100 lines of PyTorch code",
    "tags": "film, udost",
    "scraped_at": 1684583191.8061852,
    "genre": "Science",
    "views": "71",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "531",
    "uploadDate": "2022-12-24",
    "thumbnail_url": "https://i.ytimg.com/vi/VTuA6hy7KCQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=OOOLhKVxP-k",
    "title": "Machine Learning | Least Squares Generative Adversarial Networks in 100 lines of PyTorch code",
    "tags": "film, udost",
    "scraped_at": 1684583191.3522105,
    "genre": "Science",
    "views": "96",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "752",
    "uploadDate": "2022-12-17",
    "thumbnail_url": "https://i.ytimg.com/vi/OOOLhKVxP"
  },
  {
    "link": "watch?v=RwTjQmInKmM",
    "title": "Normalizing Flows | NICE: Non-linear Independent Components Estimation in 100 lines of PyTorch code",
    "tags": "film, udost",
    "scraped_at": 1684583190.9601853,
    "genre": "Science",
    "views": "173",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "504",
    "uploadDate": "2022-12-10",
    "thumbnail_url": "https://i.ytimg.com/vi/RwTjQmInKmM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=HzFdOXOOORU",
    "title": "Machine Learning | Conditional Generative Adversarial Nets in 100 lines of PyTorch code",
    "tags": "film, udost",
    "scraped_at": 1684583191.419215,
    "genre": "Science",
    "views": "186",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "489",
    "uploadDate": "2022-12-03",
    "thumbnail_url": "https://i.ytimg.com/vi/HzFdOXOOORU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=OiwtJA9In1U",
    "title": "Machine Learning | Variational Inference with Normalizing Flows in 100 lines of PyTorch code",
    "tags": "film, udost",
    "scraped_at": 1684583191.5471861,
    "genre": "Science",
    "views": "536",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "716",
    "uploadDate": "2022-11-26",
    "thumbnail_url": "https://i.ytimg.com/vi/OiwtJA9In1U/maxresdefault.jpg"
  },
  {
    "link": "watch?v=FkYkEBoH-Eo",
    "title": "Machine Learning | Improved Techniques for Training GANs in 100 lines of PyTorch code",
    "tags": "film, udost",
    "scraped_at": 1684583191.2872121,
    "genre": "Science",
    "views": "152",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "651",
    "uploadDate": "2022-11-19",
    "thumbnail_url": "https://i.ytimg.com/vi/FkYkEBoH"
  },
  {
    "link": "watch?v=eT7ZhZjLBqM",
    "title": "Implicit Neural Representations with Periodic Activation Functions | Siren in 100 lines of PyTorch",
    "tags": "film, udost",
    "scraped_at": 1684583192.0732179,
    "genre": "Science",
    "views": "158",
    "desc": "Machine Learning: Implementation of the paper \\\\\"",
    "lengthSeconds": "522",
    "uploadDate": "2022-11-12",
    "thumbnail_url": "https://i.ytimg.com/vi/eT7ZhZjLBqM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=PcA-JRtfan4",
    "title": "On First-Order Meta-Learning Algorithms | Reptile in 100 lines of PyTorch code",
    "tags": "film, udost",
    "scraped_at": 1684583190.8951855,
    "genre": "Science",
    "views": "304",
    "desc": "Implementation of the paper \\\\\"",
    "lengthSeconds": "511",
    "uploadDate": "2022-11-05",
    "thumbnail_url": "https://i.ytimg.com/vi/PcA"
  },
  {
    "link": "watch?v=KTaC1cMPGcQ",
    "title": "Generative Adversarial Nets (GANs) in 100 lines of code | PyTorch",
    "tags": "film, udost",
    "scraped_at": 1684583192.2401853,
    "genre": "Science",
    "views": "128",
    "desc": "Implementation of the paper \\\\\"",
    "lengthSeconds": "593",
    "uploadDate": "2022-10-29",
    "thumbnail_url": "https://i.ytimg.com/vi/KTaC1cMPGcQ/maxresdefault.jpg"
  }
]