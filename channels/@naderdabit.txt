[
  {
    "link": "watch?v=S6Fln4SreeQ",
    "title": "Full Stack Introduction to Fuel Network - The World's Fastest Modular Execution Layer",
    "tags": "film, udost",
    "scraped_at": 1684586043.0445395,
    "genre": "Entertainment",
    "views": "1293",
    "desc": "This video teaches you everything you need to know about Fuel Network and how to get started building smart contracts and full stack dapps using Sway, React, and the Fuel Toolchain.\\\\n\\\\nWe\\'ll start with an introduction to Fuel, the Fuel Toolchain, and what sets Fuel apart from other L2s and blockchains.\\\\n\\\\nWe\\'ll then dive into building an end to end application by creating, testing, and deploying a smart contract to the Fuel Testnet.\\\\n\\\\nNext, we\\'ll download the Fuel wallet, build a front end, and connect our app to the deployed smart contract to test it all out.\\\\n\\\\nBy the end of this video you should have a great understanding of what Fuel is, how it works, and how to start building full stack applications with the Fuel tools and SDKs.\\\\n\\\\n0:00 - Introduction to Fuel\\\\n5:16 - Fuel developer resources\\\\n6:30 - Installing dependencies and initializing the app\\\\n11:39 - Writing our first smart contract\\\\n15:45 - Writing tests\\\\n19:05 - Deploying the contract to Fuel testnet\\\\n24:10 - Downloading the Fuel Wallet\\\\n26:12 - Building the front end\"",
    "lengthSeconds": "2221",
    "uploadDate": "2023-05-07",
    "thumbnail_url": "https://i.ytimg.com/vi/S6Fln4SreeQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=qw83M7f1LI0",
    "title": "Building a Custom Module with Lens Protocol from Scratch",
    "tags": "film, udost",
    "scraped_at": 1684586043.2725387,
    "genre": "Entertainment",
    "views": "591",
    "desc": "Modules allow developers to program (and users to leverage) unique, custom functionality on follow, collect and reference (i.e. mirrors and comments). This opens the door to exciting new community-created features that greatly expand on the basic Lens Protocol social graph.\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Docs - https://docs.lens.xyz/docs/module-interfaces\\\\n\\\\nIn this video, you\\'ll learn how to build and deploy a custom module that only allows someone to follow another user if they know their secret code.\\\\n\\\\nBy the end of the video you should have a basic grasp of how custom modules work and how to start building and testing with them.\"",
    "lengthSeconds": "909",
    "uploadDate": "2023-04-26",
    "thumbnail_url": "https://i.ytimg.com/vi/qw83M7f1LI0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=oedDOaqjPgo",
    "title": "Building a ChatGPT Plugin with TypeScript and Next.js: a Step-by-Step Guide",
    "tags": "film, udost",
    "scraped_at": 1684586043.6555398,
    "genre": "Entertainment",
    "views": "3270",
    "desc": "In this video you\\'ll learn how to build a chatGPT Plugin from scratch using Next.js and TypeScript in less than 26 minutes.\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Codebase - https://github.com/dabit3/nextjs-chatgpt-plugin-starter\\\\n\\xf0\\x9f\\x94\\x97 Docs - https://platform.openai.com/docs/plugins/introduction\\\\n\\\\nWe\\'ll start by giving an rundown of what technologies you might use to build a plugin with TypeScript or JavaScript and an overview of the app we\\'ll be building.\\\\n\\\\nNext we\\'ll scaffold out a new Next.js app and configure the files we need for our plugin to work.\\\\n\\\\nAfter the configuration is set up, we\\'ll create the API routes that our plugin will be using and set up a basic, local store to hold the state updates.\\\\n\\\\nFinally we\\'ll test it out by running it in the ChatGPT console.\\\\n\\\\nBy the end of this video you should have a good understanding of how to build a ChatGPT plugin from scratch using Next.js and TypeScript.\\\\n\\\\n0:00 - Introduction\\\\n2:35 - Scaffolding the Next.js app\\\\n5:45 - Configuring headers in Next.js config\\\\n6:25 - Creating the OpenAI manifest\\\\n8:52 - Creating the OpenAPI configuration\\\\n13:09 - Creating the routes\\\\n22:20 - Testing it out\"",
    "lengthSeconds": "1556",
    "uploadDate": "2023-04-25",
    "thumbnail_url": "https://i.ytimg.com/vi/oedDOaqjPgo/maxresdefault.jpg"
  },
  {
    "link": "watch?v=bfkalDSvRDc",
    "title": "Build Your First Sybil-Resistant Web App with Gitcoin Passport & Next.js: A Step-by-Step Guide",
    "tags": "film, udost",
    "scraped_at": 1684586043.5505414,
    "genre": "Entertainment",
    "views": "1166",
    "desc": "In this beginner-friendly tutorial, I\\'ll introduce you to the powerful Gitcoin Passport, which helps secure your web applications against Sybil attacks. \\\\n\\\\n\\xf0\\x9f\\x94\\x97 Code - https://gist.github.com/dabit3/10f93a001d75a1b44e5ec2001b33e4f6\\\\n\\xf0\\x9f\\x94\\x97 QuickStart Guide - https://docs.passport.gitcoin.co/building-with-passport/quick-start-guide\\\\n\\xf0\\x9f\\x94\\x97 Scorer Dashboard - https://scorer.gitcoin.co/\\\\n\\\\nFollow along as I walk you through the entire process, from initializing a new web application, to installing the required dependencies, to writing all of the code from scratch, to testing it out.\\\\n\\\\nBy the end of this video, you\\'ll have the knowledge to create your own secure web applications using Gitcoin Passport and Next.js.\"",
    "lengthSeconds": "1374",
    "uploadDate": "2023-04-24",
    "thumbnail_url": "https://i.ytimg.com/vi/bfkalDSvRDc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=b98UZ0Bqr7E",
    "title": "In Bulk and On Demand Queries with Lens BigQuery",
    "tags": "film, udost",
    "scraped_at": 1684586043.9855385,
    "genre": "Entertainment",
    "views": "489",
    "desc": "In this video, I\\'ll introduce the Lens BigQuery API, demonstrate its capabilities using the Google Cloud Dashboard, and guide you through building a JavaScript project from scratch to query and store data locally.\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Docs - https://docs.lens.xyz/docs/public-big-query\\\\n\\xf0\\x9f\\x94\\x97 Codebase - https://github.com/dabit3\\\\n\\\\nBy the end of this tutorial you should have a good understanding of how to use the API to query all of the available data sets.\"",
    "lengthSeconds": "988",
    "uploadDate": "2023-04-10",
    "thumbnail_url": "https://i.ytimg.com/vi/b98UZ0Bqr7E/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Sb7U32kXMB0",
    "title": "Fine-tuning GPT from Scratch in 15 Minutes with JavaScript",
    "tags": "film, udost",
    "scraped_at": 1684586049.3345385,
    "genre": "Entertainment",
    "views": "32530",
    "desc": "In this video you\\'ll learn how to build an application that fine-tunes GPT with custom data, from scratch, in less than 15 minutes.\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Codebase - https://github.com/dabit3/gpt-fine-tuning-with-nodejs\\\\n\\xf0\\x9f\\x94\\x97 Blog Post - https://nader.substack.com/p/supercharge-your-gpt-model-custom\\\\n\\xf0\\x9f\\x94\\x97 GPT Repository Loader - https://github.com/mpoon/gpt-repository-loader\\\\n\\\\nWe\\'ll start by creating a new project and installing the dependencies.\\\\n\\\\nWe\\'ll then walk through creating each interaction from modeling the data, to uploading it to OpenAI, and testing it out.\\\\n\\\\nBy the end of the video you should be able to build out your own custom models.\\\\n\\\\n0:00 - Introduction\\\\n1:16 - Project setup\\\\n6:10 - Creating training data\\\\n7:22 - Creating local API interface\\\\n8:25 - Uploading training data\\\\n9:30 - Creating the fine tune with the training data\\\\n10:55 - Fetching and listing the fine tunes\\\\n11:40 - Testing it out\"",
    "lengthSeconds": "881",
    "uploadDate": "2023-03-24",
    "thumbnail_url": "https://i.ytimg.com/vi/Sb7U32kXMB0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=lXkAx7XqR6A",
    "title": "Building Permanent, Immutable, and Stateful Serverless Functions with EXM and Arweave",
    "tags": "film, udost",
    "scraped_at": 1684586043.9215388,
    "genre": "Entertainment",
    "views": "1577",
    "desc": "In this video, you\\'ll learn how to build and deploy a CRUD application on EXM using JavaScript.\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Tutorial - https://dev.to/dabit3/introduction-to-execution-machine-exm-permanent-serverless-functions-3fhb\\\\n\\xf0\\x9f\\x94\\x97 Codebase - https://github.com/dabit3/execution-machine\\\\n\\\\nI\\'ll start with a brief overview of both Arweave and EXM, the we\\'ll jump into writing code by creating a Node.js application and writing all of the code from scratch.\\\\n\\\\nWe\\'ll install the dependencies, configure EXM, create an initial state for the applications, and set up actions for creating, updating, and deleting items from the state.\\\\n\\\\nBy the end of this tutorial you should have a good understanding of what EXM is and how it works.\\\\n\\\\n0:00 - Introduction\\\\n1:00 - Creating the API Key\\\\n1:15 - Initializing and configuring the Node.js project\\\\n3:08 - Configuring EXM connection\\\\n4:23 - Setting up initial state and handler function\\\\n8:51 - Reading application state\\\\n10:03 - Creating a new post\\\\n12:08 - Writing the deploy script\\\\n14:27 - Deploying and using the app\\\\n15:27 - Writing the update script\\\\n17:50 - Writing the delete script\\\\n19:52 - Writing out tests\\\\n24:24 - Wrapping up\"",
    "lengthSeconds": "1489",
    "uploadDate": "2023-01-28",
    "thumbnail_url": "https://i.ytimg.com/vi/lXkAx7XqR6A/maxresdefault.jpg"
  },
  {
    "link": "watch?v=qBPoVs66CxE",
    "title": "Web3 Social Login and Account Abstraction with Next.js and Biconomy",
    "tags": "film, udost",
    "scraped_at": 1684586046.7365654,
    "genre": "Entertainment",
    "views": "5008",
    "desc": "In this video you\\'ll learn how to implement social login and account abstraction in a web application with Biconomy and Next.js.\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Codebase - https://github.com/dabit3/biconomy-social-auth\\\\n\\xf0\\x9f\\x94\\x97 Social Login + relayer (pay gas in other ERC20 tokens) - https://github.com/dabit3/biconomy-social-login-gas-relayer\\\\n\\xf0\\x9f\\x94\\x97 Biconomy Documentation - https://biconomy.gitbook.io/sdk/introduction/overview\\\\n\\xf0\\x9f\\x94\\x97 Biconomy Website - https://www.biconomy.io/\\\\n\\\\n0:00 - Introduction to Biconomy and account abstraction\\\\n3:31 - Scaffolding and configuring the app\\\\n5:24 - Updating the entrypoint (index.tsx)\\\\n6:25 - Creating the Auth component\\\\n8:40 - Creating the login function\\\\n10:40 - Initializing a smart account\\\\n12:05 - Creating useEffect hook\\\\n13:40 - Creating the logout function\\\\n14:35 - Creating the UI\\\\n17:46 - Running the app\\\\n18:08 - Updating global CSS\\\\n18:38 - Testing the app\\\\n21:15 - Conclusion\"",
    "lengthSeconds": "1340",
    "uploadDate": "2023-01-01",
    "thumbnail_url": "https://i.ytimg.com/vi/qBPoVs66CxE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=qs6OE9kef6I",
    "title": "Building a Full Stack Social Mobile App in 15 minutes with Expo, React Native, and Lens Protocol",
    "tags": "film, udost",
    "scraped_at": 1684586044.8625398,
    "genre": "Entertainment",
    "views": "6100",
    "desc": "\\xf0\\x9f\\x94\\x97 React Native Lens UI Kit: https://github.com/lens-protocol/react-native-lens-ui-kit\\\\n\\xf0\\x9f\\x94\\x97 Example codebase: https://github.com/dabit3/react-native-lens-example\\\\n\\xf0\\x9f\\x94\\x97 Lens Docs: https://docs.lens.xyz/\\\\n\\\\nIn this video you\\'ll learn how to quickly build full stack mobile apps with social networking features using Expo, React Native, and Lens Protocol.\\\\n\\\\nI\\'ll start by giving a brief introduction to Lens and React Native Lens UI Kit, the library we\\'ll be using to build our app.\\\\n\\\\nFrom there, we\\'ll start building our app using a new Expo app adding features like a list of profiles, profile details, comment details, themeing, and viewing other people\\'s followers.\\\\n\\\\nBy the end of this video you should be able to get started building mobile apps with Expo and React Native Lens UI Kit.\\\\n\\\\n0:00 - Introduction to Lens\\\\n1:52 - React Native Lens UI Kit\\\\n4:14 - The Profiles component\\\\n8:27 - Profile Details component\\\\n12:14 - The LensProvider\\\\n14:25 - Viewing other user\\'s followers\\\\n16:55 - Viewing a list of comments on a publication\"",
    "lengthSeconds": "1133",
    "uploadDate": "2022-12-22",
    "thumbnail_url": "https://i.ytimg.com/vi/qs6OE9kef6I/maxresdefault.jpg"
  },
  {
    "link": "watch?v=M_CeggIzrzw",
    "title": "Introduction to Lens for Developers",
    "tags": "film, udost",
    "scraped_at": 1684586043.4145396,
    "genre": "Entertainment",
    "views": "3656",
    "desc": "In this video, you\\'ll learn what Lens Protocol is, how it works, and how to get started building on Lens.\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Lens Docs - https://docs.lens.xyz/\\\\n\\xf0\\x9f\\x94\\x97 Developer Quickstart - https://docs.lens.xyz/docs/developer-quickstart\\\\n\\xf0\\x9f\\x94\\x97 Lensverse - https://aave.notion.site/Lensverse-a5926eab1d8148eda10053af9f4e28a0\"",
    "lengthSeconds": "508",
    "uploadDate": "2022-11-28",
    "thumbnail_url": "https://i.ytimg.com/vi/M_CeggIzrzw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=cGLMN5A2C4E",
    "title": "Building Full Stack Permanent Applications with Arweave, Smartweave, and Next.js",
    "tags": "film, udost",
    "scraped_at": 1684586046.3015385,
    "genre": "Entertainment",
    "views": "3772",
    "desc": "In this video you\\'ll learn how to build full stack dapps on Arweave with Smartweave, Warp, and Next.js.\\\\n\\\\nThe application we\\'ll be building is a full stack blog implementing CRUD operations (Create, Read, Update, and Delete), meaning that you will have an open, public, and composable back end that can be transferred and reused anywhere (not only in this app).\\\\n\\\\nI think this is a good example as it\\'s not too basic as to be boring, but not too complex as to be confusing. It shows how to do most of the basic things you\\'ll need and want to understand in order to build more complex and sophisticated applications going forward.\\\\n\\\\n\\xf0\\x9f\\x93\\x9d Smartweave TLDR\\\\n- Code a smart contracts in JS\\\\n- Execute arbitrary amounts of compute without additional fees\\\\n- Never have to worry about gas optimizations\\\\n- No state bloat\\\\n- Can directly process rich content / large files\\\\n- Warp offers enhancements (speed, caching, sdks\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Tutorial\\\\nhttps://dev.to/dabit3/building-full-stack-applications-with-arweave-and-nextjs-28hg\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Codebase\\\\nhttps://github.com/dabit3/full-stack-warp-arweave\\\\n\\\\n0:00 - Introduction\\\\n01:33 - Introduction to Warp\\\\n03:15- Project setup\\\\n06:30 - Configuring Warp contract and initial state\\\\n15:19 - Configuring Warp SDK\\\\n21:30 - Creating deployment script\\\\n25:05 - Reading state from Warp\\\\n26:50 - Creating a post\\\\n28:55 - Testing it out\\\\n30:25 - Using the Sonar block explorer\\\\n31:12 - Configuring Warp on the client\\\\n34:18 - Creating posts on the client\\\\n41:00 - Updating app entrypoint and reading posts from Warp\\\\n47:00 - Updating _app.js to add navigation\\\\n48:39 - Testing it out\"",
    "lengthSeconds": "3060",
    "uploadDate": "2022-11-11",
    "thumbnail_url": "https://i.ytimg.com/vi/cGLMN5A2C4E/maxresdefault.jpg"
  },
  {
    "link": "watch?v=mIJKa2-2p8w",
    "title": "The Lens GraphQL API in 90 Seconds",
    "tags": "film, udost",
    "scraped_at": 1684586044.6055386,
    "genre": "Entertainment",
    "views": "2909",
    "desc": "One of the reasons the Lens API is so powerful and flexible is because it uses GraphQL. In this video, I give a brief overview of how you can start using it and testing it out before you even start building your app.\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Docs\\\\nhttps://docs.lens.xyz/docs\\\\n\\\\n\\xf0\\x9f\\x94\\x97 API Playground\\\\nhttps://api.lens.dev/\"",
    "lengthSeconds": "90",
    "uploadDate": "2022-11-09",
    "thumbnail_url": "https://i.ytimg.com/vi/mIJKa2"
  },
  {
    "link": "watch?v=uelA2U9TbgM",
    "title": "Smart Contract Development with Foundry",
    "tags": "solidity, web3, blockchain, foundry",
    "scraped_at": 1684586043.3505385,
    "genre": "Entertainment",
    "views": "13250",
    "desc": "In this video you\\'ll learn how to build, test, and deploy smart contracts with Solidity using Foundry. We\\'ll start with an overview of the various CLIs and libraries that make up Foundry, what they do, and how to install them.\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Foundry Tutorial - https://nader.mirror.xyz/6Mn3HjrqKLhHzu2balLPv4SqE5a-oEESl4ycpRkWFsc\\\\n\\xf0\\x9f\\x94\\x97 Foundry Cheatsheet - https://github.com/dabit3/foundry-cheatsheet\\\\n\\xf0\\x9f\\x94\\x97 Foundry Book - https://book.getfoundry.sh/\\\\n\\xf0\\x9f\\x94\\x97 Foundry GitHub - https://github.com/foundry-rs/foundry\\\\n\\\\nWe\\'ll then spin up a new project, walk through the file structure, and create an example smart contract. From there we\\'ll create and run tests for the contract. Next, we\\'ll run a local test Ethereum network, deploy the contract to the network, and use cast to call end execute transactions to the test network.\\\\n\\\\nWe\\'ll then deploy the to Optimism to show how to deploy to a live network. Finally, we\\'ll create an ERC721 contract and learn how to mock users to test out various functions like minting a token, transferring a token, and burning a token.\\\\n\\\\nBy the end of this video, you should have a good understanding of how Foundry works and how to use it to build, test, and deploy smart contracts.\\\\n\\\\n0:00 - Introduction\\\\n03:15 - Creating a new project\\\\n04:13 - Remappings\\\\n05:35 - Compiling and ABIs\\\\n06:00 - Creating the first contract\\\\n08:13 - Writing tests\\\\n14:28 - Deploying to the local network\\\\n18:33 - Using cast to make contract calls\\\\n20:59 - Deploying to Optimism\\\\n23:06 - Testing an ERC721 contract\"",
    "lengthSeconds": "2053",
    "uploadDate": "2022-06-22",
    "thumbnail_url": "https://i.ytimg.com/vi/uelA2U9TbgM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=LcxOdWWL8xs",
    "title": "Full Stack Web3 with Lens Protocol, Next.js, and GraphQL - Building a Social Media App",
    "tags": "web3, graphql, next.js, blockchain",
    "scraped_at": 1684586044.4575396,
    "genre": "Entertainment",
    "views": "18310",
    "desc": "In this video you\\'ll learn how to use Lens Protocol to build out a basic social media application.\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Lens Protocol Starter - https://github.com/dabit3/lens-protocol-frontend\\\\n\\xf0\\x9f\\x94\\x97 Lens Protocol Subgraph - https://github.com/protofire/lens-protocol-subgraph\\\\n\\xf0\\x9f\\x94\\x97 Example codebase from tutorial - https://github.com/dabit3/lens-youtube-tutorial\\\\n\\xf0\\x9f\\x94\\x97 Lens Protocol Developer Docs - https://lens.xyz/garden\\\\n\\\\nWe\\'ll create a new Next.js app, install our dependencies, then query for user profiles. We\\'ll then update the UI to list profiles and their metadata, and allow users to click on a profile and navigate to an individual profile view to see the user\\'s posts.\\\\n\\\\nNext we\\'ll add a follow button to initialize a transaction in the smart contract to enable \\\\\"",
    "lengthSeconds": "2793",
    "uploadDate": "2022-05-31",
    "thumbnail_url": "https://i.ytimg.com/vi/LcxOdWWL8xs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=zFm6T7fXL8U",
    "title": "Up and Running with Rainbow Kit - Easy to Add Wallet Connection for your Dapp (web3 Tutorial)",
    "tags": "film, udost",
    "scraped_at": 1684586044.6725397,
    "genre": "Entertainment",
    "views": "6037",
    "desc": "In this video we\\'ll take a quick look at how to get up and running adding wallet connection to your dapp with Rainbow Kit.\"",
    "lengthSeconds": "356",
    "uploadDate": "2022-05-06",
    "thumbnail_url": "https://i.ytimg.com/vi/zFm6T7fXL8U/maxresdefault.jpg"
  },
  {
    "link": "watch?v=aUU-eHCB6j8",
    "title": "Permanent File Storage for Web3 Applications with Arweave, Bundlr, and Next.js (Full Stack Guide)",
    "tags": "film, udost",
    "scraped_at": 1684586044.9435391,
    "genre": "Entertainment",
    "views": "5872",
    "desc": "\\xf0\\x9f\\x94\\x97 Code for this example is located here: https://github.com/dabit3/bundlr-arweave-example\\\\n\\xf0\\x9f\\x94\\x97 Arwiki: https://arwiki.wiki/#/en/main\\\\n\\xf0\\x9f\\x94\\x97 Arweave website: https://www.arweave.org/\\\\n\\xf0\\x9f\\x94\\x97 Bundlr docs: https://bundlr.network/\\\\n\\\\nIn this video you\\'ll learn how to use Arweave and Bundlr to permanently store files like images and videos to the Arweave permaweb with a single transaction fee. We\\'ll start by creating a new Next.js application and adding the necessary dependencies.\\\\n\\\\nFrom there, we\\'ll build out a form that allows users to fund their wallet. We\\'ll then build out a file upload mechanism that lets users upload files and store them permanently to Arweave using popular low cost networks like Matic, Arbitrum, and Solana.\\\\n\\\\nBy the end of this video you should have a good understanding of how to build full stack applications with Bundlr and Arweave.\\\\n\\\\n0:00 - Introduction to Arweave and Bundlr\\\\n2:04 - Project setup\\\\n3:00 - Connecting to Bundlr Network\\\\n7:40 - Checking the user\\'s balance\\\\n12:10 - Managing state across pages with React context\\\\n18:00 - Configuring component state in index.js\\\\n20:40 - Creating a form to fund wallet\\\\n26:00 - Enabling file upload\\\\n32:03 - Conclusion\"",
    "lengthSeconds": "1992",
    "uploadDate": "2022-05-05",
    "thumbnail_url": "https://i.ytimg.com/vi/aUU"
  },
  {
    "link": "watch?v=nRMo5jjgCr4",
    "title": "The Complete Guide to Full Stack Web3 Development",
    "tags": "web3, blockchain, solidity, Polygon, dapp development",
    "scraped_at": 1684586050.0835395,
    "genre": "Entertainment",
    "views": "25518",
    "desc": "\\xf0\\x9f\\x94\\x97 Written tutorial: https://dev.to/edge-and-node/the-complete-guide-to-full-stack-web3-development-4g74\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Codebase: https://github.com/dabit3/full-stack-web3\\\\n\\\\nIn this in depth guide you\\'ll learn the tools, protocols, and frameworks for building full stack web3 apps, and most importantly - how to put everything together to lay the groundwork for building out any of your own ideas in the future.\\\\n\\\\nSome of the tools, languages, and protocols we\\'ll be covering include JavaScript, React, Next.js, Solidity, Hardhat, Polygon, The Graph, and Radicle.\"",
    "lengthSeconds": "7570",
    "uploadDate": "2022-04-09",
    "thumbnail_url": "https://i.ytimg.com/vi/nRMo5jjgCr4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=VRK17Ai33Dw",
    "title": "Building a Custom NFT API with Filtering, Sorting, Full Text Search, and Relationships",
    "tags": "graphql, web3, nft, apis, dapps, dapp development",
    "scraped_at": 1684586049.4765646,
    "genre": "Entertainment",
    "views": "10247",
    "desc": "\\xf0\\x9f\\x94\\x97 Workshop: https://github.com/dabit3/custom-nft-subgraph-workshop\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Codebase: https://github.com/dabit3/cryptocoven-api\\\\n\\\\nIn this video you\\'ll learn how to build a custom API from any smart contract. In our example, we\\'ll be using an NFT smart contract from the CryptoCoven project.\\\\n\\\\nWe\\'ll start by giving an overview of what The Graph is and how it works. We\\'ll then take a look at the smart contract that we\\'ll be building an API for and inspecting the metadata. From there, we\\'ll use The Graph dashboard and The Graph CLI to build and deploy our subgraph and test out the queries.\\\\n\\\\nBy the end of this video you should have a good understanding of how to build your own APIs using The Graph, and how The Graph works.\"",
    "lengthSeconds": "1994",
    "uploadDate": "2022-03-10",
    "thumbnail_url": "https://i.ytimg.com/vi/VRK17Ai33Dw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=MhoRiH2podI",
    "title": "Censorship-resistant Git Hosting with Radicle",
    "tags": "web3, blockchain, dapp development, radicle",
    "scraped_at": 1684586043.1215389,
    "genre": "Entertainment",
    "views": "4184",
    "desc": "In this video I\\'ll show how to use Radicle - both the Radicle CLI as well as the network - to host your app source code on a decentralized network instead of relying on a centralized service like GitHub or Bitbucket.\\\\n\\\\nRadicle:\\\\nhttps://radicle.xyz/\\\\n\\\\nRadicle CLI:\\\\nhttps://github.com/radicle-dev/radicle-cli\"",
    "lengthSeconds": "644",
    "uploadDate": "2022-03-03",
    "thumbnail_url": "https://i.ytimg.com/vi/MhoRiH2podI/maxresdefault.jpg"
  },
  {
    "link": "watch?v=jSqTzZk9UMg",
    "title": "How to Build a Full Stack GitHub OAuth Flow with Supabase and React",
    "tags": "supabase, react, javascript, authentication, oauth",
    "scraped_at": 1684586043.194539,
    "genre": "Entertainment",
    "views": "5015",
    "desc": "In this video we\\'ll build a full stack GitHub OAuth flow from scratch with Supabase and React. \\\\n\\\\nBlog post:\\\\nhttps://dev.to/dabit3/10-minute-tutorial-full-stack-github-authentication-with-supabase-react-3c6b\\\\n\\\\nCode:\\\\nhttps://github.com/dabit3/supabase-github-oauth\"",
    "lengthSeconds": "381",
    "uploadDate": "2021-09-22",
    "thumbnail_url": "https://i.ytimg.com/vi/jSqTzZk9UMg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=jssRnV5Ob6A",
    "title": "What is .eth? ENS Domains explained, how to buy one, and how to link it to your Ethereum wallet.",
    "tags": "film, udost",
    "scraped_at": 1684586044.21254,
    "genre": "Entertainment",
    "views": "42913",
    "desc": "In this video I\\'ll talk about what an ENS domain name is, how they work, and why people are using them.\\\\n\\\\nThanks to Moritz Mentges (https://unsplash.com/@mphotographym) for the cover image from Unsplash.\"",
    "lengthSeconds": "375",
    "uploadDate": "2021-08-20",
    "thumbnail_url": "https://i.ytimg.com/vi/jssRnV5Ob6A/maxresdefault.jpg"
  },
  {
    "link": "watch?v=t9gWZYJxk7c",
    "title": "Sign In with Ethereum and Decentralized Identity with Ceramic, IDX, React, and 3ID Connect",
    "tags": "React, IDX, Ceramic Network, Blockchain, authentication",
    "scraped_at": 1684586044.783539,
    "genre": "Entertainment",
    "views": "9601",
    "desc": "In this video we\\'ll build out an identity management system for creating, reading, and updating a user\\'s profile using their Ethereum wallet.\\\\n\\\\nCode\\\\nhttps://gist.github.com/dabit3/ba326e47e4882073bd6342dc1998fd16\\\\n\\\\nCeramic Docs\\\\nhttps://developers.ceramic.network/\\\\n\\\\nIDX Docs\\\\nhttps://developers.idx.xyz/\\\\n\\\\nSign-in with Ethereum Proposal\\\\nhttps://twitter.com/ensdomains/status/1414618006710329347\\\\n\\\\nViral Twitter Thread\\\\nhttps://twitter.com/BrantlyMillegan/status/1402388133086367751\\\\n\\\\nDecentralized Identity\\\\nhttps://github.com/dabit3/decentralized-identity-example\\\\n\\\\nVitalik\\'s Talk at ETHCC\\\\nhttps://www.youtube.com/watch?v=oLsb7clrXMQ\"",
    "lengthSeconds": "1330",
    "uploadDate": "2021-08-11",
    "thumbnail_url": "https://i.ytimg.com/vi/t9gWZYJxk7c/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ogEitL8RwtQ",
    "title": "Supabase in 6 Minutes - Building a Full Stack App with Supabase and React",
    "tags": "supabase, react, javascript, serverless",
    "scraped_at": 1684586045.8515396,
    "genre": "Entertainment",
    "views": "26419",
    "desc": "Learn how to build a full stack app with React, Supabase, and Postgres in 6 minutes. We\\'ll start by creating a new Supabase project, initializing a new PostgreSQL table, and adding rows for the post title and content.\\\\n\\\\nNext, we\\'ll install the Supabase library using NPM or Yarn, and configure a client to connect with the Supabase API. Using the Supabase client, we\\'ll create a basic app that allows users to create and read posts from the Supabase back end.\\\\n\\\\nBy the end of this video, you should have a good idea of how to get up and running with building full stack apps using Supabase.\\\\n\\\\nThanks to Supabase for being a sponsor of my channel. \\xf0\\x9f\\x9a\\x80\"",
    "lengthSeconds": "374",
    "uploadDate": "2021-08-05",
    "thumbnail_url": "https://i.ytimg.com/vi/ogEitL8RwtQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=hUSzdIOrlY4",
    "title": "Moving Your Full Stack Development Environment to the Cloud with Next.js, Gitpod, and Vercel",
    "tags": "gitpod, vercel, next.js",
    "scraped_at": 1684586043.7225394,
    "genre": "Entertainment",
    "views": "2408",
    "desc": "In this video we\\'ll learn how to move your full stack serverless development environment to the cloud with Next.js, Gitpod, and Vercel, enabling you to develop and iterate on full stack web applications from any machine including tablets, Chromebooks, and brand new environments without any previous setup. All you need is a web browser.\\\\n\\\\nLink to repo:\\\\nhttps://github.com/wutali/nextjs-netlify-blog-template\\\\n\\\\nThanks to Gitipod for being a sponsor of my channel. \\xf0\\x9f\\x9a\\x80\"",
    "lengthSeconds": "289",
    "uploadDate": "2021-08-02",
    "thumbnail_url": "https://i.ytimg.com/vi/hUSzdIOrlY4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=tXSF7lIQouQ",
    "title": "Moving my Ethereum Development Environment to the Cloud with Gitpod",
    "tags": "gitpod",
    "scraped_at": 1684586048.9425395,
    "genre": "Entertainment",
    "views": "4110",
    "desc": "\\xf0\\x9f\\x9b\\xa0 Deploy and Start Coding Any GitHub Repo with One Click\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Repository:\\\\nhttps://github.com/dabit3/polygon-ethereum-nextjs-marketplace\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Docs:\\\\nhttps://www.gitpod.io/docs/\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Deploy to Gitpod:\\\\nhttps://gitpod.io/#github.com/dabit3/polygon-ethereum-nextjs-marketplace\\\\n\\\\n\\xf0\\x9f\\x99\\x82 Subscribe to my channel: https://www.youtube.com/naderdabit\\\\n\\\\nIn this video, I show you how to move your entire development environment to the cloud with Gitpod. What if we could make *any* Github repository run with just a single click of a button? Including setup scripts, processes, and everything else that goes along with it?\\\\n\\\\nThat\\'s what we\\'ll learn how to do in this video. You can now build full stack apps with nothing but a web browser - from a tablet, iPad, chrome book, or any other environment with no setup necessary.\\\\n\\\\nThanks to Gitpod for being a sponsor of my channel. \\xf0\\x9f\\x9a\\x80\"",
    "lengthSeconds": "1032",
    "uploadDate": "2021-07-15",
    "thumbnail_url": "https://i.ytimg.com/vi/tXSF7lIQouQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=GKJBEEXUha0",
    "title": "How to Build a Full Stack NFT Marketplace on Ethereum with Polygon and Next.js - [2021 Tutorial]",
    "tags": "solidity, ethereum, javascript, blockchain, blockchain development",
    "scraped_at": 1684586049.8315384,
    "genre": "Entertainment",
    "views": "309631",
    "desc": "\\xf0\\x9f\\x9a\\xa8 Update - Be sure to install ipfs-http-client@50.1.2 instead of ipfs-http-client for this to work properly\\\\n\\\\n\\xf0\\x9f\\x99\\x82 Subscribe to my channel: https://www.youtube.com/naderdabit\\\\n\\\\n\\xf0\\x9f\\x94\\xb5 Follow me on Twitter: https://twitter.com/dabit3\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Step by step article:\\\\nhttps://dev.to/dabit3/building-scalable-full-stack-apps-on-ethereum-with-polygon-2cfb\\\\n\\\\n\\xf0\\x9f\\x94\\x97 Source code\\\\nhttps://github.com/dabit3/polygon-ethereum-nextjs-marketplace/\\\\n\\\\nIn this video, you\\'ll learn how to build a full stack NFT marketplace on Ethereum with Solidity, Polygon, IPFS, Next.js, Ethers.js, and Hardhat.\\\\n\\\\nWe\\'ll start from scratch, creating a new project and installing the dependencies. We\\'ll then write and test out the smart contracts. Once the tests have passed, we\\'ll write the front end code to connect the smart contracts.\\\\n\\\\nAfter testing on a local network, we\\'ll deploy to the Matic / Polygon network using a custom RPC provider (Infura).\\\\n\\\\n0:00 - Introduction\\\\n3:00 - Project initialization and configuration\\\\n17:40 - Creating an Ethereum wallet\\\\n21:20 - Coding the NFT smart contract\\\\n28:19 - Coding the Market smart contract\\\\n58:50 - Testing the contracts\\\\n1:10:57 - Updating _app.js\\\\n1:14:35 - Updating the home page\\\\n1:35:24 - Deploying to a local node\\\\n1:39:47 - Coding the create-item page\\\\n1:58:00 - Coding the my-assets page\\\\n2:03:10 - Coding the creator-dashboard page\\\\n2:09:25 - Deploying to Matic Mumbai Testnet\\\\n2:20:40 - Conclusion\"",
    "lengthSeconds": "8483",
    "uploadDate": "2021-07-14",
    "thumbnail_url": "https://i.ytimg.com/vi/GKJBEEXUha0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=oXWImFqsQF4",
    "title": "Magic Link Authentication and Route Controls with Supabase and Next.js - The Complete Guide [2021]",
    "tags": "supabase, next.js, nextjs, react, javascript, web development, webdev",
    "scraped_at": 1684586048.1695397,
    "genre": "Entertainment",
    "views": "17673",
    "desc": "In this video, we\\'ll build out a Next.js app that enables navigation, authentication, authorization, redirects (client and server-side), and a profile view with Supabase magic link authentication.\\\\n\\\\nCode:\\\\nhttps://github.com/dabit3/supabase-nextjs-auth\\\\n\\\\nWritten tutorial:\\\\nhttps://dev.to/dabit3/magic-link-authentication-and-route-controls-with-supabase-and-next-js-leo\\\\n\\\\n0:00 - Intro\\\\n2:00 - Project setup\\\\n7:25 - Creating the sign in page\\\\n10:45 - Creating the profile page\\\\n17:33 - Creating the API route\\\\n18:25 - Updating _app.js to acc navigation and auth state\\\\n27:49 - Creating the protected page\\\\n30:11 - Running the project\\\\n32:00 - Conclusion\\\\n\\\\nThanks to Supabase for being a sponsor of my channel. \\xf0\\x9f\\x9a\\x80\"",
    "lengthSeconds": "1944",
    "uploadDate": "2021-07-13",
    "thumbnail_url": "https://i.ytimg.com/vi/oXWImFqsQF4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=4Pm1Furz5HM",
    "title": "Solidity by Example - Digital Marketplace",
    "tags": "solidity, ethereum, programming, blockchain, defi",
    "scraped_at": 1684586044.377539,
    "genre": "Science",
    "views": "16533",
    "desc": "In this video, you\\'ll learn how to program a digital marketplace into a smart contract with Solidity. The program will allow users to mint digital assets and then put them up for sale in a marketplace that will securely transfer the sales price from buyer to seller upon the completion of a sales transaction.\\\\n\\\\nThe contract will also enable the owner to set a listing price and have the value transferred to them upon the completion of a sale.\\\\n\\\\nCode:\\\\nhttps://gist.github.com/dabit3/52e818faa83449bb5303cb868aee78f5\\\\n\\\\nERC721:\\\\nhttps://docs.openzeppelin.com/contracts/2.x/api/token/erc721\\\\n\\\\n0:00\\xe2\\x80\\x8b - Introduction\\\\n0:56 - Creating the NFT contract\\\\n9:15 - Creating the marketplace contract\\\\n30:26 - Testing the contract\\\\n36:08 - Conclusion\"",
    "lengthSeconds": "2199",
    "uploadDate": "2021-06-23",
    "thumbnail_url": "https://i.ytimg.com/vi/4Pm1Furz5HM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=GB3hiiNNDjk",
    "title": "Solidity by Example - Deploying a Voting Smart Contract",
    "tags": "solidity, smart contract development, dapp development, dapps",
    "scraped_at": 1684586043.483541,
    "genre": "Entertainment",
    "views": "28973",
    "desc": "In this video we\\'ll walk through and then deploy a smart contract for enabling electronic voting. The contract will also enable voting delegation. The vote counting is automatic and completely transparent at the same time.\\\\n\\\\nI\\'ll walk through the entire codebase and explain how everything works, including showing how to create a bytes32 value from a string, and then how to transform a bytes32 back into a string.\\\\n\\\\nWell also change the contract so that it accepts different data types into the constructor and talk about the tradeoffs between each type of data type.\"",
    "lengthSeconds": "1678",
    "uploadDate": "2021-04-30",
    "thumbnail_url": "https://i.ytimg.com/vi/GB3hiiNNDjk/maxresdefault.jpg"
  },
  {
    "link": "watch?v=-J_IwifPj7I",
    "title": "How to be a Developer on Twitter - 6 Ways to Game the Twitter Algorithm",
    "tags": "webdev, web development, programming, javascript, twitter",
    "scraped_at": 1684586044.0665398,
    "genre": "Entertainment",
    "views": "8300",
    "desc": "I hope you don\\'t take this personally.\"",
    "lengthSeconds": "211",
    "uploadDate": "2021-04-28",
    "thumbnail_url": "https://i.ytimg.com/vi/"
  },
  {
    "link": "watch?v=Nz4Ra1uSOAc",
    "title": "Breaking Into Freelancing & Consulting as a Developer - How I made over $400,000 Per Year",
    "tags": "software consulting, freelancing, consulting, web development",
    "scraped_at": 1684586046.120544,
    "genre": "Entertainment",
    "views": "10069",
    "desc": "In this video I talk about how to break into freelancing and consulting, how to be successful at it, and how I made over $400k a year as a software consultant. The video is broken up into a few main focus areas that I think are important in building a funnel, landing clients, and increasing your rates.\\\\n\\\\nThe Prosperous Software Consultant\\\\nhttps://medium.com/@dabit3/the-prosperous-software-consultant-5dc8d705c5dd\\\\n\\\\n0:00 Introduction\\\\n2:04 Specialization\\\\n3:55 Online presence\\\\n5:30 Content marketing\\\\n8:18 Building bridges\\\\n9:40 Networking\\\\n13:48 Web funnel\\\\n14:37 Pricing\\\\n18:43 Conclusion\"",
    "lengthSeconds": "1178",
    "uploadDate": "2021-04-27",
    "thumbnail_url": "https://i.ytimg.com/vi/Nz4Ra1uSOAc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=a0osIaAOFSE",
    "title": "The Complete Guide to Full Stack Ethereum Development - Tutorial for Beginners",
    "tags": "defi, solidity, blockchain, ethereum, javascript, react, web3",
    "scraped_at": 1684586049.9125388,
    "genre": "Entertainment",
    "views": "136156",
    "desc": "** Some of the code for this tutorial has been updated due to breaking changes. If you\\'re coding along, follow the steps outlined here: https://dev.to/dabit3/the-complete-guide-to-full-stack-ethereum-development-3j13 **\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to build a modern full stack dApp on the Ethereum blockchain with React, Solidity, Hardhat, and Ethers.js. We\\xe2\\x80\\x99ll start from scratch, creating a React application, installing the dependencies, and initializing a new local Hardhat Ethereum environment.\\\\n\\\\nNext, we\\xe2\\x80\\x99ll create a couple of different smart contracts in Solidity, compile them, and deploy them to a local blockchain node that we will also initialize using Hardhat. We\\xe2\\x80\\x99ll then learn how to deploy the smart contracts to a real live test network.\\\\n\\\\nWe\\xe2\\x80\\x99ll then connect the React front end to allow users to read data from the blockchain as well as create transactions with MetaMask using test Ether that we create using accounts created by our local test environment.\\\\n\\\\nFinally, we\\xe2\\x80\\x99ll learn how to create and mint real ERC20 tokens, as well as how to rapidly prototype smart contracts using the Remix IDE.\\\\n\\\\nBy the end of this guide, you should have a good understanding of how to build modern dApps with React and Solidity on the Ethereum blockchain.\\\\n\\\\nCode: https://github.com/dabit3/full-stack-ethereum\\\\n\\\\n0:00 - Introduction\\\\n1:09 - Initializing and configuring the project\\\\n5:49 - Our first smart contract\\\\n10:20 - Compiling the smart contract\\\\n11:35 - Starting a local blockchain node\\\\n12:30 - Deploying the smart contract\\\\n14:10 - Installing MetaMask\\\\n17:40 - Writing the front end code\\\\n30:10 - Deploying to a live test network (Ropsten)\\\\n37:50 - Creating a Token contract\\\\n43:30 - Creating the Token front end\\\\n50:15 - ERC20 Tokens\\\\n54:40 - Remix IDE\\\\n59:54 - Conclusion\"",
    "lengthSeconds": "3665",
    "uploadDate": "2021-04-15",
    "thumbnail_url": "https://i.ytimg.com/vi/a0osIaAOFSE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=MyGLx2BK7pw",
    "title": "I Left AWS After 3 Years - Here's the Direction I'm Headed",
    "tags": "Cryptocurrency, JavaScript, Web Development, Computer Science, DeFi",
    "scraped_at": 1684586046.3685398,
    "genre": "Entertainment",
    "views": "9407",
    "desc": "I left AWS after working as a Developer Advocate for over 3 years on a wonderful team and technology. A lot of people have asked me where I\\'m headed next, so I decided to make a video to talk about not only where I\\'m headed, but also where my YouTube channel is headed.\"",
    "lengthSeconds": "299",
    "uploadDate": "2021-04-02",
    "thumbnail_url": "https://i.ytimg.com/vi/MyGLx2BK7pw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Ek4dvNQLFhY",
    "title": "Building a GraphQL API on AWS with Amazon Neptune Graph Database, AppSync, TypeScript, and CDK",
    "tags": "aws cdk, aws appsync, graphql, cloud, aws, typescript, graph database, amazon neptune",
    "scraped_at": 1684586044.1435392,
    "genre": "Entertainment",
    "views": "4584",
    "desc": "In this video, I\\'ll walk through how to build a Neptune-backed AppSync GraphQL API with TypeScript, AWS CDK, AWS AppSync, and AWS Lambda.\\\\n\\\\nWe\\'ll start from scratch, creating a new CDK project, installing the dependencies, and writing the stack step by step. We\\'ll also create and walk through the GraphQL schema as well as the business logic that will run in Lambda.\\\\n\\\\nCode: https://github.com/dabit3/cdk-appsync-neptune\\\\nBlog post: https://dev.to/dabit3/building-a-graphql-api-on-aws-with-amazon-neptune-graph-database-and-cdk-428a\\\\n\\\\n0:00 - Introduction\\\\n1:28 - Creating the project\\\\n3:27 - Creating the GraphQL API\\\\n5:07 - Creating the Lambda function\\\\n7:25 - Create the Neptune cluster\\\\n10:18 - Writing the function code\\\\n18:31 - Deploying and testing the API\\\\n21:42 - Conclusion\"",
    "lengthSeconds": "1345",
    "uploadDate": "2021-04-01",
    "thumbnail_url": "https://i.ytimg.com/vi/Ek4dvNQLFhY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=tuOw0wumcOs",
    "title": "Building a Lightning Fast Serverless API on AWS with Fastify & AWS Amplify",
    "tags": "fastify, serverless, aws, javascript, node.js",
    "scraped_at": 1684586044.30054,
    "genre": "Entertainment",
    "views": "5109",
    "desc": "In this video we\\'ll build and deploy a Fastify web server to AWS, fine tuning the settings to optimize performance and achieve single digit millisecond latency.\\\\n\\\\nFine tune your Lambda settings with Lambda Power Tuning - https://github.com/alexcasalboni/aws-lambda-power-tuning\\\\n\\\\nBlog post - https://dev.to/aws/deep-dive-finding-the-optimal-resources-allocation-for-your-lambda-functions-35a6\\\\n\\\\n0:00 - Introduction\\\\n0:57 - Getting started - creating the project\\\\n2:45 - Writing the server\\\\n5:45 - Configuring Lambda settings\\\\n6:56 - Deploying the backend\\\\n7:08 - Testing it out \\\\u0026 viewing logs\\\\n9:09 - Conclusion\"",
    "lengthSeconds": "614",
    "uploadDate": "2021-03-05",
    "thumbnail_url": "https://i.ytimg.com/vi/tuOw0wumcOs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=KvwFXcY7erc",
    "title": "AWS Basics - Deploying a React App to AWS  in 24 Seconds",
    "tags": "serverless, aws amplify, javascript, webdev, react, aws",
    "scraped_at": 1684586043.8055396,
    "genre": "Entertainment",
    "views": "1646",
    "desc": "In this video you\\'ll learn how to use AWS Amplify Hosting\\'s drag-and-drop UI to deploy a React app to AWS Amplify\\'s global CDN, including over 200 points of presence around the world.\"",
    "lengthSeconds": "24",
    "uploadDate": "2021-03-01",
    "thumbnail_url": "https://i.ytimg.com/vi/KvwFXcY7erc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=T3vy3ksa4oc",
    "title": "Configuring Lambda Settings in an Amplify Project - Environment Variables, Memory, and Runtime",
    "tags": "aws amplify, serverless, aws lambda, javascript, node.js",
    "scraped_at": 1684586048.0975385,
    "genre": "Entertainment",
    "views": "2976",
    "desc": "In this video I show you how to configure Lambda settings in an Amplify project. We\\'ll walk through configuring the Node.js Runtime, the memory size, and 2 approaches for setting secret and non-secret environment variables.\\\\n\\\\nRelevant code:\\\\nhttps://gist.github.com/dabit3/26204fa900797697feeb8ae59b484a0e\\\\n\\\\n0:00 - Introduction\\\\n0:37 - Runtime \\\\u0026 memory configuration\\\\n3:05 - Configuring environment variables\\\\n6:29 - Configuring environment secrets\\\\n12:20 - Conclusion\"",
    "lengthSeconds": "801",
    "uploadDate": "2021-02-26",
    "thumbnail_url": "https://i.ytimg.com/vi/T3vy3ksa4oc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=LWhnS5elz4o",
    "title": "AWS Basics - Uploading Images to Amazon S3 from a Web Application",
    "tags": "aws amplify, react, javascript, amazon s3",
    "scraped_at": 1684586050.5255408,
    "genre": "Entertainment",
    "views": "9429",
    "desc": "In this video you\\'ll learn how to upload and download images to Amazon S3 from a React application.\\\\n\\\\nRelevant code: https://gist.github.com/dabit3/113df99cbd3aadfa35504cf84ca30287\"",
    "lengthSeconds": "843",
    "uploadDate": "2021-02-17",
    "thumbnail_url": "https://i.ytimg.com/vi/LWhnS5elz4o/maxresdefault.jpg"
  },
  {
    "link": "watch?v=DOGadkjV7Hs",
    "title": "Building an Authenticated GraphQL API on AWS with CDK - Enabling Admin Privileges and Multi-auth",
    "tags": "aws cdk, serverless, typescript, aws, aws appsync, amazon dynamodb, aws lambda",
    "scraped_at": 1684586046.8105395,
    "genre": "Entertainment",
    "views": "8219",
    "desc": "In this video I will create an AWS AppSync API with AWS CDK to build out a product API for a basic E Commerce backend.\\\\n\\\\nThe API will enable multiple authorization scenarios - both public and private access - to enable unauthenticated users to read and authenticated users who are part of an Admin group to create, update and delete products.\\\\n\\\\nWorkshop materials \\\\u0026 code:\\\\nhttps://github.com/dabit3/build-an-authenticated-api-with-cdk\\\\n\\\\n0:00 - Introduction\\\\n0:45 - Creating the project \\\\u0026 installing dependencies\\\\n2:04 - Creating the Cognito service\\\\n3:21 - Creating the AppSync API\\\\n8:55 - Creating the Lambda function\\\\n10:11 - Defining the resolvers\\\\n10:56 - Creating the DynamoDB table\\\\n12:35 - Creating the CFN outputs\\\\n13:36 - Writing the function code\\\\n24:00 - Running a build and deploying the services\\\\n25:31 - Testing it out\\\\n30:49 - Conclusion\"",
    "lengthSeconds": "1901",
    "uploadDate": "2021-02-12",
    "thumbnail_url": "https://i.ytimg.com/vi/DOGadkjV7Hs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Sk9HMuAaTmQ",
    "title": "Adding Users to DynamoDB using a Cognito Post-confirmation Lambda Trigger & Exposing a GraphQL API",
    "tags": "aws lambda, amazon dynamodb, aws amplify, react, amazon cognito, serverless",
    "scraped_at": 1684586047.900539,
    "genre": "Entertainment",
    "views": "18776",
    "desc": "In this video I\\'ll walk you through how to create a back end that implements an Amazon Cognito Post-confirmation Lambda Trigger that automatically stores users in Amazon DynamoDB after they have signed up. We\\'ll also look at how to manage access to the API using Cognito and Cognito Groups plus learn how to connect the services to a React app.\\\\n\\\\nI will be using AWS Amplify to build the infrastructure as well as on the client to connect to the services.\\\\n\\\\nRelevant code: https://gist.github.com/dabit3/5dd7069c91e46ee015c828c5384edb0f\\\\n\\\\n0:00 - Introduction\\\\n0:45 - Project setup\\\\n1:34 - Adding the authentication service\\\\n2:59 - Writing the code for the Lambda Trigger\\\\n4:18 - Adding the GraphQL API\\\\n5:15 - Configuring permissions and environment variables\\\\n7:26 - Writing the front-end code\\\\n8:13- Testing it out\"",
    "lengthSeconds": "676",
    "uploadDate": "2021-02-11",
    "thumbnail_url": "https://i.ytimg.com/vi/Sk9HMuAaTmQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Rc2sIPDrX_k",
    "title": "Building a Decentralized Peer-to-peer Messaging App with React & Node.js",
    "tags": "react, express, node.js, gun.js, p2p",
    "scraped_at": 1684586045.2425401,
    "genre": "Entertainment",
    "views": "20603",
    "desc": "In this video I will build a real-time \\\\u0026 offline-first P2P messaging application using Gun.js \\\\u0026 React.\\\\n\\\\nThe app that we will be building is a messaging app. We will be building both the server (Express) as well as the client (React).\\\\n\\\\nCode:\\\\nhttps://github.com/dabit3/react-p2p-messaging\\\\n\\\\nBlog post:\\\\nhttps://dabit3.hashnode.dev/how-to-build-a-decentralized-peer-to-peer-network-in-javascript-ckkwl6jnk00ysxps10o94gyzg\\\\n\\\\n0:00\\xe2\\x80\\x8b - Introduction\\\\n1:39\\xe2\\x80\\x8b - Project setup\\\\n2:29\\xe2\\x80\\x8b - Creating the server\\\\n3:20 - Creating the React app\\\\n4:00 - Writing the client-side code\\\\n10:55 - Running the app\\\\n14:14 - Conclusion\"",
    "lengthSeconds": "866",
    "uploadDate": "2021-02-08",
    "thumbnail_url": "https://i.ytimg.com/vi/Rc2sIPDrX_k/maxresdefault.jpg"
  },
  {
    "link": "watch?v=4P2jJRbtTck",
    "title": "Building an Authentication Flow with Next.js, TailwindCSS, & AWS Amplify - OAuth & Email + Password",
    "tags": "next.js, nextjs, serverless, jamstack, aws amplify, aws, tailwind, tailwindcss, javascript, react",
    "scraped_at": 1684586050.1685648,
    "genre": "Entertainment",
    "views": "17580",
    "desc": "In this video I build a custom authentication flow from scratch in a Nextj.s app using AWS Amplify, TailwindCSS. We implement email + password flow as well as sign in with Facebook and Google.\\\\n\\\\nThe code for this app is located here: https://github.com/dabit3/next.js-tailwind-authentication\\\\n\\\\n0:00 - Introduction\\\\n1:05 - Project setup\\\\n3:55 - Creating OAuth Client\\\\n5:57 - Creating Facebook OAuth App\\\\n6:40 - Creating authentication service on AWS\\\\n8:43 - Adding navigation\\\\n11:14 - Adding a profile view\\\\n13:38 - Configuring redirect URIs\\\\n17:10 - Testing the OAuth providers\\\\n24:12 - Creating the sign in screen\\\\n38:23 - Creating the social sign in screen\\\\n45:06 - Creating a reusable Input component\\\\n46:00 - Creating the sign in form\\\\n52:20 - Creating the sign up form\\\\n55:25 - Creating the MFA confirmation screen\\\\n58:11 - Creating the forgot password and forgot password submit screens\\\\n1:12:02 - Fixing bugs\\\\n1:19:28 - Adding a protected route\\\\n1:24:00 - Enabling SSR support\\\\n1:28:45 - Implementing the Amplify UI component\\\\n1:32:53 - Conclusion\"",
    "lengthSeconds": "5604",
    "uploadDate": "2021-01-28",
    "thumbnail_url": "https://i.ytimg.com/vi/4P2jJRbtTck/maxresdefault.jpg"
  },
  {
    "link": "watch?v=_B4lW91c9ns",
    "title": "Deploying Next.js to AWS Using a Custom Domain Name",
    "tags": "next.js, nextjs, aws, serverless, react, javascript, jamstack",
    "scraped_at": 1684586047.2945385,
    "genre": "Entertainment",
    "views": "13643",
    "desc": "In this short video I show how to deploy a Next.js app to AWS using a custom domain name, leveraging the Serverless Next.js component.\\\\n\\\\nCode:\\\\nhttps://gist.github.com/dabit3/b235ca80671f3841a6fa4286dc418e15\\\\n\\\\nComponent\\\\nhttps://github.com/serverless-nextjs/serverless-next.js\\\\n\\\\nSupported features:\\\\nhttps://github.com/serverless-nextjs/serverless-next.js#features\"",
    "lengthSeconds": "245",
    "uploadDate": "2021-01-23",
    "thumbnail_url": "https://i.ytimg.com/vi/_B4lW91c9ns/maxresdefault.jpg"
  },
  {
    "link": "watch?v=13nYLmjZ0Ys",
    "title": "Hands on Workshop - Building a Serverless Multi-user Blogging Platform with Next.js, Tailwind, & AWS",
    "tags": "tailwind, next.js, nextjs, aws amplify, serverless, aws, amazon cognito, jamstack",
    "scraped_at": 1684586045.5805395,
    "genre": "Entertainment",
    "views": "17082",
    "desc": "We\\'ll start from scratch, creating a new Next.js app. We\\'ll then, step by step, use the Amplify CLI to build out and configure our cloud infrastructure and then use the Amplify JS Libraries to connect the Next.js app to the APIs we create using the CLI.\\\\n\\\\nThe app will be a multi-user blogging platform with a markdown editor. When you think of many types of applications like Instagram, Twitter, or Facebook, they consist of a list of items and often the ability to drill down into a single item view. The app we will be building will be very similar to this, displaying a list of posts with data like the title, content, and author of the post.\\\\n\\\\nWorkshop material: https://github.com/dabit3/next.js-amplify-workshop\\\\n\\\\n0:00 \\xe2\\x80\\x93 Introduction\\\\n1:50 \\xe2\\x80\\x93 Project setup\\\\n11:00 - Testing the API (AWS AppSync)\\\\n12:30 - Rendering posts in Next.js\\\\n17:50 - Adding authentication (Amazon Cognito)\\\\n18:43 - Adding a profile view\\\\n26:28 - Enabling API authorization\\\\n31:00 - Adding a form for creating posts\\\\n44:43 - Querying for signed in user\\'s post\\\\n52:13 - Editing and deleting posts\\\\n1:02:00 - Adding a cover image (Amazon S3)\\\\n1:16:00 - Conclusion\"",
    "lengthSeconds": "4594",
    "uploadDate": "2021-01-21",
    "thumbnail_url": "https://i.ytimg.com/vi/13nYLmjZ0Ys/maxresdefault.jpg"
  },
  {
    "link": "watch?v=rA5l82vypXc",
    "title": "Next.js on Fargate - Serverless Container Hosting with Docker and AWS Amplify",
    "tags": "next.js, nextjs, fargate, containers, docker, ecs, aws, serverless, aws amplify",
    "scraped_at": 1684586048.2385385,
    "genre": "Entertainment",
    "views": "5071",
    "desc": "In this video we\\'ll start from scratch, creating a new Next.js app and then initializing a new Amplify project in the Next.js app directory. We\\'ll then configure a custom domain and deploy the Next.js app to Amazon ECS on AWS Fargate using the Amplify CLI using the custom domain.\\\\n\\\\nDelete all infrastructure at any time by running \\\\\"",
    "lengthSeconds": "748",
    "uploadDate": "2021-01-12",
    "thumbnail_url": "https://i.ytimg.com/vi/rA5l82vypXc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=fs9HfYbWjXQ",
    "title": "How to Create an Authenticated REST API on AWS with API Gateway, Lambda, Cognito, & AWS Amplify",
    "tags": "aws lambda, serverless, amazon api gateway, aws amplify, react, javascript, cloud",
    "scraped_at": 1684586049.6165385,
    "genre": "Entertainment",
    "views": "20529",
    "desc": "In this video I\\'ll use the Amplify CLI to deploy a REST API backed by AWS Lambda and then connect to the API from a client-side project using React. I\\'ll show how to configure the REST API to enable a Cognito Authorizer, only allowing authenticated requests to interact with the endpoint. I\\'ll also show how to securely access the user\\'s identity in the Lambda function event.\\\\n\\\\nHere is some of the code I used: https://gist.github.com/dabit3/1f61f6f5b519a09fa977a323ea1c0b16\"",
    "lengthSeconds": "994",
    "uploadDate": "2020-12-22",
    "thumbnail_url": "https://i.ytimg.com/vi/fs9HfYbWjXQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=iEgeuzKEIFs",
    "title": "Next.js CI / CD on AWS with GitHub Actions",
    "tags": "serverless, nextjs, next.js, aws, react, ci",
    "scraped_at": 1684586045.317541,
    "genre": "Entertainment",
    "views": "8044",
    "desc": "In this video, I walk through how to set up a CI / CD pipeline on AWS for a Next.js app using GitHub Actions and the Serverless Framework.\\\\n\\\\nBlog post: https://dev.to/dabit3/next-js-ci-cd-on-aws-with-github-actions-3502\\\\nCode: https://github.com/dabit3/next-serverless-github-actions\"",
    "lengthSeconds": "298",
    "uploadDate": "2020-12-16",
    "thumbnail_url": "https://i.ytimg.com/vi/iEgeuzKEIFs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=CeeoFqE2OU0",
    "title": "Filtering GraphQL Subscriptions with Arguments with AWS Amplify & AWS AppSync",
    "tags": "graphql, aws appsync, aws, aws amplify",
    "scraped_at": 1684586045.1665392,
    "genre": "Entertainment",
    "views": "9750",
    "desc": "When working with real-time data in GraphQL, a very common use case is the need to filter subscriptions based on arguments (think about how a chat app works, where a chat room may subscribe to messages based on the room ID). In this video, you\\'ll learn how to implement filtered GraphQL subscriptions using arguments with AWS Amplify and AWS AppSync.\\\\n\\\\nAmplify docs showing how to set this up: https://docs.amplify.aws/guides/api-graphql/subscriptions-by-id/q/platform/js\\\\nAppSync docs with overview of subscription arguments: https://docs.aws.amazon.com/appsync/latest/devguide/aws-appsync-real-time-data.html#using-subscription-arguments\"",
    "lengthSeconds": "924",
    "uploadDate": "2020-12-07",
    "thumbnail_url": "https://i.ytimg.com/vi/CeeoFqE2OU0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=bQ1Giqn5G38",
    "title": "Next.js with AWS Amplify Admin UI Crash Course",
    "tags": "next.js, aws amplify, aws, react, serverless, jamstack, full stack",
    "scraped_at": 1684586046.5115385,
    "genre": "Entertainment",
    "views": "14826",
    "desc": "In this video you\\'ll learn how to build a full stack Next.js app on AWS in less than 25 minutes. You\\'ll learn how to deploy an API on AWS and connect a Next.js front end, implementing markdown rendering, build time data fetching, dynamic routes to pre-render based on data, SSR, fallback routes, revalidation, and client data fetching.\\\\n\\\\nThe code for this project is located here: https://github.com/dabit3/next.js-amplify-datastore\\\\nTo learn more about Amplify, see the documentation here: https://docs.amplify.aws/\\\\nCheck out the Amplify Admin UI sandbox here: https://sandbox.amplifyapp.com/\"",
    "lengthSeconds": "1389",
    "uploadDate": "2020-12-04",
    "thumbnail_url": "https://i.ytimg.com/vi/bQ1Giqn5G38/maxresdefault.jpg"
  },
  {
    "link": "watch?v=h38wYQ4uCrM",
    "title": "Full Stack Serverless with Architect, AWS Amplify, and React",
    "tags": "serverless, aws lambda, amazon dybamodb, javascript, react, aws, architect, arc.codes",
    "scraped_at": 1684586044.538539,
    "genre": "Entertainment",
    "views": "5549",
    "desc": "In this video I build a full stack serverless app from scratch using Architect as the infrastructure as code provider and React on the client. I build out a REST API with AWS Lambda, DynamoDB, and API Gateway for a blogging app.\\\\n\\\\nThe code for this project is located at https://github.com/dabit3/architect-with-react-and-aws-amplify\"",
    "lengthSeconds": "2055",
    "uploadDate": "2020-11-24",
    "thumbnail_url": "https://i.ytimg.com/vi/h38wYQ4uCrM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=pXd9BCwpjhA",
    "title": "Live Coding a Full Stack Serverless App with Next.js, Amazon Aurora Serverless, CDK, & TypeScript",
    "tags": "amazon aurora serverless, aws cdk, aws amplify, serverless, aws, next.js, full stack serverless, javascript, typescript",
    "scraped_at": 1684586045.0295405,
    "genre": "People",
    "views": "10081",
    "desc": "In this video we start from scratch, building out a serverless AWS back end using CDK, AWS Lambda, GraphQL on AWS AppSync, and Amazon Aurora Serverless PostgreSQL. We then wire up the API to a Next.js app using AWS Amplify and show how to connect to the API, build routes at build time, and enable fallback routes to dynamically generate routes at runtime.\\\\n\\\\nThe code for this demo is located here: https://github.com/dabit3/graphql-api-cdk-serverless-postgres\\\\n\\\\nThe blog post referenced in this video is located here: https://aws.amazon.com/blogs/mobile/building-real-time-serverless-apis-with-postgres-cdk-typescript-and-aws-appsync/\"",
    "lengthSeconds": "3524",
    "uploadDate": "2020-11-17",
    "thumbnail_url": "https://i.ytimg.com/vi/pXd9BCwpjhA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=rjiiNpJzOYk",
    "title": "Mixing Amplify with CDK - Building an Authenticated GraphQL API with TypeScript on AWS",
    "tags": "cdk, aws cdk, amplify, aws amplify, serverless, aws, aws appsync",
    "scraped_at": 1684586047.0135639,
    "genre": "People",
    "views": "9543",
    "desc": "Code: https://github.com/dabit3/amplify-with-cdk\\\\n\\\\nIn this video I show you how to import AWS resources created by the Amplify CLI into a CDK project to build out an authenticated GraphQL API with AWS AppSync. I\\'ll use a Lambda function as a GraphQL resolver to map operations into a DynamoDB table for creating, updating, deleting, and querying for data.\\\\n\\\\nThe line of code at the very end of the video should be this:\\\\nAmplify.configure({ ...config, ...CDKConfig });\"",
    "lengthSeconds": "1408",
    "uploadDate": "2020-11-04",
    "thumbnail_url": "https://i.ytimg.com/vi/rjiiNpJzOYk/maxresdefault.jpg"
  },
  {
    "link": "watch?v=HwdAK9FNUOE",
    "title": "Up and Running with Remix / Remix.run",
    "tags": "react, javascript, webdev, node.js, remix.run",
    "scraped_at": 1684586045.6595411,
    "genre": "People",
    "views": "5660",
    "desc": "In this video you\\'ll learn about Remix - the new React web framework. We\\'ll walk through the project, how routing works, and how data fetching works. We\\'ll then build out a list / detail view app using live data from an API. We\\'ll also walk through the dashboard and check out the documentation. I think this video will serve as a good overview if you\\'re interested in what Remix is.\\\\n\\\\nRemix\\\\nhttps://remix.run/\\\\n\\\\nAlso check out my blog post - A First Look at Remix.run\\\\nhttps://dev.to/dabit3/a-first-look-at-remix-run-449a\"",
    "lengthSeconds": "1029",
    "uploadDate": "2020-10-28",
    "thumbnail_url": "https://i.ytimg.com/vi/HwdAK9FNUOE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=cJ6jMRCFQxw",
    "title": "Client & SSR Authentication with Next.js in Less than 7 Minutes from Scratch",
    "tags": "Jamstack, serverless, next.js, nextjs, aws amplify, amazon cognito, aws, react, javascript",
    "scraped_at": 1684586049.0735395,
    "genre": "People",
    "views": "4871",
    "desc": "In this video we\\'ll start from scratch to build out authentication in a brand new Next.js project to implement client, server, and API route authentication using AWS Amplify and Amazon Cognito.\"",
    "lengthSeconds": "416",
    "uploadDate": "2020-10-16",
    "thumbnail_url": "https://i.ytimg.com/vi/cJ6jMRCFQxw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=x9sOlLi2Hvo",
    "title": "How to Deploy a Nuxt Site to AWS from a Git repository with Amplify hosting",
    "tags": "nuxt, nuxtjs, aws amplify, javascript, jamstack, serverless",
    "scraped_at": 1684586049.5445395,
    "genre": "People",
    "views": "1635",
    "desc": "In this video you\\'ll learn how to use Amplify hosting to deploy a Nuxt site from a Git repository.\"",
    "lengthSeconds": "85",
    "uploadDate": "2020-10-09",
    "thumbnail_url": "https://i.ytimg.com/vi/x9sOlLi2Hvo/maxresdefault.jpg"
  },
  {
    "link": "watch?v=hk1ZmBD7n60",
    "title": "How to Deploy a Nuxt Site to AWS using the AWS Amplify CLI",
    "tags": "nuxtjs, jamstack, vue, aws amplify, static site hosting, nuxt",
    "scraped_at": 1684586045.400539,
    "genre": "People",
    "views": "3029",
    "desc": "In this video you\\'ll learn how to deploy a static Nuxt site to AWS\\'s global edge CDN using the AWS Amplify CLI.\"",
    "lengthSeconds": "161",
    "uploadDate": "2020-10-09",
    "thumbnail_url": "https://i.ytimg.com/vi/hk1ZmBD7n60/maxresdefault.jpg"
  },
  {
    "link": "watch?v=_eo_7BxTrmc",
    "title": "Gun feat. Mark Nadal - An open source cybersecurity protocol for syncing decentralized graph data",
    "tags": "gun, gun.js, p2p, peer to peer, javascript",
    "scraped_at": 1684586049.754539,
    "genre": "People",
    "views": "10703",
    "desc": "In this video I interview Mark Nadal, the creator and maintainer of Gun. He walks us through everything from the architecture of Gun to the philosophy behind it with real-time demos, diving deep into various pieces of how it all works.\\\\n\\\\nMark Nadal: https://twitter.com/marknadal\\\\nDocs: https://gun.eco/\\\\nGitHub: https://github.com/amark/gun\"",
    "lengthSeconds": "3204",
    "uploadDate": "2020-09-25",
    "thumbnail_url": "https://i.ytimg.com/vi/_eo_7BxTrmc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=S25rmxiOBz4",
    "title": "The Complete Guide to Next.js Authentication with AWS",
    "tags": "serverless, aws amplify, next.js, reactjs, javascript, aws",
    "scraped_at": 1684586045.7465394,
    "genre": "People",
    "views": "13873",
    "desc": "In this video you\\'ll learn how to implement authentication in a Nextjs app using AWS Amplify and Amazon Cognito. We will cover everything from SSR authentication, SSR redirects, protected routes, client-side redirects, and authenticating a request in an API route.\\\\n\\\\nThe tutorial that goes along with this video is located here: https://dev.to/dabit3/the-complete-guide-to-next-js-authentication-2aco\\\\n\\\\nThe code for this video is located here: https://github.com/dabit3/next.js-authentication-aws\"",
    "lengthSeconds": "1409",
    "uploadDate": "2020-09-22",
    "thumbnail_url": "https://i.ytimg.com/vi/S25rmxiOBz4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=7JrwiBnjBPw",
    "title": "Serverless GraphQL on AWS in 4 Minutes - Mapping GraphQL Operations into AWS Lambda",
    "tags": "aws lambda, aws appsync, javascript, graphql, aws, serverless, nodejs, node.js",
    "scraped_at": 1684586047.5685387,
    "genre": "People",
    "views": "10088",
    "desc": "AWS AppSync released direct Lambda resolver support for AWS AppSync GraphQL operations making is easier than ever to build a fully serverless GraphQL API on AWS.\\\\n\\\\nIn this video I walk through how this all works by standing up a GraphQL API from scratch, adding a Lambda function as a data source, creating a GraphQL schema, and mapping the GraphQL operations in the schema to the AWS Lambda data source.\\\\n\\\\nI then log out the event object and walk through what data is available in the event.\"",
    "lengthSeconds": "265",
    "uploadDate": "2020-09-01",
    "thumbnail_url": "https://i.ytimg.com/vi/7JrwiBnjBPw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=_9DFFg-pNss",
    "title": "How to build a low-latency serverless GraphQL API on AWS with Node.js, AppSync, Lambda, and DynamoDB",
    "tags": "graphql, serverless, amazon dynamodb, dynamodb, aws lambda, node.js, javascript",
    "scraped_at": 1684586048.8725383,
    "genre": "People",
    "views": "26135",
    "desc": "In this video I\\'ll show you how to use a Node.js Lambda function to map GraphQL requests into DynamoDB to build a fully serverless GraphQL API using direct Lambda GraphQL resolvers. We\\'ll also look at how to fine tune the Lambda settings to minimize latency and enable provisioned concurrency to do away with Lambda cold starts.\"",
    "lengthSeconds": "1696",
    "uploadDate": "2020-08-31",
    "thumbnail_url": "https://i.ytimg.com/vi/_9DFFg"
  },
  {
    "link": "watch?v=2SwlDpfGkXM",
    "title": "Deploying a NextJS app to AWS using the Serverless Framework",
    "tags": "aws, serverless, serverless framework, javascript, nextjs",
    "scraped_at": 1684586048.7995386,
    "genre": "People",
    "views": "21965",
    "desc": "UPDATE: Use version @1.17.0 or greater when deploying this component.\\\\n\\\\nIn this video you\\'ll learn how to deploy a NextJS app complete with server rendered and API routes to AWS using the Serverless Framework.\\\\n\\\\nDeploying NextJS with Amplify:\\\\n\\\\n\\xe2\\x9a\\xa1\\xef\\xb8\\x8f Deploying a NextJS app to AWS with AWS Amplify Git-based deployments\\\\nhttps://youtube.com/watch?v=g-63px0PtTg\\\\n\\\\n\\xe2\\x9a\\xa1\\xef\\xb8\\x8f Deploying a Next app with the AWS Amplify CLI\\\\nhttps://youtube.com/watch?v=7VDdgKXAAP0\"",
    "lengthSeconds": "202",
    "uploadDate": "2020-08-25",
    "thumbnail_url": "https://i.ytimg.com/vi/2SwlDpfGkXM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=JEiEFhaMVVA",
    "title": "Live-coding a Twitch-like video streaming video platform in React",
    "tags": "amazon ivs, amazon interactive video service, aws amplify, aws, serverless, amazon cognito, react, react router",
    "scraped_at": 1684586046.44254,
    "genre": "People",
    "views": "17347",
    "desc": "In this video I\\'ll live code a Twitch-like video streaming platform from scratch \\xe2\\x80\\x94 including the video service, client-side routing, authentication, a comment API, and API authorization.\\\\n\\\\nTools and libraries used: React, React Router, AWS Amplify, React Video Player, and Amazon Interactive Video Service\\\\n\\\\nCode: https://gist.github.com/dabit3/ea5c60386b3a9bf91f330d4957f334e9\"",
    "lengthSeconds": "2897",
    "uploadDate": "2020-07-23",
    "thumbnail_url": "https://i.ytimg.com/vi/JEiEFhaMVVA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=gxd8Z8FShP0",
    "title": "Creating an ultra-low latency live video streaming service with Amazon Interactive Video Service",
    "tags": "aws, amazon ivs, amazon interactive video service, serverless",
    "scraped_at": 1684586049.2635381,
    "genre": "People",
    "views": "3180",
    "desc": "In this video you\\'ll learn how to create a custom live streaming service using Amazon Interactive Video Service\"",
    "lengthSeconds": "111",
    "uploadDate": "2020-07-22",
    "thumbnail_url": "https://i.ytimg.com/vi/gxd8Z8FShP0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=M4iEeXlw_qU",
    "title": "Using a Lambda trigger to resize an uploaded image",
    "tags": "aws, aws amplify, serverless, aws lambda, amazon s3, react, javascript, nodejs",
    "scraped_at": 1684586047.1555393,
    "genre": "People",
    "views": "4177",
    "desc": "In this video you will learn how to trigger a Lambda function to resize an image after being uploaded to Amazon S3.\"",
    "lengthSeconds": "432",
    "uploadDate": "2020-07-22",
    "thumbnail_url": "https://i.ytimg.com/vi/M4iEeXlw_qU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=JaVu-sS3ixg",
    "title": "Creating a custom authentication flow from scratch with AWS Amplify and React",
    "tags": "aws, amazon cognito, javascript, react, aws amplify",
    "scraped_at": 1684586046.8785386,
    "genre": "People",
    "views": "26403",
    "desc": "In this live stream, I will start from a new React application and build out a completely custom authentication flow on the client using React hooks, including multi-factor authentication for sign ups and an event listener for authentication events using AWS Amplify and Amazon Cognito.\"",
    "lengthSeconds": "1576",
    "uploadDate": "2020-07-21",
    "thumbnail_url": "https://i.ytimg.com/vi/JaVu"
  },
  {
    "link": "watch?v=2mqiZ7yqfLc",
    "title": "Sharing an AWS Amplify back end across multiple client-side projects",
    "tags": "film, udost",
    "scraped_at": 1684586046.0035388,
    "genre": "People",
    "views": "3140",
    "desc": "In this video you\\'ll learn how to clone an existing AWS Amplify back end environment and use it in a mobile back end.\"",
    "lengthSeconds": "133",
    "uploadDate": "2020-07-17",
    "thumbnail_url": "https://i.ytimg.com/vi/2mqiZ7yqfLc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Mrw4z8LPliM",
    "title": "AWS Amplify Days - Day 2",
    "tags": "film, udost",
    "scraped_at": 1684586048.594539,
    "genre": "People",
    "views": "1038",
    "desc": "Keynote customer story from Orangetheory Fitness discusses one of the hottest application use cases: video. From there, the AWS team covers feature overviews and new updates to the service. After the live sessions, join a self-led workshop.\\\\n\\\\nWorkshop material: https://github.com/dabit3/amplify-photo-sharing-workshop\"",
    "lengthSeconds": "11716",
    "uploadDate": "2020-07-17",
    "thumbnail_url": "https://i.ytimg.com/vi/Mrw4z8LPliM/hqdefault.jpg"
  },
  {
    "link": "watch?v=FVYqbM3JIWU",
    "title": "AWS Amplify Days - Day 1",
    "tags": "film, udost",
    "scraped_at": 1684586050.27554,
    "genre": "People",
    "views": "2467",
    "desc": "On Day 1, hear stories from Amplify users and how they integrate key features into their applications.\"",
    "lengthSeconds": "9986",
    "uploadDate": "2020-07-16",
    "thumbnail_url": "https://i.ytimg.com/vi/FVYqbM3JIWU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=UgzdvbzK8T0",
    "title": "How to Deploy a Severless Node.js REST API on AWS with AWS Amplify",
    "tags": "aws amplify, serverless, javascript, nodejs",
    "scraped_at": 1684586049.1405406,
    "genre": "People",
    "views": "9672",
    "desc": "In this video you will learn how to deploy a Severless function and API using the Amplify CLI.\"",
    "lengthSeconds": "120",
    "uploadDate": "2020-07-14",
    "thumbnail_url": "https://i.ytimg.com/vi/UgzdvbzK8T0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=CqcZfCWnGGQ",
    "title": "Sharing dependencies across multiple Serverless functions with AWS Amplify and Lambda layers",
    "tags": "serverless, aws lambda, lambda layers, aws amplify, aws, nodejs",
    "scraped_at": 1684586047.0845394,
    "genre": "People",
    "views": "2008",
    "desc": "In this video you will learn how to create a Lambda layer, install a dependency in the layer, and share the dependency across multiple serverless functions.\"",
    "lengthSeconds": "177",
    "uploadDate": "2020-07-13",
    "thumbnail_url": "https://i.ytimg.com/vi/CqcZfCWnGGQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=UwOeAYJmTQI",
    "title": "React Authentication with AWS Amplify & Amplify UI React",
    "tags": "film, udost",
    "scraped_at": 1684586048.0275385,
    "genre": "People",
    "views": "7304",
    "desc": "In this video you will learn how to use the most recent version of AWS Amplify and AWS Amplify UI React to build out an authentication flow in less than 4 minutes.\"",
    "lengthSeconds": "211",
    "uploadDate": "2020-07-10",
    "thumbnail_url": "https://i.ytimg.com/vi/UwOeAYJmTQI/maxresdefault.jpg"
  },
  {
    "link": "watch?v=VG2XWoD-rS0",
    "title": "Advanced Data Access Patterns with GraphQL, Amazon DynamoDB, and AWS Amplify",
    "tags": "graphql, serverless, aws",
    "scraped_at": 1684586050.0035386,
    "genre": "People",
    "views": "27188",
    "desc": "In this video I go through how you can use GraphQL, Amazon DynamoDB, and the Amplify CLI to model multiple data access patterns for performing many different types of queries against a DynamoDB table and strategies for querying against global secondary indexes.\"",
    "lengthSeconds": "2093",
    "uploadDate": "2020-05-15",
    "thumbnail_url": "https://i.ytimg.com/vi/VG2XWoD"
  },
  {
    "link": "watch?v=vXFC5y-UdrE",
    "title": "Getting started with Deno",
    "tags": "film, udost",
    "scraped_at": 1684586045.0965412,
    "genre": "People",
    "views": "1235",
    "desc": "In this video, you\\'ll learn how to create and deploy a new Deno app using the Begin platform. We\\'ll start by creating a new begin app and viewing the deployment. We\\'ll then update the HTML that is being served and replace it with JSON data, kicking off the new deployment via GitHub.\"",
    "lengthSeconds": "157",
    "uploadDate": "2020-05-14",
    "thumbnail_url": "https://i.ytimg.com/vi/vXFC5y"
  },
  {
    "link": "watch?v=g-63px0PtTg",
    "title": "Deploying a NextJS app to AWS with AWS Amplify Git-based deployments",
    "tags": "film, udost",
    "scraped_at": 1684586048.3795388,
    "genre": "People",
    "views": "8555",
    "desc": "In this video you will learn how to connect a Next app hosted in a Git repository to AWS using Amplify Hosting. You\\'ll then learn how to kick off a new build by pushing changes to your master branch.\"",
    "lengthSeconds": "188",
    "uploadDate": "2020-05-05",
    "thumbnail_url": "https://i.ytimg.com/vi/g"
  },
  {
    "link": "watch?v=7VDdgKXAAP0",
    "title": "Deploying a Next app with the AWS Amplify CLI",
    "tags": "nextjs, aws amplify, react, serverless, amplify console, javascript, JAMstack",
    "scraped_at": 1684586047.828539,
    "genre": "People",
    "views": "3575",
    "desc": "In this tutorial you\\'ll learn how to deploy a NextJS app to AWS using Amplify Hosting using the Amplify CLI.\"",
    "lengthSeconds": "113",
    "uploadDate": "2020-05-05",
    "thumbnail_url": "https://i.ytimg.com/vi/7VDdgKXAAP0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=2caE7OwFkMs",
    "title": "Serverless Cron Jobs & Scheduled Events with AWS Amplify Functions and AWS Lambda",
    "tags": "serverlss, aws lambda, aws amplify",
    "scraped_at": 1684586049.2005394,
    "genre": "People",
    "views": "1475",
    "desc": "How to create cron jobs and scheduled events with AWS Amplify and AWS Lambda\"",
    "lengthSeconds": "117",
    "uploadDate": "2020-04-30",
    "thumbnail_url": "https://i.ytimg.com/vi/2caE7OwFkMs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=HPyTvu5SwGE",
    "title": "Build a full stack serverless app with Python, AWS Lambda, and React Hooks",
    "tags": "serverless, python, javascript, react hooks, react, aws amplify",
    "scraped_at": 1684586047.7645385,
    "genre": "People",
    "views": "5265",
    "desc": "In this video, you\\'ll learn how to deploy a serverless Python function running in AWS Lambda, connect it to an API, and interact with it from a client-side app using React hooks.\\\\n\\\\nhttps://gist.github.com/dabit3/9cbc56bc89fea5dfa5928e583a009701\"",
    "lengthSeconds": "327",
    "uploadDate": "2020-04-15",
    "thumbnail_url": "https://i.ytimg.com/vi/HPyTvu5SwGE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=IFl7cEToXxI",
    "title": "How to deploy an Apollo GraphQL server running in AWS Lambda with Amplify Functions",
    "tags": "aws lambda, serverless, apollo, apollo server, graphql, javascript, react",
    "scraped_at": 1684586046.66254,
    "genre": "People",
    "views": "4437",
    "desc": "This video shows how to deploy an Apollo GraphQL server running in a Lambda function on AWS using AWS Amplify Functions and connect to it from a React application using Apollo Hooks.\\\\n\\\\nCode: https://github.com/dabit3/apollo-server-in-amplify-function\"",
    "lengthSeconds": "455",
    "uploadDate": "2020-04-14",
    "thumbnail_url": "https://i.ytimg.com/vi/IFl7cEToXxI/maxresdefault.jpg"
  },
  {
    "link": "watch?v=5KWQT1M7zo4",
    "title": "Creating a serverless app with Go, React, and AWS Amplify Functions",
    "tags": "serverless, golang, aws amplify, aws lambda, react",
    "scraped_at": 1684586049.4035425,
    "genre": "People",
    "views": "3288",
    "desc": "In this lesson, you\\'ll learn how to deploy a serverless function using the Go runtime, connect it to an API endpoint, and interact with it from a React application.\\\\n\\\\nTo view the code for this function, check out the repo here: https://github.com/dabit3/api-gateway-lambda-in-various-runtimes\"",
    "lengthSeconds": "390",
    "uploadDate": "2020-04-08",
    "thumbnail_url": "https://i.ytimg.com/vi/5KWQT1M7zo4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=CBqXEx22oy4",
    "title": "Amplify Console Hosting - Manual Deploys from the Amplify CLI",
    "tags": "serverless, javascript, aws amplify, react",
    "scraped_at": 1684586045.925539,
    "genre": "People",
    "views": "1809",
    "desc": "In this video, learn how to deploy your front end project to Amplify Console Hosting directly from the Amplify CLI.\"",
    "lengthSeconds": "144",
    "uploadDate": "2020-03-20",
    "thumbnail_url": "https://i.ytimg.com/vi/CBqXEx22oy4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=J1cS13mb-Rs",
    "title": "Building Offline-first Cross-platform Apps with Expo and Amplify DataStore",
    "tags": "expo, react native, javascript, aws amplify, serverless",
    "scraped_at": 1684586045.471539,
    "genre": "People",
    "views": "5196",
    "desc": "Learn how to create a new Amplify DataStore project, integrate it with Expo, deploy it to AWS, and interact with it from a two different platforms: Web and  iOS. We\\'ll demo queries, mutations, and subscriptions as well as how to test out the offline functionality.\\\\n\\\\nThe code for this app is located here: https://gist.github.com/dabit3/184e875c151335c00336396c99f9ef06\"",
    "lengthSeconds": "468",
    "uploadDate": "2020-03-20",
    "thumbnail_url": "https://i.ytimg.com/vi/J1cS13mb"
  },
  {
    "link": "watch?v=wH-UnQy1ltM",
    "title": "Building Real-time Offline-first Apps with React, GraphQL, & Amplify DataStore",
    "tags": "graphql, serverless, react, aws",
    "scraped_at": 1684586047.6345387,
    "genre": "People",
    "views": "16048",
    "desc": "In this video, we walk through how to create a new Amplify DataStore project, deploy it to AWS, and interact with it from a React app. We\\'ll demo queries, mutations, and subscriptions as well as how to test out the offline functionality.\\\\n\\\\nThe code for this app is located here: https://gist.github.com/dabit3/f4467e759325ea4b3d007b7117436031\"",
    "lengthSeconds": "476",
    "uploadDate": "2020-03-18",
    "thumbnail_url": "https://i.ytimg.com/vi/wH"
  },
  {
    "link": "watch?v=G_E5erT6sF8",
    "title": "Full Stack Machine learning on AWS: Reading Text from an Image with AWS Amplify & Amazon Rekognition",
    "tags": "aws, javascript, react, maching learning, aws",
    "scraped_at": 1684586046.9435394,
    "genre": "People",
    "views": "1415",
    "desc": "In this video, we\\'ll create a new React app, initialize a new AWS Amplify project, and add image recognition to read text from images using Amazon Rekognition and Amazon Textract.\"",
    "lengthSeconds": "350",
    "uploadDate": "2020-01-16",
    "thumbnail_url": "https://i.ytimg.com/vi/G_E5erT6sF8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=9LmNhWMwwT4",
    "title": "Full Stack Machine learning on AWS: Language Translation with AWS Amplify and Amazon Translate",
    "tags": "film, udost",
    "scraped_at": 1684586047.2305393,
    "genre": "People",
    "views": "1293",
    "desc": "In this video, we\\'ll create a new React app, initialize a new AWS Amplify project, and add text translation using Amazon Translate.\"",
    "lengthSeconds": "329",
    "uploadDate": "2020-01-15",
    "thumbnail_url": "https://i.ytimg.com/vi/9LmNhWMwwT4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=7C0K7g8GP6E",
    "title": "Serverless Cron Jobs & Scheduled Events with AWS Lambda",
    "tags": "aws, serverless, devops, aws lambda, aws amplify",
    "scraped_at": 1684586047.4265385,
    "genre": "People",
    "views": "3988",
    "desc": "How to create cron jobs and scheduled events with AWS Lambda\"",
    "lengthSeconds": "190",
    "uploadDate": "2020-01-14",
    "thumbnail_url": "https://i.ytimg.com/vi/7C0K7g8GP6E/maxresdefault.jpg"
  },
  {
    "link": "watch?v=eqDUSY9KHYE",
    "title": "Adding Google Sign In for Web Applications with AWS Amplify",
    "tags": "serverless, reactjs, javascript, aws amplify, aws, oauth, google sign in",
    "scraped_at": 1684586049.686539,
    "genre": "People",
    "views": "18980",
    "desc": "How to create Google Sign in / OAuth with AWS Amplify for web applications.\"",
    "lengthSeconds": "489",
    "uploadDate": "2020-01-14",
    "thumbnail_url": "https://i.ytimg.com/vi/eqDUSY9KHYE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=NMln6UpcodE",
    "title": "How to Enable Pull Request Previews with Amplify Console Hosting",
    "tags": "aws, serverless, aws amplify, amplify console, continuous delivery, continuous integration, continuous deployment, webdev",
    "scraped_at": 1684586048.7285383,
    "genre": "People",
    "views": "2320",
    "desc": "Web Previews offer you and your team a way to preview changes from pull requests before merging code to a production or integration branch\\\\n\\\\nIn this video, I show how to integrate pull request previews using GitHub and the Amplify Console.\\\\n\\\\nhttps://docs.aws.amazon.com/amplify/latest/userguide/pr-previews.html\"",
    "lengthSeconds": "258",
    "uploadDate": "2020-01-13",
    "thumbnail_url": "https://i.ytimg.com/vi/NMln6UpcodE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=F6ZPTKiEJx4",
    "title": "Adding Facebook Sign In for Web Applications with AWS Amplify",
    "tags": "react, vue, oauth, authentication, webdev, aws, cognito, aws amplify",
    "scraped_at": 1684586048.3025384,
    "genre": "People",
    "views": "7121",
    "desc": "How to create Facebook Sign in / OAuth with AWS Amplify for web applications.\"",
    "lengthSeconds": "508",
    "uploadDate": "2020-01-10",
    "thumbnail_url": "https://i.ytimg.com/vi/F6ZPTKiEJx4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=gFpGKoGBRrU",
    "title": "Twitch Stream - Up and running with JAMstack CMS",
    "tags": "gatsby, jamstack, serverless, aws ampllify, javascript",
    "scraped_at": 1684586047.3625393,
    "genre": "People",
    "views": "831",
    "desc": "Learn about how to get up and running with JAMstack CMS in this 25 minute video capture from the Twitch.tv live stream.\\\\n\\\\nhttps://github.com/jamstack-cms/jamstack-cms\"",
    "lengthSeconds": "1473",
    "uploadDate": "2019-11-12",
    "thumbnail_url": "https://i.ytimg.com/vi/gFpGKoGBRrU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=9ysiXDdmc9c",
    "title": "Conference App in a Box",
    "tags": "graphql, aws amplify, react native, aws appsync, serverless",
    "scraped_at": 1684586047.5045385,
    "genre": "People",
    "views": "2223",
    "desc": "This video is from my Twitch stream. Follow me on Twitch at https://www.twitch.tv/dabit3\\\\n\\\\n(starts at 50 second mark) In this video we deploy a full stack React Native app\\\\nwith GraphQL and AWS Amplify. The repo for this app is located at https://github.com/dabit3/conference-app-in-a-box.\"",
    "lengthSeconds": "1726",
    "uploadDate": "2019-08-20",
    "thumbnail_url": "https://i.ytimg.com/vi/9ysiXDdmc9c/maxresdefault.jpg"
  },
  {
    "link": "watch?v=uaG2mMYLI68",
    "title": "Setting up a Custom Domain with the Amplify Console",
    "tags": "aws amplify, custom domain, domain management, serverless",
    "scraped_at": 1684586048.5235386,
    "genre": "People",
    "views": "13905",
    "desc": "How to add a custom domain name to your hosted application in the Amplify Console. Whether your domain provider is GoDaddy, Google Domains, Namecheap, or some other provider, this video will show you how to deploy an Amplify project using your custom domain in less that 2 minutes.\\\\n\\\\nFor a quick overview of how to host an app using the Amplify Console, also check out this video: https://www.youtube.com/watch?v=cl1v4BkZj4w\"",
    "lengthSeconds": "112",
    "uploadDate": "2019-08-16",
    "thumbnail_url": "https://i.ytimg.com/vi/uaG2mMYLI68/maxresdefault.jpg"
  },
  {
    "link": "watch?v=wU27ZrdUpIQ",
    "title": "Mocking & Testing Serverless AWS AppSync GraphQL APIs with AWS Amplify - Auth and Custom Queries",
    "tags": "graphql, aws amplify, aws appsync, javascript, serverless, testing",
    "scraped_at": 1684586046.214539,
    "genre": "People",
    "views": "4281",
    "desc": "In this video, I show you how to test three types of GraphQL APIs - Basic, querying on custom index, and group-based authorization.\"",
    "lengthSeconds": "331",
    "uploadDate": "2019-08-08",
    "thumbnail_url": "https://i.ytimg.com/vi/wU27ZrdUpIQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=vC9y0qc5PP4",
    "title": "Mocking & Testing Serverless AWS AppSync GraphQL APIs with AWS Amplify - Quick Start",
    "tags": "graphql, serverless, javascript, aws appsync, aws amplify, testing",
    "scraped_at": 1684586049.0065384,
    "genre": "People",
    "views": "3652",
    "desc": "In this video, I show you how to quickly get up and running testing AWS AppSync GraphQL APIs using the Amplify CLI\"",
    "lengthSeconds": "116",
    "uploadDate": "2019-08-08",
    "thumbnail_url": "https://i.ytimg.com/vi/vC9y0qc5PP4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=QIxm9HPefT0",
    "title": "Password Protected Deployments with the Amplify Console",
    "tags": "gatsby, hosting, ci, cd, aws, serverless",
    "scraped_at": 1684586046.572539,
    "genre": "People",
    "views": "760",
    "desc": "In this video you\\'ll learn how to deploy an application to AWS using the Amplify Console and add password protection for custom access control.\"",
    "lengthSeconds": "112",
    "uploadDate": "2019-07-30",
    "thumbnail_url": "https://i.ytimg.com/vi/QIxm9HPefT0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=cl1v4BkZj4w",
    "title": "Deploy a Static Gatsby Blog with AWS Amplify",
    "tags": "film, udost",
    "scraped_at": 1684586050.4275382,
    "genre": "People",
    "views": "2779",
    "desc": "Learn how to deploy a Gatsby blog to AWS using the Amplify Console.\"",
    "lengthSeconds": "56",
    "uploadDate": "2019-07-30",
    "thumbnail_url": "https://i.ytimg.com/vi/cl1v4BkZj4w/maxresdefault.jpg"
  },
  {
    "link": "watch?v=SHBCim7IzG0",
    "title": "Hosting & Continuous Deployment for Front Ends and Serverless Back Ends using AWS Amplify",
    "tags": "serverless, react, javascript, vue, aws, hosting, ci, cd",
    "scraped_at": 1684586047.6975384,
    "genre": "People",
    "views": "2324",
    "desc": "In this video you\\'ll learn Git-based deployment for web applications for both front-end and back-end resources using AWS Amplify and the Amplify Console.\"",
    "lengthSeconds": "325",
    "uploadDate": "2019-07-19",
    "thumbnail_url": "https://i.ytimg.com/vi/SHBCim7IzG0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=gQf8jIuimlw",
    "title": "Deploy a GraphQL API with Authentication & Authorization in 8 minutes with AWS Amplify & AWS AppSync",
    "tags": "graphql, javascript, react, aws, aws amplify, aws appsync, serverless",
    "scraped_at": 1684586048.6595392,
    "genre": "People",
    "views": "8416",
    "desc": "In this video you\\'ll learn how to create and deploy a new Amplify application complete with authentication and a GraphQL API. You\\'ll also learn how to configure the API with rules around authorization and fine-grained access control for performing queries and mutations.\"",
    "lengthSeconds": "475",
    "uploadDate": "2019-05-30",
    "thumbnail_url": "https://i.ytimg.com/vi/gQf8jIuimlw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=G8hpICPmNdo",
    "title": "Apollo GraphQL Hooks - Creating Mutations",
    "tags": "graphql, apollo, react",
    "scraped_at": 1684586051.0455396,
    "genre": "People",
    "views": "6304",
    "desc": "In this video you\\'ll learn how to create a new Apollo client in a React application \\\\u0026 send mutations to a GraphQL API using the Apollo GraphQL Hooks library.\"",
    "lengthSeconds": "586",
    "uploadDate": "2019-05-16",
    "thumbnail_url": "https://i.ytimg.com/vi/G8hpICPmNdo/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ZOh_EKJUDks",
    "title": "Apollo GraphQL Hooks - Querying Data",
    "tags": "apollo, react, graphql, aws appsync",
    "scraped_at": 1684586048.4505396,
    "genre": "People",
    "views": "3385",
    "desc": "In this video, you\\'ll learn how to create a new Apollo client in a React application \\\\u0026 query for data from a GraphQL API using the Apollo GraphQL Hooks library.\"",
    "lengthSeconds": "323",
    "uploadDate": "2019-05-15",
    "thumbnail_url": "https://i.ytimg.com/vi/ZOh_EKJUDks/maxresdefault.jpg"
  },
  {
    "link": "watch?v=y4Obz26GkCk",
    "title": "Serverless Functions in Depth with AWS Amplify",
    "tags": "aws amplify, serverless, react, aws",
    "scraped_at": 1684586047.9655387,
    "genre": "People",
    "views": "44448",
    "desc": "Twitch Live Stream - Learn how to build, deploy, update, delete \\\\u0026 test serverless functions using AWS Amplify. We\\'ll also learn how to add an API endpoint to interact with the functions as well as add authentication \\\\u0026 authorization to the APIs working within a React application.\\\\n\\\\nhttps://aws-amplify.github.io/docs/js/api\"",
    "lengthSeconds": "4112",
    "uploadDate": "2019-05-14",
    "thumbnail_url": "https://i.ytimg.com/vi/y4Obz26GkCk/maxresdefault.jpg"
  },
  {
    "link": "watch?v=4dZ91AarhPg",
    "title": "Transforming REST APIs to GraphQL with AWS AppSync",
    "tags": "graphql, aws appsync, serverless",
    "scraped_at": 1684586050.337539,
    "genre": "People",
    "views": "6834",
    "desc": "How to transform REST APIs to GraphQL with AWS AppSync\\\\n\\\\nhttps://aws.amazon.com/appsync/\"",
    "lengthSeconds": "329",
    "uploadDate": "2019-05-13",
    "thumbnail_url": "https://i.ytimg.com/vi/4dZ91AarhPg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=gmHlitxLoCU",
    "title": "Gatsby Static GraphQL Queries with AWS Amplify & AWS AppSync",
    "tags": "aws amplify, aws appsync, graphql, react, gatsby",
    "scraped_at": 1684586051.3885388,
    "genre": "People",
    "views": "4274",
    "desc": "In this video we\\'ll build a Game of Thrones app using AWS AppSync \\\\u0026 the Gatsby Source GraphQL plugin. We\\'ll learn how to create the GraphQL api, install \\\\u0026 configure Gatsby Source GraphQL, \\\\u0026 deploy the app with the static GraphQL data available to render in the app.\"",
    "lengthSeconds": "452",
    "uploadDate": "2019-05-09",
    "thumbnail_url": "https://i.ytimg.com/vi/gmHlitxLoCU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=konkxMwlY40",
    "title": "Continuous Git deployment & hosting with React & the AWS Amplify Console",
    "tags": "aws amplify, amplify console, continuous deployment, continuous integration",
    "scraped_at": 1684586051.1145387,
    "genre": "People",
    "views": "2955",
    "desc": "Learn how to use the AWS Amplify Console to implement continuous deployment \\\\u0026 hosting using a Git-based workflow\"",
    "lengthSeconds": "207",
    "uploadDate": "2019-04-21",
    "thumbnail_url": "https://i.ytimg.com/vi/konkxMwlY40/maxresdefault.jpg"
  },
  {
    "link": "watch?v=nm2kt3h1--c",
    "title": "HypeBeats",
    "tags": "reactjs, graphql, aws amplify, aws appsync, real",
    "scraped_at": 1684586050.5855386,
    "genre": "People",
    "views": "1491",
    "desc": "A real-time collaborative drum machine built with React, GraphQL \\\\u0026 AWS AppSync\\\\n\\\\nhttps://github.com/dabit3/hype-beats\"",
    "lengthSeconds": "86",
    "uploadDate": "2019-03-19",
    "thumbnail_url": "https://i.ytimg.com/vi/nm2kt3h1"
  },
  {
    "link": "watch?v=ptb3fZ_hKc8",
    "title": "Deploying a Vue Application to AWS Using GitHub & the Amplify Console",
    "tags": "Vue, AWS Amplify, AWS AppSync, Serverless, JavaScript",
    "scraped_at": 1684586051.1775398,
    "genre": "People",
    "views": "3870",
    "desc": "In this video we learn how to deploy \\\\u0026 host a Vue application on AWS using the Amplify Console. We also see how to do continuous deployment by kicking off new builds when changes are made to the master branch of our repository.\"",
    "lengthSeconds": "218",
    "uploadDate": "2019-01-07",
    "thumbnail_url": "https://i.ytimg.com/vi/ptb3fZ_hKc8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=b_1tpwGigxU",
    "title": "Deploying Existing AWS Amplify Projects using the Amplify CLI",
    "tags": "react",
    "scraped_at": 1684586050.7715392,
    "genre": "People",
    "views": "6508",
    "desc": "In this video, we\\'ll learn how to deploy an existing React Native application with user authentication powered by AWS Amplify and a navigation flow built around the authentication state using React Navigation.\\\\n\\\\nhttps://github.com/aws-samples/aws-amplify-auth-starters\\\\nhttps://aws-amplify.github.io/docs/cli/multienv?sdk=js\"",
    "lengthSeconds": "193",
    "uploadDate": "2019-01-07",
    "thumbnail_url": "https://i.ytimg.com/vi/b_1tpwGigxU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=z4y705Ficwk",
    "title": "AWS Amplify Multiple Environments Demo",
    "tags": "aws, aws amplify, aws",
    "scraped_at": 1684586051.2915385,
    "genre": "People",
    "views": "5363",
    "desc": "A quick demo of how to create multiple environments in an AWS Amplify project.\\\\n\\\\nhttps://aws-amplify.github.io/docs/cli/multienv?sdk=js\"",
    "lengthSeconds": "126",
    "uploadDate": "2018-11-26",
    "thumbnail_url": "https://i.ytimg.com/vi/z4y705Ficwk/hqdefault.jpg"
  },
  {
    "link": "watch?v=lg6CB5qdM2k",
    "title": "Testing AWS AppSync Resolvers",
    "tags": "AWS AppSync, graphql, Serverless",
    "scraped_at": 1684586050.8895383,
    "genre": "People",
    "views": "4137",
    "desc": "In this video, I demo how you can log out \\\\u0026 test things in your AWS AppSync resolver.\"",
    "lengthSeconds": "88",
    "uploadDate": "2018-10-17",
    "thumbnail_url": "https://i.ytimg.com/vi/lg6CB5qdM2k/hqdefault.jpg"
  },
  {
    "link": "watch?v=r0PbwDoNMcY",
    "title": "AWS Amplify - AWS AppSync GraphQL Codegen Demo",
    "tags": "graphql, serverless, aws",
    "scraped_at": 1684586051.2355392,
    "genre": "People",
    "views": "3892",
    "desc": "The AWS Amplify CLI toolchain now automatically generates your GraphQL queries, mutations, \\\\u0026 subscriptions as well as a typed API file containing your Schema. In this video, we walk through how to use it.\\\\n\\\\nhttps://aws-amplify.github.io/\"",
    "lengthSeconds": "120",
    "uploadDate": "2018-09-19",
    "thumbnail_url": "https://i.ytimg.com/vi/r0PbwDoNMcY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=p7mwQaGo6P0",
    "title": "Creating AWS AppSync GraphQL APIs with AWS Amplify",
    "tags": "react, reactjs, aws, aws",
    "scraped_at": 1684586050.7085383,
    "genre": "People",
    "views": "30817",
    "desc": "In this video, we walk through how to create a new AWS AppSync GraphQL API \\\\u0026 connect to it from a client-side application.\"",
    "lengthSeconds": "532",
    "uploadDate": "2018-09-11",
    "thumbnail_url": "https://i.ytimg.com/vi/p7mwQaGo6P0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=fWbM5DLh25U",
    "title": "Installing & Configuring the AWS Amplify CLI",
    "tags": "aws, aws",
    "scraped_at": 1684586050.834539,
    "genre": "People",
    "views": "109812",
    "desc": "In this video, we walk through how to install \\\\u0026 configure the AWS Amplify CLI including how to create a new IAM user.\\\\n\\\\nhttps://aws-amplify.github.io/media/get_started\"",
    "lengthSeconds": "143",
    "uploadDate": "2018-08-27",
    "thumbnail_url": "https://i.ytimg.com/vi/fWbM5DLh25U/maxresdefault.jpg"
  },
  {
    "link": "watch?v=-CmYg7WbGSQ",
    "title": "heard - React Native messaging app built with AWS (AppSync, Amplify, Cognito) - Github link",
    "tags": "dynamodb, aws appsync, aws",
    "scraped_at": 1684586050.6445386,
    "genre": "People",
    "views": "3556",
    "desc": "Messaging app built with AWS AppSync, AWS Amplify, Amazon Cognito \\\\u0026 Amazon DynamoDB\\\\n\\\\nhttps://github.com/dabit3/heard\"",
    "lengthSeconds": "68",
    "uploadDate": "2018-06-28",
    "thumbnail_url": "https://i.ytimg.com/vi/"
  },
  {
    "link": "watch?v=VKhLqBG7sdI",
    "title": "AWS AppSync Authorization with Amazon Cognito User Pools",
    "tags": "graphql authorization, graphql, appsync, aws appsync",
    "scraped_at": 1684586050.9495387,
    "genre": "People",
    "views": "9348",
    "desc": "In this video, we leave off from our previous video implementing authorization in an AppSync app show how to restrict queries or mutations from being allowed based on whether a user is part of a cognito user group.\\\\n\\\\nAWS AppSync - User Authorization \\\\u0026 Fine Grained Access Control: https://www.youtube.com/watch?v=p0mfjz6wZng\\\\nGitHub repo: https://github.com/dabit3/appsync-react-native-with-user-authorization\"",
    "lengthSeconds": "405",
    "uploadDate": "2018-04-17",
    "thumbnail_url": "https://i.ytimg.com/vi/VKhLqBG7sdI/maxresdefault.jpg"
  }
]