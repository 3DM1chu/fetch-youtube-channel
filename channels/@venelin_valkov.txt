[
  {
    "link": "watch?v=k_aURLKTrvU",
    "title": "Private GPT4All : Chat with PDF with Local & Free LLM using GPT4All, LangChain & HuggingFace",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584236.3599746,
    "genre": "Education",
    "views": "1",
    "desc": "Join me in this YouTube video as we explore an alternative to the ChatGPT API called GPT4All. Discover how to seamlessly integrate GPT4All into a LangChain chain and start chatting with text extracted from financial statement PDF documents. With the help of HuggingFace and chromadb, we\\'ll also delve into creating embeddings. Don\\'t miss this opportunity to learn how to chat with your files locally and completely free of charge!\\\\n\\\\nPrompt Engineering Tutorial: https://www.mlexpert.io/prompt-engineering\\\\nPrompt Engineering GitHub Repository: https://github.com/curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\n#chatgpt #prompterchallenge #gpt4 #artificialintelligence #python\"",
    "lengthSeconds": "0",
    "uploadDate": "2023-05-20",
    "thumbnail_url": "https://i.ytimg.com/vi/k_aURLKTrvU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=uX3jZMMPesw",
    "title": "CryptoGPT: Download and Preprocess Tweets | Twitter Sentiment Analysis using LangChain and ChatGPT",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584236.6079743,
    "genre": "Education",
    "views": "289",
    "desc": "In this video, we\\'ll start the CryptoGPT project - use ChatGPT and LangChain for sentiment analysis on Crypto Twitter accounts that you like. We\\'ll set up a project in VSCode, install necessary dependencies, and use the tweety library to download and preprocess tweets.\\\\n\\\\nPrompt Engineering Tutorial: https://www.mlexpert.io/prompt-engineering\\\\nPrompt Engineering GitHub Repository: https://github.com/curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\n00:00 - CryptoGPT\\\\n01:56 - Introduction\\\\n02:30 - tweety\\\\n02:56 - VSCode Setup\\\\n04:06 - Scrape \\\\u0026 PreprocessTweets\\\\n15:54 - Conclusion\\\\n\\\\n#chatgpt #gpt4 #langchain #artificialintelligence #promptengineering #python #crypto\"",
    "lengthSeconds": "986",
    "uploadDate": "2023-05-16",
    "thumbnail_url": "https://i.ytimg.com/vi/uX3jZMMPesw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=CyuUlf54wTs",
    "title": "Build ChatGPT Chatbots with LangChain Memory: Understanding and Implementing Memory in Conversations",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584240.6039746,
    "genre": "Education",
    "views": "1165",
    "desc": "Memory is a crucial element in building chatbots that can maintain a coherent conversation with users. In this video, we will explore different memory types that can be used with ChatGPT, and how they can be implemented using LangChain memory. We will discuss how different memory types work, how they can be used in a chain, and what kind of information they can return.\\\\n\\\\nWe will start with the simplest memory type, \\\\\"",
    "lengthSeconds": "1366",
    "uploadDate": "2023-05-08",
    "thumbnail_url": "https://i.ytimg.com/vi/CyuUlf54wTs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=1NOPciKuQb8",
    "title": "OpenLLaMA: Open-Source Reproduction of Meta AI's LLaMA for Commercial Use. Run in Google Colab.",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584240.8279738,
    "genre": "Education",
    "views": "2128",
    "desc": "In this video, we\\'ll explore OpenLLaMA, an open-source reproduction of Meta AI\\'s LLaMA large language model. We\\'ll load the 7B model in a Google Colab notebook and run a couple of prompts with the HuggingFace Transformers weights. We\\'ll also discuss a strategy for sampling that improves the generated responses.\\\\n\\\\nThe creators of OpenLLaMA have released a public preview of the 7B model, trained with 200 billion tokens, and provide PyTorch and Jax weights of pre-trained OpenLLaMA models. They also compare their models with the original LLaMA models and provide evaluation results. Recently, they have released a new checkpoint of OpenLLaMA 7B trained on 300B tokens. The video discusses the dataset and training process, including the RedPajama dataset.\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nOpenLLaMA GitHub: https://github.com/openlm-research/open_llama\\\\nHacker News Discussion: https://news.ycombinator.com/item?id=35798888\\\\nHuggingFace Weights: https://huggingface.co/openlm-research/open_llama_7b_preview_300bt\\\\nriversun sampling: https://github.com/riversun/open_llama_7b_hands_on\\\\n\\\\n00:00 - Intro\\\\n00:22 - OpenLLaMa\\\\n02:51 - Google Colab Setup\\\\n06:56 - Prompting OpenLLaMa\\\\n09:10 - Prompting with Sampling\\\\n16:55 - Conclusion\\\\n\\\\n#promptengineering #chatgpt #gpt4 #llama #python #deeplearning #artificialintelligence\"",
    "lengthSeconds": "1066",
    "uploadDate": "2023-05-06",
    "thumbnail_url": "https://i.ytimg.com/vi/1NOPciKuQb8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=lHxDDwznq6I",
    "title": "StableVicuna: The Best Open Source Local ChatGPT? LLM based on Vicuna and LLaMa.",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584236.4489758,
    "genre": "Education",
    "views": "2295",
    "desc": "In this video, we\\'ll explore StableVicuna - the world\\'s first open-source chatbot trained using reinforced learning from human feedback (RLHF). Developed by Stability AI, StableVicuna is a 13B large language model that has been fine-tuned using instruction fine-tuning and RLHF training. It is based on the original Vicuna LLM and is now one of the most powerful open-source LLMs.\\\\n\\\\nWe\\'re going to set up the model in a Google Colab notebook and compare the responses to ChatGPT!\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nBlog post: https://stability.ai/blog/stablevicuna-open-source-rlhf-chatbot\\\\nModel weights: https://huggingface.co/TheBloke/stable-vicuna-13B-HF\\\\n\\\\n00:00 - Intro\\\\n00:21 - StableVicuna\\\\n02:48 - Google Colab Setup\\\\n04:28 - Prompting StableVicuna\\\\n09:18 - StableVicuna vs ChatGPT\\\\n16:31 - Conclusion\\\\n\\\\n#chatgpt #promptengineering #artificialintelligence #python #gpt4 #machinelearning #huggingface\"",
    "lengthSeconds": "1023",
    "uploadDate": "2023-05-03",
    "thumbnail_url": "https://i.ytimg.com/vi/lHxDDwznq6I/maxresdefault.jpg"
  },
  {
    "link": "watch?v=h1tJZQPcimM",
    "title": "LangChain Chains: Use ChatGPT to Build Conversational Agents, Summaries and Q&A on Text With LLMs",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584237.2159753,
    "genre": "Education",
    "views": "807",
    "desc": "In this tutorial, we will explore the power of LangChain Chains for building useful LLM applications. You will learn how to use ChatGPT to execute chains sequentially, create summaries and answer questions on a text.\\\\n\\\\nPrompt Engineering Tutorial: https://www.mlexpert.io/prompt-engineering\\\\nPrompt Engineering GitHub Repository: https://github.com/curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\n00:00 - Intro\\\\n01:15 - Google Colab Setup\\\\n02:01 - LLM Chain\\\\n04:38 - Sequential Chain\\\\n08:00 - Summarization Chain\\\\n10:50 - Question Answering Chain\\\\n16:58 - Bash Chain\\\\n17:40 - Conclusion\\\\n\\\\n#langchain #chatgpt #promptengineering #huggingface #artificialintelligence #python\"",
    "lengthSeconds": "1142",
    "uploadDate": "2023-04-29",
    "thumbnail_url": "https://i.ytimg.com/vi/h1tJZQPcimM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=zy6LiK5F5-s",
    "title": "LangChain Models: ChatGPT, Flan Alpaca, OpenAI Embeddings, Prompt Templates & Streaming",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584236.8339741,
    "genre": "Education",
    "views": "942",
    "desc": "In this video, you\\'ll learn how how to use chat models with LangChain, create embeddings, and leverage large language models to generate completions. We\\'ll also use prompt templates to enhance the quality of the generated responses. Finally, we\\'ll look at streaming the responses to the standard output. \\\\n\\\\nPrompt Engineering Tutorial: https://www.mlexpert.io/prompt-engineering\\\\nPrompt Engineering GitHub Repository: https://github.com/curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\n00:00 - Intro\\\\n00:45 - Google Colab Setup\\\\n01:55 - Large Language Models\\\\n08:22 - Embeddings\\\\n11:00 - ChatGPT Chat Model\\\\n14:27 - Prompt Templates\\\\n17:54 - Streaming\\\\n18:50 - Conclusion\\\\n\\\\n#langchain #chatgpt #promptengineering #huggingface #artificialintelligence #python\"",
    "lengthSeconds": "1220",
    "uploadDate": "2023-04-27",
    "thumbnail_url": "https://i.ytimg.com/vi/zy6LiK5F5"
  },
  {
    "link": "watch?v=i3AO5s59i8Y",
    "title": "StableLM - Open Source Large Language Model (LLM) by Stability AI",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584236.6789742,
    "genre": "Education",
    "views": "2608",
    "desc": "In this video, we\\'ll have a look at Stability AI LLM - StableLM. We\\'ll set up StableLM in a Google Colab notebook and compare its performance with ChatGPT. The available models, including StableLM-Tuned-Alpha-7B, which has been fine-tuned with Stanford Alpaca\\'s procedure using a combination of five recent datasets for conversational agents, are also discussed.\\\\n\\\\nPrompt Engineering Tutorial: https://www.mlexpert.io/prompt-engineering\\\\nPrompt Engineering GitHub Repository: https://github.com/curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain\\\\nStableLM GitHub Repository: https://github.com/Stability-AI/StableLM\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\n00:00 - Intro\\\\n00:34 - StableLM Overview\\\\n01:43 - Google Colab Setup\\\\n06:12 - StableLM vs ChatGPT\\\\n09:50 - Conclusion\\\\n\\\\n#chatgpt #promptengineering #gpt4 #python #artificialintelligence #stablelm\"",
    "lengthSeconds": "620",
    "uploadDate": "2023-04-20",
    "thumbnail_url": "https://i.ytimg.com/vi/i3AO5s59i8Y/maxresdefault.jpg"
  },
  {
    "link": "watch?v=YfqJyK1QJlA",
    "title": "Open Assistant: Conversational AI (ChatGPT) for everyone. Run in Google Colab.",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584240.312974,
    "genre": "Education",
    "views": "915",
    "desc": "In this YouTube video, we\\'ll have a look at Open Assistant and show you how to run it on Google Colab. We\\'ll also try out the web demo and compare Open Assistant to ChatGPT. If you\\'re interested in natural language processing and conversational AI, you won\\'t want to miss this tutorial!\\\\n\\\\nPrompt Engineering Tutorial: https://www.mlexpert.io/prompt-engineering\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nOpen Assistant Webpage: https://open-assistant.io/\\\\n\\\\n00:00 - Intro\\\\n00:31 - Open Assistant Project\\\\n02:20 - Web App\\\\n03:42 - Google Colab Setup\\\\n07:23 - Open Assistant vs ChatGPT\\\\n14:41 - Conclusion\\\\n\\\\n#chatgpt #promptengineering #gpt4 #python #artificialintelligence #openassistant\"",
    "lengthSeconds": "941",
    "uploadDate": "2023-04-19",
    "thumbnail_url": "https://i.ytimg.com/vi/YfqJyK1QJlA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=FQnvfR8Dmr0",
    "title": "Loaders, Indexes & Vectorstores in LangChain: Question Answering on PDF files with ChatGPT",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584237.8719747,
    "genre": "Education",
    "views": "1683",
    "desc": "Full Text Tutorial: https://www.mlexpert.io/prompt-engineering/loaders\\\\n\\\\nIn this tutorial, we dive deep into the functionalities of LangChain\\'s data loaders, indexes, and vector stores. We begin by loading a basic text file and using the VectorestoreIndexCreator to run a query against it. We then move on to exploring YouTube and PDF loaders, learning how to split text and create embeddings using models from OpenAI and SentenceTransformers. To save these embeddings, we explore vector stores. \\\\n\\\\nIn the end, you\\'ll learn how to ask questions on a custom PDF file using ChatGPT. This tutorial is an excellent starting point for anyone who wants to gain a deeper understanding of LangChain\\'s capabilities.\\\\n\\\\nPrompt Engineering Tutorial: https://www.mlexpert.io/prompt-engineering\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nLangChain GitHub Repository: https://github.com/hwchase17/langchain\\\\nLangChain Python Docs: https://python.langchain.com/en/latest/\\\\n\\\\n00:00 - Intro\\\\n00:40 - GitHub Repository\\\\n00:45 - Google Colab Setup\\\\n01:58 - TextLoader\\\\n04:30 - Loaders\\\\n08:58 - Text Splitters\\\\n12:40 - Embeddings\\\\n14:40 - Vectorstores\\\\n18:38 - Q\\\\u0026A on a PDF file\\\\n22:53 - Conclusion\\\\n\\\\n#chatgpt #promptengineering #gpt4 #artificialintelligence #python #langchain\"",
    "lengthSeconds": "1451",
    "uploadDate": "2023-04-17",
    "thumbnail_url": "https://i.ytimg.com/vi/FQnvfR8Dmr0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=muXbPpG_ys4",
    "title": "Getting Started with LangChain: Load Custom Data, Run OpenAI Models, Embeddings and ChatGPT",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584241.286974,
    "genre": "Education",
    "views": "3159",
    "desc": "Full Text Tutorial: https://www.mlexpert.io/prompt-engineering/langchain-quickstart\\\\n\\\\nIn this video, you\\'ll learn about the LangChain Python library and how to set up a Google Colab notebook to run a simple OpenAI model. We\\'ll then load an external webpage, specifically the Twitter Recommendation Engine blog post, and ask questions about it using OpenAI embeddings and ChatGPT. Finally, we\\'ll explore prompt templates and chains and combine all components to briefly examine the inner workings of LangChain.\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nLangChain GitHub Repository: https://github.com/hwchase17/langchain\\\\nLangChain Python Docs: https://python.langchain.com/en/latest/\\\\n\\\\n00:00 - Intro\\\\n00:45 - LangChain Overview\\\\n02:36 - Prompt Engineering GitHub Repository\\\\n03:00 - Google Colab Setup\\\\n03:57 - Use an OpenAI model\\\\n05:38 - Q\\\\u0026A on Blog Post\\\\n11:27 - Prompt Templates\\\\n12:49 - Chain for Q\\\\u0026A\\\\n16:36 - Conclusion\\\\n\\\\n#chatgpt #promptengineering #gpt4 #artificialintelligence #python #langchain\"",
    "lengthSeconds": "1063",
    "uploadDate": "2023-04-15",
    "thumbnail_url": "https://i.ytimg.com/vi/muXbPpG_ys4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=K6rwID3IMww",
    "title": "Dolly 2.0: Free ChatGPT-like Model for Commercial Use",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584236.535974,
    "genre": "Education",
    "views": "6982",
    "desc": "In this video, we\\'ll look at Dolly 2.0, the world\\'s first truly open instruction-tuned LLM. We\\'ll cover the Dolly release blogpost and HuggingFace repository. Next, we\\'ll run Dolly in Google Colab. Finally, we\\'ll compare Dolly 2.0 to ChatGPT.  \\\\n\\\\nDolly 2.0 is open-sourced, including the training code, the dataset, and the model weights, which makes it suitable for commercial use. Is it better than Alpaca, Vicuna, and GPT-4?\\\\n\\\\nPrompt Engineering Tutorial: https://www.mlexpert.io/prompt-engineering\\\\nPrompt Engineering GitHub Repository: https://github.com/curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nDolly 2.0 blog post: https://www.databricks.com/blog/2023/04/12/dolly-first-open-commercially-viable-instruction-tuned-llm\\\\nDolly 2.0 on HuggingFace: https://huggingface.co/databricks/dolly-v2-12b\\\\n\\\\n00:00 - Intro\\\\n00:41 - Dolly 2.0 Blog Post\\\\n04:18 - Huggingface Repository\\\\n05:20 - Text Generation Pipeline\\\\n06:28 - Google Colab Setup\\\\n09:55 - Dolly 2.0 vs ChatGPT\\\\n17:12 - Conclusion\\\\n\\\\n#chatgpt #promptengineering #gpt4 #python #artificialintelligence #dolly\"",
    "lengthSeconds": "1106",
    "uploadDate": "2023-04-13",
    "thumbnail_url": "https://i.ytimg.com/vi/K6rwID3IMww/maxresdefault.jpg"
  },
  {
    "link": "watch?v=d7MXio0qCqk",
    "title": "Generative Agents: Simulating Human Behavior with ChatGPT",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584237.574974,
    "genre": "Science",
    "views": "3547",
    "desc": "Is this the beginning of Westworld?\\\\n\\\\nIn this video, we\\'ll explore the latest breakthrough in Large Language Models and the emergence of Generative Agents. Researchers from Stanford and Google demonstrate how the Generative Agents can simulate human-like behavior in an interactive sandbox, inspired by The Sims. This technology extends Language Models to store a complete record of an agent\\'s experiences using natural language and synthesize those memories over time into higher-level reflections. We\\'ll delve into the three key components of Generative Agents and how they work together to plan behavior. Join me to explore the fascinating world of LLMs and Generative Agents!\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nGenerative Agents Paper: https://arxiv.org/abs/2304.03442\\\\nGenerative Agents Demo: https://reverie.herokuapp.com/arXiv_Demo/\\\\n\\\\n00:00 - Intro\\\\n00:49 - Twitter Source\\\\n02:19 - Generative Agents Paper\\\\n12:02 - Agent Goals\\\\n12:32 - Agent Loop\\\\n14:38 - Smallville Sandbox World\\\\n21:06 - Conclusion\\\\n\\\\n#chatgpt #promptengineering #gpt4 #westworld #gamedev #deeplearning\"",
    "lengthSeconds": "1319",
    "uploadDate": "2023-04-11",
    "thumbnail_url": "https://i.ytimg.com/vi/d7MXio0qCqk/maxresdefault.jpg"
  },
  {
    "link": "watch?v=aqFl4FabHrc",
    "title": "Auto-GPT: Autonomous Investment Manager Powered by GPT-4?",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584237.141975,
    "genre": "Science",
    "views": "3113",
    "desc": "In this video, we\\'ll explore how Auto-GPT utilizes the latest advancements in natural language processing to manage a portfolio of Bitcoin and Ethereum, and how it could shape the future of AI in investment management. We\\'ll set up the project in a Google Colab notebook and try it out within a terminal.\\\\n\\\\nAuto-GPT is a groundbreaking open-source application that showcases the power of GPT-4 for autonomously setting and achieving goals with an AI agent. This program is a pioneering example of GPT-4 running fully autonomously, pushing the boundaries of what AI can achieve.\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nAuto-GPT GitHub repository: https://github.com/Torantulino/Auto-GPT\\\\n\\\\n00:00 - Intro\\\\n01:17 - Auto-GPT\\\\n02:20 - Google Colab Setup\\\\n05:15 - Set Goals for the Agent\\\\n07:50 - Use Auto-GPT\\\\n13:25 - Conclusion\\\\n\\\\n#chatgpt #gpt4 #promptengineering #artificialintelligence #python #deeplearning\"",
    "lengthSeconds": "888",
    "uploadDate": "2023-04-09",
    "thumbnail_url": "https://i.ytimg.com/vi/aqFl4FabHrc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=YQSSYz7p1t8",
    "title": "Segment Anything by Meta Research: Image Segmentation with the Largest Dataset and Model Yet!",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584237.3619742,
    "genre": "Science",
    "views": "914",
    "desc": "In this video, we\\'ll take a look at the Segment Anything project by Meta Research, which aims to democratize image segmentation by providing a foundation model for identifying which pixels in an image belong to an object. We\\'ll discuss the challenges of creating accurate segmentation models and explain how the Segment Anything Model (SAM) and Segment Anything 1-Billion mask dataset (SA-1B) can reduce the need for custom data annotation. Can we fine-tune it? Join me to learn more about the potential of Segment Anything and try SAM with your own images!\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nSegment Anything Project: https://segment-anything.com/\\\\nGitHub repository: https://github.com/facebookresearch/segment-anything\\\\n\\\\n00:00 - Intro\\\\n00:38 - Segment Anything Overview\\\\n05:25 - How SAM works?\\\\n06:36 - SA-1B Dataset\\\\n08:50 - GitHub repository\\\\n09:58 - Segment Images\\\\n18:08 - Conclusion\\\\n\\\\n#promptengineering #imagesegmentation #deeplearning #artificialintelligence #meta\"",
    "lengthSeconds": "1166",
    "uploadDate": "2023-04-07",
    "thumbnail_url": "https://i.ytimg.com/vi/YQSSYz7p1t8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=2VpDmaajr48",
    "title": "HuggingGPT & JARVIS: \"Advanced Artificial Intelligence\" with ChatGPT and HuggingFace",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584242.3439753,
    "genre": "Science",
    "views": "5906",
    "desc": "In this video, we\\'ll explore HuggingGPT, a powerful idea for solving various AI tasks using ChatGPT and HuggingFace models. We\\'ll have a look at the HuggingGPT paper and the open-source implementation - JARVIS by Microsoft.\\\\n\\\\nPrompt Engineering GitHub Repository: https://github.com/curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nHuggingGPT Paper: https://arxiv.org/abs/2303.17580\\\\nJARVIS: https://github.com/microsoft/JARVIS\\\\n\\\\n00:00 - Intro\\\\n00:54 - HuggingGPT paper\\\\n04:08 - Workflow\\\\n08:10 - Supported Tasks\\\\n10:50 - Limitations\\\\n13:28 - JARVIS by Microsoft\\\\n14:48 - Conclusion\\\\n\\\\n#chatgpt #gpt4 #python #huggingface #jarvis\"",
    "lengthSeconds": "956",
    "uploadDate": "2023-04-05",
    "thumbnail_url": "https://i.ytimg.com/vi/2VpDmaajr48/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Ew3sGdX8at4",
    "title": "Analyze Custom CSV Data with GPT-4 using Langchain",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584237.501974,
    "genre": "Science",
    "views": "5242",
    "desc": "In this tutorial, we\\'ll explore how to leverage the power of GPT-4 and Langchain to analyze the historical prices of Bitcoin from custom CSV data. We\\'ll walk through the process of creating an agent that can write Pandas code for us and provide insightful answers to our questions. Join me as we dive into the world of cutting-edge artificial intelligence tools!\\\\n\\\\nThis video is not financial advice!\\\\n\\\\nPrompt Engineering GitHub Repository: https://github.com/curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\n00:00 - Intro\\\\n00:44 - What is LangChain?\\\\n02:27 - Bitcoin Price Data Overview\\\\n03:23 - Google Colab Setup\\\\n07:24 - Loading Data\\\\n09:00 - LangChain Agent\\\\n15:53 - Asking Questions on CSV Data\\\\n41:25 - Conclusion\\\\n\\\\n#chatgpt #gpt4 #promptengineering #python #artificialintelligence\"",
    "lengthSeconds": "2585",
    "uploadDate": "2023-04-04",
    "thumbnail_url": "https://i.ytimg.com/vi/Ew3sGdX8at4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=VPL6rwCI80o",
    "title": "Vicuna: An Open-Source Chatbot Comparable to ChatGPT and Google Bard",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584240.2399745,
    "genre": "Science",
    "views": "1755",
    "desc": "Get to know Vicuna, an open-source chatbot that outperforms LLaMA and Stanford Alpaca, and achieves more than 90% quality of ChatGPT (evaluated using GPT-4) in preliminary evaluations. The training and serving code, along with an online demo, are publicly available for non-commercial use.\\\\n\\\\nWe\\'ll do a direct comparison (strictly for fun) of the model with ChatGPT!\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nVicuna Official Page: https://vicuna.lmsys.org/\\\\nVicuna GitHub Repository: https://github.com/lm-sys/FastChat\\\\n\\\\n00:00 - Intro\\\\n00:32 - What is Vicuna?\\\\n02:13 - Vicuna GitHub Repository\\\\n04:04 - How good is Vicuna?\\\\n06:12 - Training Methods\\\\n07:40 - Evaluation\\\\n09:15 - Vicuna vs ChatGPT\\\\n14:14 - Conclusion\\\\n\\\\n#chatgpt #promptengineering #gpt4 #artificialintelligence #python\"",
    "lengthSeconds": "911",
    "uploadDate": "2023-04-02",
    "thumbnail_url": "https://i.ytimg.com/vi/VPL6rwCI80o/maxresdefault.jpg"
  },
  {
    "link": "watch?v=vbUhbM7lZO0",
    "title": "GPT4All Free ChatGPT like model. Run on GPU in Google Colab Notebook.",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, ChatGPT, GPT4",
    "scraped_at": 1684584239.3179746,
    "genre": "Science",
    "views": "6361",
    "desc": "In this tutorial, I\\'ll show you how to run the chatbot model GPT4All. I\\'ll guide you through loading the model in a Google Colab notebook, downloading Llama weights, and running inference on it.\\\\nWe\\'ll also discuss the data curation process, training code, and final model weights released for public use. Finally, we\\'ll compare the results from GPT4All to ChatGPT.\\\\n\\\\nPrompt Engineering Tutorial: https://www.mlexpert.io/prompt-engineering\\\\nGoogle Colab Notebook: https://colab.research.google.com/drive/1wETPY38mhn94BKn4MabDLYC-iB71GoEA\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\n00:00 - Intro\\\\n00:46 - What is GPT4All?\\\\n04:23 - Google Colab Setup\\\\n09:43 - Load GPT4All\\\\n11:50 - First prompt\\\\n13:50 - GPT4All vs ChatGPT\\\\n21:16 - GPT4All chat session\\\\n21:53 - Conclusion\\\\n\\\\n#chatgpt #gpt4 #python #promptengineering #artificialintelligence\"",
    "lengthSeconds": "1374",
    "uploadDate": "2023-04-01",
    "thumbnail_url": "https://i.ytimg.com/vi/vbUhbM7lZO0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=4-Q50fmq7Uw",
    "title": "Fine-tuning Alpaca: Train Alpaca LoRa for Sentiment Analysis on a Custom Dataset",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584241.1429741,
    "genre": "Science",
    "views": "7056",
    "desc": "Full text tutorial: https://www.mlexpert.io/machine-learning/tutorials/alpaca-fine-tuning\\\\n\\\\nWant to train Alpaca on a custom dataset? In this tutorial,  I\\'ll show you how to fine-tune Llama 7B with Alpaca LoRa on a custom dataset of tweets related to bitcoin sentiment. You\\'ll learn how to preprocess the data, train the model, and analyze its performance.\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\n00:00 - Intro\\\\n00:39 - Bitcoin Tweets Sentiment Dataset\\\\n01:26 - Easy Fine-Tuning\\\\n02:25 - Alpaca Lora Dataset\\\\n08:43 - Initialize Llama\\\\n11:22 - Tokenize Dataset\\\\n15:52 - Prepare the Model for Training\\\\n20:22 - HuggingFace Transformers Trainer\\\\n26:55 - Tensorboard Logs\\\\n27:32 - Detect Cryptocurrency Sentiment in Tweets\\\\n32:32 - Conclusion\\\\n\\\\n#alpaca #chatgpt #gpt4 #transformers #pytorch #python\"",
    "lengthSeconds": "2012",
    "uploadDate": "2023-03-30",
    "thumbnail_url": "https://i.ytimg.com/vi/4"
  },
  {
    "link": "watch?v=t68IV5t5UOA",
    "title": "Alpaca & LLaMA: Can it Compete with ChatGPT?",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584240.9039748,
    "genre": "Science",
    "views": "6260",
    "desc": "Full text tutorial: https://www.mlexpert.io/machine-learning/tutorials/alpaca-and-llama-inference\\\\nPrompt Engineering GitHub Repository: https://github.com/curiousily/Get-Things-Done-with-Prompt-Engineering-and-LangChain\\\\n\\\\nDo you want to learn how to do inference with Stanford Alpaca? In this tutorial, I\\'ll show you how to do just that! I\\'ll take you through the entire process step-by-step, from setting up the necessary libraries to generating text using a prompt template. We\\'ll also share some tips and tricks to help you optimize your inferencing process and compare Stanford Alpaca\\'s performance with ChatGPT.\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\nPrepare for the Machine Learning interview: https://mlexpert.io\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\n00:00 - Intro\\\\n01:08 - What is Alpaca?\\\\n05:40 - Alpaca LoRa\\\\n06:55 - Google Colab Setup\\\\n13:45 - Download Model Weights\\\\n18:43 - Prompt Template\\\\n21:05 - Generate a Response\\\\n27:05 - Create Better Interface\\\\n31:05 - Alpaca vs ChatGPT\\\\n41:06 - Conclusion\\\\n\\\\n#chatgpt #promptengineering #alpaca #transformers\"",
    "lengthSeconds": "2530",
    "uploadDate": "2023-03-25",
    "thumbnail_url": "https://i.ytimg.com/vi/t68IV5t5UOA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=y6ibRbAdV3c",
    "title": "Build a Neural Network for Classification from Scratch with PyTorch",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, PyTorch, Neural Networks",
    "scraped_at": 1684584237.290974,
    "genre": "Science",
    "views": "570",
    "desc": "Full text tutorial: https://www.mlexpert.io/machine-learning/crash-course/neural-network-for-classification\\\\n\\\\nIn this video, you\\'ll learn how to create your first neural network using PyTorch.\\\\n\\\\nFirst, we\\'ll install PyTorch 2.0, and import any necessary packages,.\\\\n\\\\nNext, we\\'ll dive into data preparation. We\\'ll cover how to load a dataset, and split it into training and validation sets.\\\\n\\\\nAfter that, we\\'ll move on to building your neural network. We\\'ll explain the basic structure of a neural network and how to make one in PyTorch. \\\\n\\\\n00:00 - Intro\\\\n01:02 - What is a Neural Network?\\\\n04:00 - Notebook Setup\\\\n05:30 - Data Exploration\\\\n12:36 - Dataset Split\\\\n15:46 - Create Tensors from the Data\\\\n22:49 - Create a Neural Network\\\\n32:02 - Activation Functions (ReLU)\\\\n38:43 - Conclusion\\\\n\\\\n#python #pytorch  #deeplearning #machinelearning #neuralnetworks\"",
    "lengthSeconds": "2380",
    "uploadDate": "2023-03-18",
    "thumbnail_url": "https://i.ytimg.com/vi/y6ibRbAdV3c/maxresdefault.jpg"
  },
  {
    "link": "watch?v=cZ2V2wIAjuM",
    "title": "5 Steps to Create Effective ChatGPT Prompts - Beginners Guide to Prompt Engineering",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, ghatgpt, gpt",
    "scraped_at": 1684584237.716974,
    "genre": "Science",
    "views": "502",
    "desc": "Prompt Engineering Tutorial: https://www.mlexpert.io/prompt-engineering\\\\nChatGPT API Tutorial: https://www.mlexpert.io/prompt-engineering/advanced/chatgpt-api\\\\n\\\\nAre you struggling to create prompts that can provide unique and interesting responses? In this video, I\\'ll share the proven 5-step template for crafting effective prompts. Whether you are a teacher, a marketer, or simply someone looking to start a conversation, this guide will help you craft compelling prompts that spark curiosity and encourage meaningful interactions. So, if you want to learn how to create prompts that can help you connect with your audience and drive engagement, watch this video now!\\\\n\\\\n00:00 - Intro\\\\n00:42 - Why this template?\\\\n01:19 - Basic prompt\\\\n01:41 - Clean state\\\\n02:09 - Identity\\\\n03:14 - Objective\\\\n03:48 - Context\\\\n04:38 - Language tone\\\\n05:22 - Result review\\\\n07:49 - Template\\\\n08:38 - Tips \\\\u0026 Tricks\\\\n09:15 - Conclusion\\\\n\\\\n#chatgpt #artificialintelligence #chatgptprompts #promptengineering\"",
    "lengthSeconds": "623",
    "uploadDate": "2023-03-13",
    "thumbnail_url": "https://i.ytimg.com/vi/cZ2V2wIAjuM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=PzRvUngOF2o",
    "title": "Exploring the ChatGPT API with Python: Multiple Completions, Max Tokens, Temperature, tiktoken",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584239.242974,
    "genre": "Science",
    "views": "1163",
    "desc": "Full ChatGPT API Tutorial: https://www.mlexpert.io/prompt-engineering/advanced/chatgpt-api\\\\nFull Prompt Engineering Tutorial: https://www.mlexpert.io/prompt-engineering\\\\n\\\\nIn this video, you\\'ll get through the process of creating a simple request using the ChatGPT API. From there, we\\'ll dive into creating a conversation and explore more advanced options like multiple completions, adjusting the temperature, and using the tiktoken library to count tokens. So, whether you\\'re new to the ChatGPT API or looking to expand your knowledge, this video has something for everyone!\\\\n\\\\n00:00 - ChatGPT API\\\\n01:37 - Comparing with ChatGPT Web App\\\\n03:08 - Get API Key\\\\n03:49 - Google Colab Setup\\\\n04:18 - First Request\\\\n04:42 - Recreate the Web Prompts\\\\n13:38 - Maximum Tokens\\\\n16:23 - Count Tokens with tiktoken\\\\n17:57 - Generate Multiple Completions\\\\n20:05 - Temperature\\\\n26:04 - Conclusion\\\\n\\\\n#chatgpt #chatgptapi #chatgpttutorial #python #deeplearning\"",
    "lengthSeconds": "1650",
    "uploadDate": "2023-03-05",
    "thumbnail_url": "https://i.ytimg.com/vi/PzRvUngOF2o/maxresdefault.jpg"
  },
  {
    "link": "watch?v=FkiykIpNVaQ",
    "title": "Build Your First Model with PyTorch and Python | PyTorch Tutorial for Beginners",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584241.8149743,
    "genre": "Science",
    "views": "717",
    "desc": "Learn the basics of linear regression with a Simple Linear Regression model, and how to implement it in PyTorch.\\\\nFull tutorial: https://www.mlexpert.io/machine-learning/crash-course/build-your-first-model\\\\n\\\\n00:00 - Intro\\\\n01:18 - Notebook setup\\\\n02:12 - Explore data\\\\n04:40 - Create your model\\\\n11:33 - Turn the data into Tensors\\\\n12:53 - Predictions from an untrained model\\\\n14:40 - Training\\\\n21:50 - Explore predictions\\\\n24:00 - Conclusion\\\\n\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n#pytorch #deeplearning #tutorial #python #machinelearning #course\"",
    "lengthSeconds": "1489",
    "uploadDate": "2023-01-29",
    "thumbnail_url": "https://i.ytimg.com/vi/FkiykIpNVaQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=nZ5j289WN8g",
    "title": "Sentence Transformers (SBERT) with PyTorch: Similarity and Semantic Search",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584240.1669745,
    "genre": "Science",
    "views": "1124",
    "desc": "\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nIn this video tutorial, we\\'ll be diving into the world of Sentence Transformers and how to use them in PyTorch. Sentence transformers are a powerful tool for text similarity and semantic search. We\\'ll have a look at Siamese Neural Networks, how to use Sentence Transformers and train them!\\\\n\\\\n00:00 - Intro\\\\n00:55 - The task of sentence similarity\\\\n01:25 - Sentence Transformers\\\\n04:33 - Siamese Neural Networks\\\\n08:08 - Install libraries\\\\n08:48 - Sentence Transformer\\\\n14:10 - Corpus embeddings\\\\n16:05 - Query similarity\\\\n18:08 - Sentence similarity\\\\n19:10 - Semantic search\\\\n22:53 - Train your own model\\\\n27:10 - Conclusion\\\\n\\\\n\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n#pytorch #sbert #python #deeplearning #machinelearning #tutorial #transformers\"",
    "lengthSeconds": "1657",
    "uploadDate": "2023-01-26",
    "thumbnail_url": "https://i.ytimg.com/vi/nZ5j289WN8g/maxresdefault.jpg"
  },
  {
    "link": "watch?v=mjeutxDtzTE",
    "title": "Deploy LayoutLMv3 for Document Classification using Streamlit, Transformers and HuggingFace Spaces",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584240.7559748,
    "genre": "Science",
    "views": "1280",
    "desc": "\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nComplete Text Tutorial (Google Colab notebook included): https://www.mlexpert.io/machine-learning/tutorials/document-classification-with-layoutlmv3\\\\n\\\\nIn this video, you\\'ll learn how to deploy a pre-trained LayoutLMv3 model for document classification using Streamlit and HuggingFace Spaces. This is a powerful combination of tools that allows for easy and free deployment of pre-trained models. We will be going through the steps of loading the model, preparing the input data, and running the classification process. By the end of this video, you will have a solid understanding of how to deploy pre-trained models for document classification in your own projects and a demo app.\\\\n\\\\n00:00 - Intro\\\\n00:36 - Demo app\\\\n01:46 - Streamlit\\\\n02:58 - Project setup\\\\n06:20 - VSCode setup\\\\n08:00 - Streamlit app\\\\n29:48 - Upload to HuggingFace Spaces\\\\n32:38 - Test the live app\\\\n33:24 - Conclusion\\\\n\\\\n\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n#pytorch #streamlit #python #deeplearning #machinelearning #tutorial #course\"",
    "lengthSeconds": "2099",
    "uploadDate": "2023-01-24",
    "thumbnail_url": "https://i.ytimg.com/vi/mjeutxDtzTE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=TXZmaIvE9tw",
    "title": "Mastering PyTorch Tensors: The Ultimate Guide for Beginners",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584239.0989742,
    "genre": "Science",
    "views": "478",
    "desc": "A comprehensive guide to understanding and using PyTorch tensors for machine learning and deep learning projects\\\\nFull tutorial: https://www.mlexpert.io/machine-learning/crash-course/tensors\\\\n\\\\n00:00 - Intro\\\\n00:54 - Create Tensors\\\\n12:04 - Tensor types\\\\n19:21 - Operations on Tensors\\\\n31:54 - Slicing and indexing\\\\n33:51 - Reshaping\\\\n37:28 - Save and load Tensor data\\\\n38:48 - Conclusion\\\\n\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n#pytorch #deeplearning #machinelearning #python #tutorial #course\"",
    "lengthSeconds": "2368",
    "uploadDate": "2023-01-22",
    "thumbnail_url": "https://i.ytimg.com/vi/TXZmaIvE9tw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=LT1UD6Yw8Vo",
    "title": "Evaluate LayoutLMv3 for Document Classification | Save & Load Model to HuggingFace Hub",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584240.3859751,
    "genre": "Science",
    "views": "1071",
    "desc": "We already have a LayoutLMv3 model trained on document images. How well does it perform on unseen data?\\\\n\\\\nComplete Text Tutorial (Google Colab notebook included): https://www.mlexpert.io/machine-learning/tutorials/document-classification-with-layoutlmv3\\\\n\\\\n00:00 - Intro\\\\n01:03 - Upgrade libraries\\\\n05:42 - Save the best model\\\\n07:02 - Upload your model to HuggingFace Hub\\\\n11:10 - Training metrics\\\\n12:08 - Load your model from HuggingFace Hub\\\\n14:10 - Predict the class of a document image\\\\n20:10 - Explore predictions using a confusion matrix\\\\n25:47 - Conclusion\\\\n\\\\n\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n#pytorch #python #deeplearning #machinelearning #tutorial #huggingface #transformers\"",
    "lengthSeconds": "1605",
    "uploadDate": "2023-01-20",
    "thumbnail_url": "https://i.ytimg.com/vi/LT1UD6Yw8Vo/maxresdefault.jpg"
  },
  {
    "link": "watch?v=pcX4a5xZsIQ",
    "title": "PyTorch Installation & VSCode setup | PyTorch Tutorial for Beginners 2023",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584239.7959738,
    "genre": "Science",
    "views": "1947",
    "desc": "Learn how to install PyTorch with pyenv and pip on Linux (Ubuntu).\\\\nFull tutorial: https://www.mlexpert.io/machine-learning/crash-course/install\\\\n\\\\n00:00 - PyTorch\\\\n01:10 - virtualenv with pyenv\\\\n03:00 - Project directory\\\\n04:00 - Install helper libraries\\\\n04:25 - Setup VSCode\\\\n06:58 - Install PyTorch\\\\n08:20 - Test PyTorch installation\\\\n\\\\nCommands used:\\\\n\\\\npyenv install 3.10.9\\\\npyenv virtualenv 3.10.9 learn-pytorch\\\\npip install black isort flake8\\\\n\\\\n\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n#pytorch #python #vscode #deeplearning #tutorial #course\"",
    "lengthSeconds": "599",
    "uploadDate": "2023-01-18",
    "thumbnail_url": "https://i.ytimg.com/vi/pcX4a5xZsIQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=skUcIjQcOUU",
    "title": "Machine Learning Engineer Mock Interview for Meta (Facebook) with ChatGPT",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584238.324974,
    "genre": "Science",
    "views": "585",
    "desc": "Can ChatGPT pass the Machine Learning Engineer (MLE) interview at Meta?\\\\n\\\\nIn this video, I\\'ll ask ChatGPT some of the most common Machine Learning interview questions at Meta. From general Machine Learning to ML System Design and writing code using Python and PyTorch. Can Artificial Intelligence pass the interview?\\\\n\\\\n00:00 - Intro\\\\n00:10 - ChatGPT Overview\\\\n09:45 - Interview Start\\\\n11:18 - Can you explain a specific machine learning project you have worked on?\\\\n13:57 - How do you handle missing or incomplete data in a machine learning project?\\\\n16:20 - How do you evaluate the performance of a machine learning model?\\\\n20:35 - Can you discuss a situation where you had to balance precision and recall in a model?\\\\n23:16 - What feature engineering techniques have you used and why?\\\\n25:10 - Write code in Python to generate a classification dataset with 3 classes and 5 features. You should be able to use the features to classify the examples.\\\\n28:33 - Use the dataset to train a 2-layer Neural Network with PyTorch\\\\n33:28 - Design a restaurant recommendation system\\\\n35:50 - You found that your system is overfitting. What might be the cause of that? What can you do to fix it?\\\\n38:50 - Will I recommend ChatGPT for Machine Learning Engineer?\\\\n40:13 - Giving ChatGPT feedback about the interview\\\\n\\\\n\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n#chatgpt #deeplearning #machinelearning #interview #machinelearningengineer #pytorch #python\"",
    "lengthSeconds": "2482",
    "uploadDate": "2023-01-16",
    "thumbnail_url": "https://i.ytimg.com/vi/skUcIjQcOUU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=sMgx05wthKw",
    "title": "Fine-tuning LayoutLMv3 for Document Classification with HuggingFace & PyTorch Lightning",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning",
    "scraped_at": 1684584236.994974,
    "genre": "Science",
    "views": "2983",
    "desc": "\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nLearn how to fine-tune LayoutLMv3 using a custom OCR with PyTorch Lightning and HuggingFace Transformers\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\n\\\\n00:00 - Intro\\\\n00:42 - Add libraries\\\\n01:04 - Convert document images with EasyOCR\\\\n09:00 - Integrate the OCR results with LayoutLMv3Processor\\\\n16:22 - Create PyTorch Dataset\\\\n24:49 - Split images into train and test set\\\\n28:27 - Create a model using PyTorch Lightning\\\\n37:17 - Train LayoutLMv3\\\\n41:26 - Conclusion\\\\n\\\\n\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n#pytorch #deeplearning #machinelearning #transformers #python\"",
    "lengthSeconds": "2539",
    "uploadDate": "2023-01-12",
    "thumbnail_url": "https://i.ytimg.com/vi/sMgx05wthKw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=w3zYRLxj7MQ",
    "title": "Document Text Detection (OCR) with EasyOCR and Python",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, Python, OCR",
    "scraped_at": 1684584240.457974,
    "genre": "Science",
    "views": "1853",
    "desc": "How to extract and detect text in document images/PDF files? EasyOCR is an open-source project that allows you to do that automatically. We\\'ll replace the Tesseract OCR engine and learn how to use EasyOCR for our document classification pipeline.\\\\n\\\\n00:00 - Intro\\\\n00:58 - Update libraries\\\\n06:22 - Convert HTML files to images\\\\n16:00 - EasyOCR\\\\n33:20 - Conclusion\\\\n\\\\n\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n#pytorch  #python #deeplearning #ocr #machinelearning #nlp\"",
    "lengthSeconds": "2105",
    "uploadDate": "2023-01-09",
    "thumbnail_url": "https://i.ytimg.com/vi/w3zYRLxj7MQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=JlAWaTnPB7w",
    "title": "LeetCode #20 - Valid Parenthesis | Stack | Python",
    "tags": "FAANG, Python, Stack, Algorithms, Data Structures",
    "scraped_at": 1684584237.4309747,
    "genre": "Science",
    "views": "243",
    "desc": "Learn how to solve LeetCode #20 using a stack in Python\\\\n\\\\n(00:00)  Problem understanding\\\\n(01:17)  Solution explanation\\\\n(02:40)  Coding\\\\n(06:47)  Verification\\\\n(09:57)  Space/time complexity\\\\n\\\\n#leetcode #python #faang #algorithms\"",
    "lengthSeconds": "660",
    "uploadDate": "2022-10-22",
    "thumbnail_url": "https://i.ytimg.com/vi/JlAWaTnPB7w/maxresdefault.jpg"
  },
  {
    "link": "watch?v=HFHI8C44Q2w",
    "title": "Document Classification with Transformers and PyTorch | Setup & Preprocessing with LayoutLMv3",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, Transformers",
    "scraped_at": 1684584240.993974,
    "genre": "Science",
    "views": "10741",
    "desc": "Learn how to prepare financial documents for classification using the HuggingFace Transformers library and LayoutLMv3. We\\'ll look at the feature extractor and tokenizer and how you can preprocess a document image.\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\n\\\\n\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n#transformers  #pytorch  #python  #nlp  #machinelearning #deeplearning\"",
    "lengthSeconds": "2355",
    "uploadDate": "2022-06-30",
    "thumbnail_url": "https://i.ytimg.com/vi/HFHI8C44Q2w/maxresdefault.jpg"
  },
  {
    "link": "watch?v=kmDf9iW7Tbo",
    "title": "Train Deep Learning Model with PyTorch Lightning - TensorBoard, Learning rate finder and Checkpoints",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, PyTorch",
    "scraped_at": 1684584238.5399752,
    "genre": "Science",
    "views": "3527",
    "desc": "\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nLearn how to fine-tune a Transformer model (ELECTRA) with PyTorch Lightning. PyTorch Lightning makes training on a CUDA-enabled GPU extremely simple and fast - in a line of code. You\\'ll learn how to save checkpoints, log training data to TensorBoard and find (near) optimal learning rates with the Learning rate finder.\\\\n\\\\n#Python #PyTorch #DeepLearning #MachineLearning #Transformers #PyTorchLightning #NLP\"",
    "lengthSeconds": "1501",
    "uploadDate": "2022-03-19",
    "thumbnail_url": "https://i.ytimg.com/vi/kmDf9iW7Tbo/maxresdefault.jpg"
  },
  {
    "link": "watch?v=UwnaSyIxinw",
    "title": "ELECTRA Classifier with PyTorch Lightning",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, PyTorch, PyTorch Lightning, NLP, Transformers, BERT",
    "scraped_at": 1684584238.176974,
    "genre": "Science",
    "views": "2015",
    "desc": "\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nELECTRA is a different type of Transformer. Trained on the Replaced Token Detection (RTD) instead of Masked Language Modelling (MLM) task. It can help you solve your NLP tasks with faster (and less GPU power) fine-tuning and pre-training (if you choose to).\\\\n\\\\nWe\\'ll look at the different components of ELECTRA provided by the HuggingFace Transformers library. We\\'ll code an emotion classifier using PyTorch Lightning`s LightningModule.\\\\n\\\\n#PyTorch #NLP #Tranformers #PyTorchLightning #Python #DeepLearning\"",
    "lengthSeconds": "2179",
    "uploadDate": "2021-12-25",
    "thumbnail_url": "https://i.ytimg.com/vi/UwnaSyIxinw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=e47f__x7KSE",
    "title": "Build a custom dataset with LightningDataModule in PyTorch Lightning",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, PyTorch, PyTorch Lightning, Dataset, NLP, Transformers",
    "scraped_at": 1684584239.0269742,
    "genre": "Science",
    "views": "3876",
    "desc": "\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nBuild a custom PyTorch Dataset for classifying emotions from Reddit comments (using the GoEmotions dataset). We\\'ll wrap the preprocessing steps into a LightningDataModule and prepare it for training our model.\\\\n\\\\n#PyTorchLightning #PyTorch #MachineLearning #DeepLearning #Python\"",
    "lengthSeconds": "1591",
    "uploadDate": "2021-12-08",
    "thumbnail_url": "https://i.ytimg.com/vi/e47f__x7KSE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=aPVGQqrZaaU",
    "title": "Getting started with PyTorch Lightning for Deep Learning",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, PyTorch, Python, PyTorchLightning",
    "scraped_at": 1684584237.0669742,
    "genre": "Science",
    "views": "3472",
    "desc": "\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nLearn how PyTorch Lightning can help you make building your Deep Learning projects easier. You\\'ll learn how to install it and have a look at the emotion classification dataset GoEmotions by Google.\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(00:00)  What is PyTorch Lightning?\\\\n(03:26)  GoEmotions dataset by Google\\\\n(04:27)  Setup Google Colab notebook\\\\n(06:06)  Exploring the data\\\\n(14:20)  Tokenizing a Reddit comment\\\\n(18:15)  Choosing sequence length\\\\n(21:15)  Coming up next\\\\n\\\\n#PyTorch #PyTorchLightning #DeepLearning #MachineLearning\"",
    "lengthSeconds": "1313",
    "uploadDate": "2021-11-26",
    "thumbnail_url": "https://i.ytimg.com/vi/aPVGQqrZaaU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=KMyZUIraHio",
    "title": "Text summarization with T5 Transformer using PyTorch, PyTorch Lightning and Python | NLP Tutorial",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, NLP, Transformer, BERT, T5, Text",
    "scraped_at": 1684584241.588974,
    "genre": "Science",
    "views": "21557",
    "desc": "\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nBuild a news article summarizer by fine-tuning the T5 transformer on a custom dataset. We\\'ll use PyTorch, PyTorch Lightning and the Transformers library from HuggingFace to get it done!\\\\n\\\\n#Transformers #NLP #PyTorch #Python #T5\"",
    "lengthSeconds": "2547",
    "uploadDate": "2021-04-13",
    "thumbnail_url": "https://i.ytimg.com/vi/KMyZUIraHio/maxresdefault.jpg"
  },
  {
    "link": "watch?v=PCgrgHgy26c",
    "title": "Multivariate Time Series Classification Tutorial with LSTM in PyTorch, PyTorch Lightning and Python",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, Python, PyTorch, Time Series, Classification, Tutorial",
    "scraped_at": 1684584241.671974,
    "genre": "Science",
    "views": "35365",
    "desc": "\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f  1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nIn this tutorial, you\\'ll learn how to convert sequences of sensor data to classify the surface on which a robot currently is. We\\'ll use PyTorch Lightning to build a data module and an LSTM model for sequence classification. How accurate will our model be?\\\\n\\\\n#TimeSeries #PyTorch #Python #LSTM #Classification #Tutorial\"",
    "lengthSeconds": "2570",
    "uploadDate": "2021-04-06",
    "thumbnail_url": "https://i.ytimg.com/vi/PCgrgHgy26c/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ODEGJ_kh2aA",
    "title": "Multivariate Time Series Forecasting with LSTM using PyTorch and PyTorch Lightning (ML Tutorial)",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, Time Series, LSTM, Forecasting, Bitcoin, PyTorch, Python",
    "scraped_at": 1684584236.9209757,
    "genre": "Science",
    "views": "30318",
    "desc": "\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f  1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nBuild and train an LSTM Deep Neural Network for predicting Bitcoin price from multivariate Time Series data. We\\'ll use PyTorch and PyTorch Lightning to train and evaluate our model.\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(00:00)  Intro\\\\n(02:30)  Create PyTorch dataset\\\\n(12:44)  Build LSTM model\\\\n(27:58)  Training setup\\\\n(31:45)  Exploring the predictions\\\\n(44:34)  Outro\\\\n\\\\n\\\\n#PyTorch #LSTM #TimeSeries #PyTorchLightning #Python\"",
    "lengthSeconds": "2763",
    "uploadDate": "2021-03-30",
    "thumbnail_url": "https://i.ytimg.com/vi/ODEGJ_kh2aA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=jR0phoeXjrc",
    "title": "Multivariate Time Series Data Preprocessing with Pandas in Python | Machine Learning Tutorial",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, Time Series, PyTorch, Pandas, Python",
    "scraped_at": 1684584238.6149745,
    "genre": "Science",
    "views": "24312",
    "desc": "\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f  1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nLearn how to prepare data for Time Series forecasting. We\\'ll convert minute-by-minute Bitcoin trading data (stored in CSV file) into sequences. We\\'ll scale the data and split it into training and test sets.\\\\n\\\\n#TimeSeries #LSTM #PyTorch #Python #Transformer\"",
    "lengthSeconds": "1824",
    "uploadDate": "2021-03-27",
    "thumbnail_url": "https://i.ytimg.com/vi/jR0phoeXjrc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=r6XY80Z9eSA",
    "title": "Fine-Tuning T5 for Question Answering using HuggingFace Transformers, Pytorch Lightning & Python",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, PyTorch, HuggingFace, Transformers, PytorchLightning, Python",
    "scraped_at": 1684584242.480975,
    "genre": "Science",
    "views": "25332",
    "desc": "\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f  1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nTrain a T5 (text-to-text transformer) model on a custom dataset for biomedical Question Answering. We\\'ll look at auto-regressive text generation and different methods of generating text from sequence-to-sequence models.\\\\n\\\\n#QuestionAnswering #DeepLearning #Transformers #T5 #HuggingFace #NLP #PyTorch #PyTorchLightning #MachineLearning #Python\"",
    "lengthSeconds": "3020",
    "uploadDate": "2021-01-11",
    "thumbnail_url": "https://i.ytimg.com/vi/r6XY80Z9eSA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=_l2wJb3QPdk",
    "title": "Create Custom Dataset for Question Answering with T5 using HuggingFace, Pytorch Lightning & PyTorch",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, Pytorch",
    "scraped_at": 1684584242.2059743,
    "genre": "Science",
    "views": "13778",
    "desc": "\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f  1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nLearn how to create a dataset for Question Answering with T5 using questions from the BioASQ challenge. Learn the basics of the T5Tokenizer and prepare a data module for fine-tuning on Question Answering tasks.\\\\n\\\\n#T5 #QuestionAnswering #HuggingFace #Transformers #PyTorch #PyTorchLightning #MachineLearning #DeepLearning #Python\"",
    "lengthSeconds": "3348",
    "uploadDate": "2021-01-02",
    "thumbnail_url": "https://i.ytimg.com/vi/_l2wJb3QPdk/maxresdefault.jpg"
  },
  {
    "link": "watch?v=UJGxCsZgalA",
    "title": "Fine-Tuning BERT with HuggingFace and PyTorch Lightning for Multilabel Text Classification | Train",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, PyTorch, BERT, HuggingFace, Transformers, NLP",
    "scraped_at": 1684584237.793974,
    "genre": "Science",
    "views": "14291",
    "desc": "\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x93\\x94  Complete tutorial + notebook: https://curiousily.com/posts/multi-label-text-classification-with-bert-and-pytorch-lightning/\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f  1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nLearn how to create a model that uses BERT to classify toxic comments. Use PyTorch Lightning to train and evaluate it. We\\'ll look at the history of the training progress using TensorBoard!\\\\n\\\\nIn the end, we\\'ll build a simple function that ties everything together and classifies toxic text.\\\\n\\\\n#PyTorch #BERT #PyTorchLightning #NLP #Python #MachineLearning #DeepLearning\"",
    "lengthSeconds": "3412",
    "uploadDate": "2020-12-14",
    "thumbnail_url": "https://i.ytimg.com/vi/UJGxCsZgalA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=wG2J_MJEjSQ",
    "title": "Fine-Tuning BERT with HuggingFace and PyTorch Lightning for Multilabel Text Classification | Dataset",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, BERT, HuggingFace, Transformers, Tokenization, NLP, Text processing, PyTorch Lightning, PyTorch",
    "scraped_at": 1684584238.097974,
    "genre": "Science",
    "views": "26604",
    "desc": "\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x8e\\x93  Prepare for the Machine Learning interview: https://mlexpert.io\\\\n\\xf0\\x9f\\x93\\x94  Complete tutorial + notebook: https://curiousily.com/posts/multi-label-text-classification-with-bert-and-pytorch-lightning/\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f  1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nLearn how to use BERT to classify toxic comments from raw text. You\\'ll learn how to prepare a custom dataset, tokenize the text using the Transformers library by HuggingFace. We\\'ll have a look at PyTorch Lightning and create a data module for our dataset.\\\\n\\\\n#PyTorch #BERT #PyTorchLightning #NLP #Python #MachineLearning #DeepLearning\"",
    "lengthSeconds": "2220",
    "uploadDate": "2020-12-12",
    "thumbnail_url": "https://i.ytimg.com/vi/wG2J_MJEjSQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=XNRzZkZ-Byg",
    "title": "Object Detection on Custom Dataset with YOLO (v5) | Fine-tuning with PyTorch and Python Tutorial",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, YOLO, Object Detection, PyTorch, Python, Finetuning",
    "scraped_at": 1684584240.6799755,
    "genre": "Science",
    "views": "65548",
    "desc": "Learn how to fine-tune a pre-trained YOLO v5 model using a custom clothing dataset. YOLO is fast, but is it accurate?\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\n\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x94  Complete tutorial + notebook: https://www.curiousily.com/posts/object-detection-on-custom-dataset-with-yolo-v5-using-pytorch-and-python/\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f  1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(00:00)  What are we doing?\\\\n(00:15)  Overview of YOLO\\\\n(08:55)  Install required libraries\\\\n(12:45)  Fine-tuning the model\\\\n(22:10)  Evaluating the results\\\\n(25:43)  Detecting objects in images\\\\n\\\\n#YOLO #ObjectDetection #Python #PyTorch #YOLOv5 #DeepLearning #MachineLearning #NeuralNetworks\"",
    "lengthSeconds": "1851",
    "uploadDate": "2020-06-21",
    "thumbnail_url": "https://i.ytimg.com/vi/XNRzZkZ"
  },
  {
    "link": "watch?v=NsxDrEJTgRw",
    "title": "Create YOLO (v5) Dataset for Custom Object Detection using OpenCV, PyTorch and Python Tutorial",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, Object Detection, YOLO, YOLOv5, PyTorch, Dataset",
    "scraped_at": 1684584241.4429739,
    "genre": "Science",
    "views": "48219",
    "desc": "\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x94  Complete tutorial + notebook: https://www.curiousily.com/posts/object-detection-on-custom-dataset-with-yolo-v5-using-pytorch-and-python/\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f  1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x94\\xa3  GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nLearn how to create a custom dataset for object detection with YOLOv5 of clothing in images. Complete source code and Google Colab notebook included.\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(00:00)  What are we doing?\\\\n(00:23)  Dataset overview - clothing item detection\\\\n(01:26)  Look at the YOLO v5 project on GitHub\\\\n(02:58)  Google Colab notebook setup\\\\n(11:25)  Look at a sample image from the dataset\\\\n(24:14)  Convert the dataset to YOLO (darknet) format\\\\n(34:36)  Understanding the file structure of our dataset\\\\n\\\\n#YOLO #ObjectDetection #Python #PyTorch #Dataset\"",
    "lengthSeconds": "2192",
    "uploadDate": "2020-06-14",
    "thumbnail_url": "https://i.ytimg.com/vi/NsxDrEJTgRw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=x54GdkpW9JY",
    "title": "3D Photo Inpainting Python Tutorial | Turn Any Picture Into 3D Photo with Machine Learning",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, Python, CNN, Computer Vision, CV, 3D Photo, Inpainting",
    "scraped_at": 1684584238.4689746,
    "genre": "Science",
    "views": "15902",
    "desc": "\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96  Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f  1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x93\\x94  Complete tutorial + notebook: https://www.curiousily.com/posts/3d-photo-inpainting-turn-any-picture-into-3d-photo-with-deep-learning-and-python/\\\\n\\\\nHave you seen those amazing 3D photos on Facebook and Instagram? How can you create your own from regular photos? In this video, we\\'re going to do that with the help of a project called: \\\\\"",
    "lengthSeconds": "1229",
    "uploadDate": "2020-05-28",
    "thumbnail_url": "https://i.ytimg.com/vi/x54GdkpW9JY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=6_kK6wRtzhk",
    "title": "Reproducible Machine Learning & Experiment Tracking Pipeline with Python and DVC",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Deep Learning, Python, Scikit",
    "scraped_at": 1684584237.952974,
    "genre": "Science",
    "views": "6928",
    "desc": "\\xf0\\x9f\\x94\\x94 Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96 Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x93\\x94 Complete tutorial: https://www.curiousily.com/posts/reproducible-machine-learning-and-experiment-tracking-pipiline-with-python-and-dvc/\\\\n\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f 1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x94\\xa3 GitHub: https://github.com/curiousily/Reproducible-ML-with-DVC\\\\n\\\\nHow do you manage your Machine Learning experiments? How do you keep track of your results? Can you make your work completely reproducible?\\\\n\\\\nIn this video, we\\'ll have a look at the DVC (Data Version Control) tool. We\\'ll build a complete Machine Learning experiment with Scikit Learn, Python, and DVC. We\\'ll make it reproducible and track various evaluation metrics along the way. Can DVC deliver on the promises it makes?\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(00:00)  What is DVC?\\\\n(02:22)  Overview of the dataset we\\'re going to use\\\\n(03:30)  Start the first Machine Learning experiment - use Linear Regression\\\\n(28:20)  Add DVC to the project\\\\n(35:36)  Add second experiment to the project - use Random Forest\\\\n(38:20)  Compare metrics from both experiments\\\\n\\\\n#Reproducibility #ExperimentTracking #ML #Python #Scikitlearn #Sklearn  #DVC  #DL #RandomForest #LinearRegression\"",
    "lengthSeconds": "2445",
    "uploadDate": "2020-05-18",
    "thumbnail_url": "https://i.ytimg.com/vi/6_kK6wRtzhk/maxresdefault.jpg"
  },
  {
    "link": "watch?v=K4rRyAIn0R0",
    "title": "Deploy with FastAPI | | Sentiment Analysis with BERT using huggingface, PyTorch and Python Tutorial",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Python, BERT, Sentiment Analysis, huggingface, PyTorch, NLP, Dataset, Google Play, Apps, User Reviews, Pandas, Tokenizer, Preprocessing, REST, FASTAPI",
    "scraped_at": 1684584238.248974,
    "genre": "Science",
    "views": "12513",
    "desc": "\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f 1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x93\\x96 Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\x94 Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x94 Complete tutorial + notebook: https://www.curiousily.com/posts/deploy-bert-for-sentiment-analysis-as-rest-api-using-pytorch-transformers-by-hugging-face-and-fastapi/\\\\n\\xf0\\x9f\\x94\\xa3 GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nLearn how to deploy a pre-trained BERT model as a REST API using FastAPI and Uvicorn\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python Book: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\nFull project on GitHub: https://github.com/curiousily/Deploy-BERT-for-Sentiment-Analysis-with-FastAPI\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(00:00)  Demo of the REST API\\\\n(02:20)  Initialize a new project with pyenv and pipenv\\\\n(07:55)  Create a stubbed API response\\\\n(17:30)  Add the pre-trained BERT model to our project\\\\n(19:35)  Reacting to a 4.5 (on the Richter scale) earthquake \\xf0\\x9f\\x99\\x80\\\\n(30:05)  Integrate our model predictions in the REST API\\\\n\\\\n#BERT #RestAPI #FastAPI #Deployment #ML #MachineLearning #Huggingface #Transformer #PyTorch  #TransferLearning #SentimentAnalysis #NLP #FineTuning #DeepLearning\"",
    "lengthSeconds": "2138",
    "uploadDate": "2020-05-02",
    "thumbnail_url": "https://i.ytimg.com/vi/K4rRyAIn0R0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=8N-nM3QW7O0",
    "title": "Text Classification | Sentiment Analysis with BERT using huggingface, PyTorch and Python Tutorial",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Python, BERT, Sentiment Analysis, huggingface, PyTorch, NLP, Dataset, Google Play, Apps, User Reviews, Pandas, Tokenizer, Preprocessing",
    "scraped_at": 1684584241.3699744,
    "genre": "Science",
    "views": "77043",
    "desc": "Build a sentiment classification model using BERT from the Transformers library by Hugging Face with PyTorch and Python. Learn more about what BERT is, how to use it, and fine-tune it for sentiment analysis on Google Play app reviews. How good will your model be?\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\n\\\\n\\xf0\\x9f\\x94\\x94 Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96 Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x93\\x94 Complete tutorial + notebook: https://www.curiousily.com/posts/sentiment-analysis-with-bert-and-hugging-face-using-pytorch-and-python/\\\\n\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f 1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x94\\xa3 GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python Book: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(00:00)  What is BERT?\\\\n(11:47)  Notebook progress review\\\\n(14:05)  Load BERT using Hugging Face\\\\n(17:43)  Create a Sentiment Classifier using Transfer Learning and BERT\\\\n(24:15)  Training the model\\\\n(44:15)  Evaluation  - how good our model is?\\\\n(57:10)  Predicting sentiment from raw text\\\\n\\\\n#BERT #Huggingface #Transformer #PyTorch  #TransferLearning #SentimentAnalysis #NLP #FineTuning #DeepLearning\"",
    "lengthSeconds": "3743",
    "uploadDate": "2020-04-19",
    "thumbnail_url": "https://i.ytimg.com/vi/8N"
  },
  {
    "link": "watch?v=Osj0Z6rwJB4",
    "title": "Text Preprocessing | Sentiment Analysis with BERT using huggingface, PyTorch and Python Tutorial",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Python, BERT, Sentiment Analysis, huggingface, PyTorch, NLP, Dataset, Google Play, Apps, User Reviews, Pandas, Tokenizer, Preprocessing",
    "scraped_at": 1684584239.867975,
    "genre": "Science",
    "views": "40369",
    "desc": "\\xf0\\x9f\\x94\\x94 Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96 Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x93\\x94 Complete tutorial + notebook: https://www.curiousily.com/posts/sentiment-analysis-with-bert-and-hugging-face-using-pytorch-and-python/\\\\n\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f 1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x94\\xa3 GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nLearn how to preprocess raw text data using the huggingface BertTokenizer and create a PyTorch dataset. We\\'ll look into adding special tokens, padding to fixed-length sequences and creating attention masks.\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(00:00)  Introduction\\\\n(02:18)  Notebook setup\\\\n(03:36)  Data exploration\\\\n(11:07)  Data preprocessing - tokenization, padding \\\\u0026 attention mask\\\\n(26:55)  Choosing maximum sequence length\\\\n(29:34)  Create PyTorch dataset\\\\n(33:47)  Splitting the data into train, validation, and test sets\\\\n(35:13)  Creating data loaders\\\\n\\\\n#BERT #Huggingface #PyTorch #SentimentAnalysis #TextPreprocessing #NLP #Tokenizer\"",
    "lengthSeconds": "2405",
    "uploadDate": "2020-04-11",
    "thumbnail_url": "https://i.ytimg.com/vi/Osj0Z6rwJB4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=-CAC4wK9Ey0",
    "title": "Create Custom Dataset | Sentiment Analysis with BERT using huggingface, PyTorch and Python Tutorial",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Python, BERT, Sentiment Analysis, huggingface, PyTorch, NLP, Dataset, Google Play, Apps, User Reviews, Pandas",
    "scraped_at": 1684584242.622974,
    "genre": "Science",
    "views": "13396",
    "desc": "\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f 1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x93\\x96 Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x94\\x94 Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x94 Complete tutorial + notebook: https://www.curiousily.com/posts/create-dataset-for-sentiment-analysis-by-scraping-google-play-app-reviews-using-python/\\\\n\\xf0\\x9f\\x94\\xa3 GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nCreate your own sentiment analysis dataset by scraping user reviews for mobile apps on Google Play. We\\'ll pick some popular Todo and Calendar apps, get their reviews and store them into CSV files using Pandas.\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(04:55)  Choosing apps for our dataset\\\\n(13:15)  Scraping app info\\\\n(27:23)  Scraping user reviews\\\\n\\\\n#BERT #SentimentAnalysis #PyTorch #Python #HuggingFace #Transformers #UserReview #GooglePlay\"",
    "lengthSeconds": "2195",
    "uploadDate": "2020-04-06",
    "thumbnail_url": "https://i.ytimg.com/vi/"
  },
  {
    "link": "watch?v=16DhtEOJwTA",
    "title": "Visual Debugger for Jupyter Lab/IPython Notebooks | Installation, Code Examples & Debugging",
    "tags": "Machine Learning, TensorFlow, Artificial Intelligence, Data Science, PyTorch, Python, Jupyter, Notebook, Keras, NumPy, Pandas, Jupyterlab",
    "scraped_at": 1684584240.0129743,
    "genre": "Science",
    "views": "18418",
    "desc": "Get started with the new Visual Debugger for Jupyterlab. Learn how to set breakpoints, inspect variables, and navigate the call stack right into your notebooks! We\\'ll have a look at a simple example of how to use the debugger in practice!\\\\n\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(03:05)  Create new Conda environment and install the Jupyter debugger\\\\n(05:24)  Start the Jupyterlab server\\\\n(06:26)  Using the debugger into a notebook\\\\n(08:34)  Complete example on how to debug code in Jupyterlab\\\\n\\\\n#debugger #jupyter #python #notebook #debugging #datascience\"",
    "lengthSeconds": "938",
    "uploadDate": "2020-03-29",
    "thumbnail_url": "https://i.ytimg.com/vi/16DhtEOJwTA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=qN3n0TM4Jno",
    "title": "Time Series Anomaly Detection Tutorial with PyTorch in Python | LSTM Autoencoder for ECG Data",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Python, Time Series, LSTM, PyTorch, ECG, Autoencoder, Anomaly Detection",
    "scraped_at": 1684584239.169974,
    "genre": "Science",
    "views": "33609",
    "desc": "Use real-world Electrocardiogram (ECG) data to detect anomalies in a patient heartbeat. We\\'ll build an LSTM Autoencoder, train it on a set of normal heartbeats and classify unseen examples as normal or anomalies.\\\\n\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\nComplete tutorial + source code: https://www.curiousily.com/posts/time-series-anomaly-detection-using-lstm-autoencoder-with-pytorch-in-python/\\\\nGitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(04:35)  Load the ECG data\\\\n(14:09)  Exploratory Data Analysis\\\\n(23:29)  Data preprocessing\\\\n(33:30)  Build an LSTM Autoencoder with PyTorch\\\\n(43:07)  Training\\\\n(50:58)  Loading pre-trained model\\\\n(51:53)  Choosing a threshold for anomaly detection\\\\n(55:36)  Finding abnormal heartbeats\\\\n\\\\n#TimeSeries #AnomalyDetection #LSTMAutoencoder #PyTorch #Python\"",
    "lengthSeconds": "4221",
    "uploadDate": "2020-03-19",
    "thumbnail_url": "https://i.ytimg.com/vi/qN3n0TM4Jno/maxresdefault.jpg"
  },
  {
    "link": "watch?v=rJnlBhruwYM",
    "title": "Data Visualization Tutorial for Beginners with Matplotlib in Python | Exploratory Data Analysis",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Python, Data Visualization, Data Exploration, Exploratory Data Analysis, Matplotlib, Seaborn, Histogram, Scatterplot, Violinplot, Barchart",
    "scraped_at": 1684584237.6459749,
    "genre": "Science",
    "views": "998",
    "desc": "Learn how to build an intuition about a Machine Learning problem by creating some fundamental with Matplotlib and Seaborn\\\\n\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\nGitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(03:03)  Download the data\\\\n(07:32)  Reading the data\\\\n(08:43)  Histogram\\\\n(12:35)  Box Plot\\\\n(14:28)  Violin Plot\\\\n(16:57)  Bar Chart\\\\n(19:35)  Line Chart\\\\n(21:38)  Scatter plot\\\\n(26:45)  Stacker Bar Plot\\\\n(30:08)  Showing an image\"",
    "lengthSeconds": "1924",
    "uploadDate": "2020-03-12",
    "thumbnail_url": "https://i.ytimg.com/vi/rJnlBhruwYM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=yYlVOrbV_KY",
    "title": "Transfer Learning for Image Classification with PyTorch & Python Tutorial | Traffic Sign Recognition",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Python, PyTorch, Image Classification, ResNet, Traffic Sign, Self",
    "scraped_at": 1684584239.5889778,
    "genre": "Science",
    "views": "10047",
    "desc": "\\xf0\\x9f\\x97\\x93\\xef\\xb8\\x8f 1:1 Consultation Session With Me: https://calendly.com/venelin-valkov/consulting\\\\n\\xf0\\x9f\\x94\\x94 Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x96 Get SH*T Done with PyTorch Book: https://bit.ly/gtd-with-pytorch\\\\n\\xf0\\x9f\\x93\\x94 Complete tutorial + notebook: https://www.curiousily.com/posts/transfer-learning-for-image-classification-using-torchvision-pytorch-and-python/\\\\n\\xf0\\x9f\\x94\\xa3 GitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nLearn how to classify traffic sign images using a pre-trained ResNet model. Make predictions for traffic signs that are not seen by your model.\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(00:25)  Dataset Overview\\\\n(04:15)  Exploring the data\\\\n(10:00)  Building a dataset\\\\n(25:30)  Creating a model based on pre-trained ResNet model\\\\n(34:50)  Training our model\\\\n(39:20)  Model evaluation\\\\n(47:00)  Predicting on a single image\\\\n(54:50)  Solving the unknown Traffic Sign problem\\\\n\\\\n#TransferLearning #PyTorch #TrafficSign #ComputerVision #TorchVision\"",
    "lengthSeconds": "3936",
    "uploadDate": "2020-03-11",
    "thumbnail_url": "https://i.ytimg.com/vi/yYlVOrbV_KY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=8A6TEjG2DNw",
    "title": "LSTM Time Series Prediction Tutorial using PyTorch in Python | Coronavirus Daily Cases Forecasting",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Time Series, Time Series Analysis, Coronavirus, PyTorch, LSTM",
    "scraped_at": 1684584241.214974,
    "genre": "Science",
    "views": "30562",
    "desc": "Predict future Coronavirus daily cases using real-world data. Learn the basics of using LSTMs for Time Series forecasting with PyTorch in Python.\\\\n\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\nTutorial: https://www.curiousily.com/posts/time-series-forecasting-with-lstm-for-daily-coronavirus-cases/\\\\nGitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\nNotebook: https://colab.research.google.com/drive/1nQYJq1f7f4R0yeZOzQ9rBKgk00AfLoS0\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(00:48)  Overview of the Coronavirus\\\\n(05:33)  Loading the Data\\\\n(07:28)  Data Exploration\\\\n(11:01)  Data Preprocessing\\\\n(25:11)  Building a Model\\\\n(35:37)  Training\\\\n(43:06)  Evaluation\\\\n(53:33)  Using all data for training\\\\n(55:31)  Predicting future cases\\\\n\\\\n#coronavirus #covid19 #timeseries #pytorch #lstm #python\"",
    "lengthSeconds": "3655",
    "uploadDate": "2020-03-03",
    "thumbnail_url": "https://i.ytimg.com/vi/8A6TEjG2DNw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=6s0QigVxdVI",
    "title": "OpenCV Python Tutorial for Beginners | Image processing for Computer Vision & Deep Learning",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Python, Computer Vision, OpenCV, Data preprocessing",
    "scraped_at": 1684584238.8869746,
    "genre": "Science",
    "views": "2203",
    "desc": "Learn how to preprocess images using OpenCV. Read, write, crop, resize, rotate, blur, find contours and many more practical tips included.\\\\n\\\\nTutorial: https://www.curiousily.com/posts/opencv-tutorial-for-beginners-with-python/\\\\nNotebook: https://colab.research.google.com/drive/1VKdoOfFeANFCWf5BDKpms4g4ViNG_msY\\\\nSubscribe: http://bit.ly/venelin-subscribe\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(04:33)  Reading an image\\\\n(06:05)  Show an image\\\\n(08:03)  Convert to grayscale\\\\n(09:08)  Save to a file\\\\n(10:51)  Resizing\\\\n(12:35)  Cropping\\\\n(13:48)  Rotation\\\\n(17:25)  Adding blur\\\\n(22:04)  Finding contours in an image\\\\n(26:04)  Masking and placing an image on top of another\\\\n(35:28)  Drawing circles on top of another image\\\\n(38:00)  Adding text to an image\"",
    "lengthSeconds": "2461",
    "uploadDate": "2020-02-28",
    "thumbnail_url": "https://i.ytimg.com/vi/6s0QigVxdVI/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ZNM1Z2ix-1k",
    "title": "Pandas Tutorial for Beginners | Data Analysis for Machine Learning with Python",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Python, Pandas, Data Analysis, Tutorials, Tutorial, Basics, Beginner, Deep Learning",
    "scraped_at": 1684584240.0909746,
    "genre": "Science",
    "views": "5194",
    "desc": "Subscribe: http://bit.ly/venelin-subscribe\\\\n\\\\nLearn the basics of Pandas DataFrames and the most common operations you need to do effective data analysis.\\\\n\\\\nNotebook (Google Colab): https://colab.research.google.com/drive/1YaeSfRdwl7dz20_asAItXNc6QKF6M0fB\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(01:40)  Installing Pandas\\\\n(07:00)  Check for missing values\\\\n(07:38)  Remove rows with missing values\\\\n(08:43)  Check column data types\\\\n(08:51)  Convert column to datetime\\\\n(10:22)  List the name of the columns\\\\n(10:55)  Deleting columns\\\\n(12:15)  Select a subset of the columns\\\\n(13:16)  Get all possible values in a column\\\\n(13:42)  Renaming columns\\\\n(14:50)  Reordering columns\\\\n(15:55)  Add new column\\\\n(17:02)  Select rows based on column value\\\\n(18:00)  Iterating over rows\\\\n(18:47)  Plotting\"",
    "lengthSeconds": "1415",
    "uploadDate": "2020-02-24",
    "thumbnail_url": "https://i.ytimg.com/vi/ZNM1Z2ix"
  },
  {
    "link": "watch?v=O2ZNjOBPF4M",
    "title": "Build a Neural Network with Python Tutorial | Deep Learning with PyTorch",
    "tags": "Machine Learning, TensorFlow.js, Artificial Intelligence, Data Science, Deep Learning, Python, PyTorch, Neural Networks, Tutorial, Course, Programming",
    "scraped_at": 1684584238.394974,
    "genre": "Science",
    "views": "5432",
    "desc": "Subscribe: http://bit.ly/venelin-subscribe\\\\nComplete tutorial: https://www.curiousily.com/posts/build-your-first-neural-network-with-pytorch/\\\\nGitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\nBuild a model that predicts whether or not is going to rain tomorrow using real-world weather data. Learn how to train, evaluate and make predictions with it\\\\n\\\\n\\xe2\\xad\\x90\\xef\\xb8\\x8f Tutorial Contents \\xe2\\xad\\x90\\xef\\xb8\\x8f\\\\n\\\\n(00:12) Download the weather data\\\\n(04:13) Data preprocessing\\\\n(17:45) Build a Neural Network with PyTorch\\\\n(32:05) Choose a loss function \\\\u0026 optimizer\\\\n(40:25) Doing computations on the GPU (with CUDA)\\\\n(44:03) Training your Neural Network\\\\n(49:17) Saving \\\\u0026 loading a model with PyTorch\\\\n(50:15) Evaluation (How good your model is?)\\\\n(54:41) Making predictions (Is it going to rain?)\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\"",
    "lengthSeconds": "3480",
    "uploadDate": "2020-02-23",
    "thumbnail_url": "https://i.ytimg.com/vi/O2ZNjOBPF4M/maxresdefault.jpg"
  },
  {
    "link": "watch?v=8eLHZ0R5nHQ",
    "title": "Face Detection on Custom Dataset with Detectron2 & PyTorch using Python | Object Detection Tutorial",
    "tags": "Machine Learning, Artificial Intelligence, Data Science, Python, Face Detection, Object Detection, Face Recognition, PyTorch, Deep Learning, Computer Vision, Detectron, Detectron2, Jupyter, Google Colab, Tutorial",
    "scraped_at": 1684584240.524975,
    "genre": "Science",
    "views": "30401",
    "desc": "Subscribe: http://bit.ly/venelin-subscribe\\\\nComplete tutorial + source code: https://www.curiousily.com/posts/face-detection-on-custom-dataset-with-detectron2-in-python/\\\\nGitHub: https://github.com/curiousily/Getting-Things-Done-with-Pytorch\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\nLearn how to prepare a custom Face Detection dataset for Detectron2 and PyTorch. Fine-tune a pre-trained model to find face boundaries in images.\"",
    "lengthSeconds": "4040",
    "uploadDate": "2020-02-15",
    "thumbnail_url": "https://i.ytimg.com/vi/8eLHZ0R5nHQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=gE-95nFF4Cc",
    "title": "Intent Recognition with BERT using Keras and TensorFlow 2 in Python | Text Classification Tutorial",
    "tags": "Machine Learning, TensorFlow, Artificial Intelligence, Data Science, Keras, BERT, Natural Language Processing, Text Classification, Intent Recognition, NLP, Text Analysis, Tokenizer, Python",
    "scraped_at": 1684584241.8969753,
    "genre": "Science",
    "views": "27066",
    "desc": "Subscribe: http://bit.ly/venelin-subscribe\\\\nComplete tutorial + source code: https://www.curiousily.com/posts/intent-recognition-with-bert-using-keras-and-tensorflow-2/\\\\nGitHub: https://github.com/curiousily/Deep-Learning-For-Hackers\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\nLearn how to fine-tune the BERT model for text classification. Train and evaluate it on a small dataset for detecting seven intents. The results might surprise you!\"",
    "lengthSeconds": "4791",
    "uploadDate": "2020-02-08",
    "thumbnail_url": "https://i.ytimg.com/vi/gE"
  },
  {
    "link": "watch?v=H4J74KstHTE",
    "title": "Time Series Anomaly Detection with LSTM Autoencoders using Keras & TensorFlow 2 in Python",
    "tags": "Machine Learning, TensorFlow, Artificial Intelligence, Data Science, Time Series, Anomaly Detection, Autoencoders, LSTM Autoencoders, Keras, Python",
    "scraped_at": 1684584242.052974,
    "genre": "Science",
    "views": "55711",
    "desc": "Subscribe: http://bit.ly/venelin-youtube-subscribe\\\\nComplete tutorial + source code: https://www.curiousily.com/posts/anomaly-detection-in-time-series-with-lstms-using-keras-in-python/\\\\nGitHub: https://github.com/curiousily/Deep-Learning-For-Hackers\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\nDetect anomalies in S\\\\u0026P 500 daily closing price. Build LSTM Autoencoder Neural Net for anomaly detection using Keras and TensorFlow 2.\"",
    "lengthSeconds": "1779",
    "uploadDate": "2019-12-29",
    "thumbnail_url": "https://i.ytimg.com/vi/H4J74KstHTE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=P0o5U9pq8_s",
    "title": "Sentiment Analysis with TensorFlow 2 and Keras using Python",
    "tags": "Machine Learning, TensorFlow, Artificial Intelligence, Data Science, Python, Keras, NLP, Sentiment Analysis, Text Classification, Embeddings, Hotel Reviews, Natural Language Processing, Text Analysis, Text Processing",
    "scraped_at": 1684584241.738975,
    "genre": "Science",
    "views": "8043",
    "desc": "Complete tutorial + source code: https://www.curiousily.com/posts/sentiment-analysis-with-tensorflow-2-and-keras-using-python/\\\\n\\\\nLearn how to preprocess text data using the Universal Sentence Encoder model. Build a model for sentiment analysis of hotel reviews.\"",
    "lengthSeconds": "2890",
    "uploadDate": "2019-12-28",
    "thumbnail_url": "https://i.ytimg.com/vi/P0o5U9pq8_s/maxresdefault.jpg"
  },
  {
    "link": "watch?v=zRsmfc1y28E",
    "title": "Image Data Augmentation for TensorFlow 2, Keras and PyTorch with Albumentations in Python",
    "tags": "Machine Learning, TensorFlow, Artificial Intelligence, Data Science, PyTorch, Object Detection, Image Augmentation, Data Augmentation, Albumentations, CNN, Computer Vision, Document Classification, Keras",
    "scraped_at": 1684584241.5199745,
    "genre": "Science",
    "views": "7568",
    "desc": "Complete tutorial + source code: https://www.curiousily.com/posts/image-data-augmentation-for-tensorflow-2-keras-and-pytorch-with-albumentations-in-python/\\\\n\\\\nLearn how to augment image data for Image Classification, Object Detection, and Image Segmentation\"",
    "lengthSeconds": "3452",
    "uploadDate": "2019-12-21",
    "thumbnail_url": "https://i.ytimg.com/vi/zRsmfc1y28E/maxresdefault.jpg"
  },
  {
    "link": "watch?v=LDQ0C8WwzHY",
    "title": "Object Detection on Custom Dataset with TensorFlow 2 and Keras in Python",
    "tags": "Machine Learning, TensorFlow, Artificial Intelligence, Data Science, Keras, Object Detection, Computer Vision, Convolutional Neural Networks, Python, Vehicle Number Plate",
    "scraped_at": 1684584236.754974,
    "genre": "Science",
    "views": "57571",
    "desc": "Subscribe: http://bit.ly/venelin-subscribe\\\\nComplete tutorial + source code: https://www.curiousily.com/posts/object-detection-on-custom-dataset-with-tensorflow-2-and-keras-using-python/\\\\nGitHub: https://github.com/curiousily/Deep-Learning-For-Hackers\\\\n\\\\n\\xf0\\x9f\\x93\\x96 Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\\\\n\\\\nLearn how to prepare a custom dataset for object detection and detect vehicle plates. Use transfer learning to fine-tune the model and make predictions on test images.\"",
    "lengthSeconds": "2639",
    "uploadDate": "2019-11-30",
    "thumbnail_url": "https://i.ytimg.com/vi/LDQ0C8WwzHY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=xaIA83x5Icg",
    "title": "Time Series Prediction with LSTMs using TensorFlow 2 and Keras in Python",
    "tags": "Machine Learning, TensorFlow, Artificial Intelligence, Data Science, Keras, LSTM, Time Series, Python, Deep Learning, Neural Networks, RNN",
    "scraped_at": 1684584239.4519742,
    "genre": "Science",
    "views": "83180",
    "desc": "Learn how to predict demand using Multivariate Time Series Data. Build a Bidirectional LSTM Neural Network in Keras and TensorFlow 2 and use it to make predictions.\\\\n\\\\nDiscord: https://discord.gg/UaNPxVD6tv\\\\n\\\\n\\xf0\\x9f\\x94\\x94  Subscribe: http://bit.ly/venelin-subscribe\\\\n\\xf0\\x9f\\x93\\x94  Complete tutorial + notebook: https://www.curiousily.com/posts/demand-prediction-with-lstms-using-tensorflow-2-and-keras-in-python/\\\\n\\xf0\\x9f\\x93\\x96  Read Hacker\\'s Guide to Machine Learning with Python: http://bit.ly/Hackers-Guide-to-Machine-Learning-with-Python\"",
    "lengthSeconds": "3346",
    "uploadDate": "2019-11-23",
    "thumbnail_url": "https://i.ytimg.com/vi/xaIA83x5Icg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Lv8ZVoxnX_I",
    "title": "Text classification with TensorFlow and React in JavaScript",
    "tags": "Machine Learning, TensorFlow, TensorFlow.js, Artificial Intelligence, Data Science, JavaScript, React, ReactJS, NLP, Text Classification",
    "scraped_at": 1684584238.957974,
    "genre": "Science",
    "views": "9285",
    "desc": "Complete tutorial + source code: https://www.curiousily.com/posts/todo-list-text-classification-using-embeddings-and-deep-neural-networks/\\\\n\\\\nRun the code in your browser: https://codesandbox.io/s/todo-list-icon-classification-with-tensorflow-js-9nt78\\\\n\\\\nTimestamps:\\\\n\\\\n(0:00) - ToDo app review\\\\n(0:55) - Training data\\\\n(1:43) - Text classification model\\\\n(12:07) - Save/load the trained model\\\\n(15:30) - Suggesting icon\\\\n(24:08) - Testing the model\\\\n\\\\nLearn how to train/save/load a text classification model with TensorFlow.js and use it in React ToDo app\\\\n\\\\n(Book) Deep Learning for JavaScript Hackers: http://bit.ly/deep-learning-for-javascript-hackers\\\\n\\\\n(Book) Hands-On Machine Learning from Scratch: http://bit.ly/hands-on-machine-learning-from-scratch\"",
    "lengthSeconds": "1622",
    "uploadDate": "2019-10-06",
    "thumbnail_url": "https://i.ytimg.com/vi/Lv8ZVoxnX_I/maxresdefault.jpg"
  },
  {
    "link": "watch?v=7THsT1Hf1n0",
    "title": "Build a Simple Neural Network with TensorFlow in JavaScript",
    "tags": "Machine Learning, TensorFlow, TensorFlow.js, Artificial Intelligence, Data Science, JavaScript, Neural Network",
    "scraped_at": 1684584239.3749743,
    "genre": "Science",
    "views": "1408",
    "desc": "Complete tutorial + source code: https://www.curiousily.com/posts/build-a-simple-neural-network-with-tensorflow-js/\\\\n\\\\nRun the code in your browser: https://codesandbox.io/s/simple-neural-network-with-tensorflow-js-uz1ci\\\\n\\\\nLearn how to create and train a simple Neural Network with TensorFlow.js. Evaluate the model performance and use it to make laptop buying decisions.\\\\n\\\\n(Book) Deep Learning for JavaScript Hackers: http://bit.ly/deep-learning-for-javascript-hackers\\\\n\\\\n(Book) Hands-On Machine Learning from Scratch: http://bit.ly/hands-on-machine-learning-from-scratch\"",
    "lengthSeconds": "1024",
    "uploadDate": "2019-10-05",
    "thumbnail_url": "https://i.ytimg.com/vi/7THsT1Hf1n0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=AnHlISVdtjA",
    "title": "Build a simple ToDo app in ReactJS (using Hooks)",
    "tags": "Machine Learning, TensorFlow, TensorFlow.js, Artificial Intelligence, Data Science, JavaScript, ReactJS, Productivity",
    "scraped_at": 1684584239.653974,
    "genre": "Science",
    "views": "15033",
    "desc": "Complete tutorial + source code: https://www.curiousily.com/posts/todo-list-text-classification-using-embeddings-and-deep-neural-networks/\\\\n\\\\nRun the code in your browser: https://codesandbox.io/s/todo-list-icon-classification-with-tensorflow-js-9nt78\\\\n\\\\nLearn how to create a ToDo app with ReactJS and integrate it with TensorFlow JS.\\\\n\\\\n(Book) Deep Learning for JavaScript Hackers: http://bit.ly/deep-learning-for-javascript-hackers\\\\n\\\\n(Book) Hands-On Machine Learning from Scratch: http://bit.ly/hands-on-machine-learning-from-scratch\"",
    "lengthSeconds": "926",
    "uploadDate": "2019-10-04",
    "thumbnail_url": "https://i.ytimg.com/vi/AnHlISVdtjA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=MdPYT-xCj9w",
    "title": "ToDo list Embeddings with TensorFlow in JavaScript",
    "tags": "Machine Learning, TensorFlow, TensorFlow.js, Artificial Intelligence, Data Science, JavaScript, Embedding, Natural Language Processing, Text Classification",
    "scraped_at": 1684584241.0669742,
    "genre": "Science",
    "views": "1070",
    "desc": "Complete tutorial + source code: https://www.curiousily.com/posts/todo-list-text-classification-using-embeddings-and-deep-neural-networks/\\\\n\\\\nRun the code in your browser: https://codesandbox.io/s/todo-list-embeddings-6ff6n\\\\n\\\\nLearn how to use a pre-trained model (Universal Sentence Encoder) in TensorFlow.js to create embeddings of ToDo list items and compute the similarity between different pairs\\\\n\\\\n(Book) Deep Learning for JavaScript Hackers: http://bit.ly/deep-learning-for-javascript-hackers\\\\n\\\\n(Book) Hands-On Machine Learning from Scratch: http://bit.ly/hands-on-machine-learning-from-scratch\"",
    "lengthSeconds": "1354",
    "uploadDate": "2019-10-03",
    "thumbnail_url": "https://i.ytimg.com/vi/MdPYT"
  },
  {
    "link": "watch?v=noWSA6fSi8g",
    "title": "What is a Neural Network? | Machine Learning for JavaScript Hackers with TensorFlow.js",
    "tags": "Machine Learning, TensorFlow, TensorFlow.js, Artificial Intelligence, Logistic Regression, Data Science, JavaScript",
    "scraped_at": 1684584239.9409752,
    "genre": "Science",
    "views": "454",
    "desc": "Complete tutorial + source code: https://www.curiousily.com/posts/build-a-simple-neural-network-with-tensorflow-js/\\\\n\\\\nLearn about the biological inspiration for inventing Neural Networks. Implement and use the Perceptron and Sigmoid Neuron models using TensorFlow.js. Discover different activation functions and ways to initialize the weights of your models.\\\\n\\\\nTimestamps:\\\\n\\\\n(00:20) - What is a Neural Network?\\\\n(02:50) - The Perceptron model\\\\n(09:34) - The Sigmoid Neuron\\\\n(13:30) - Architecting Neural Networks\\\\n(16:48) - Activation functions\\\\n(27:15) - Weight initialization\\\\n\\\\n(Book) Deep Learning for JavaScript Hackers: http://bit.ly/deep-learning-for-javascript-hackers\\\\n\\\\n(Book) Hands-On Machine Learning from Scratch: http://bit.ly/hands-on-machine-learning-from-scratch\"",
    "lengthSeconds": "1979",
    "uploadDate": "2019-07-15",
    "thumbnail_url": "https://i.ytimg.com/vi/noWSA6fSi8g/maxresdefault.jpg"
  },
  {
    "link": "watch?v=QfzrWJPSNyM",
    "title": "Linear Regression with TensorFlow.js",
    "tags": "Machine Learning, TensorFlow, TensorFlow.js, Artificial Intelligence, Logistic Regression, Data Science, JavaScript",
    "scraped_at": 1684584239.7249742,
    "genre": "Science",
    "views": "2469",
    "desc": "Complete tutorial + source code: https://www.curiousily.com/posts/predicting-house-prices-using-linear-regression-with-tensorflow-js/\\\\n\\\\nLearn how to build a Linear Regression model in TensorFlow.js to predict house prices\\\\n\\\\n(Book) Deep Learning for JavaScript Hackers: http://bit.ly/deep-learning-for-javascript-hackers\\\\n\\\\n(Book) Hands-On Machine Learning from Scratch: http://bit.ly/hands-on-machine-learning-from-scratch\"",
    "lengthSeconds": "1261",
    "uploadDate": "2019-07-11",
    "thumbnail_url": "https://i.ytimg.com/vi/QfzrWJPSNyM/hqdefault.jpg"
  },
  {
    "link": "watch?v=9DqaS8PpOhA",
    "title": "Data Preprocessing for Linear Regression with TensorFlow.js",
    "tags": "Machine Learning, TensorFlow, TensorFlow.js, Artificial Intelligence, Data Science, JavaScript, Linear Regression, Preprocessing, Data Wrangling",
    "scraped_at": 1684584238.751974,
    "genre": "Science",
    "views": "1499",
    "desc": "Complete tutorial + source code: https://www.curiousily.com/posts/predicting-house-prices-using-linear-regression-with-tensorflow-js/\\\\n\\\\nLearn how to load CSV files, normalize the data using feature scaling and handle categorical variables.\\\\n\\\\n(Book) Deep Learning for JavaScript Hackers: http://bit.ly/deep-learning-for-javascript-hackers\\\\n\\\\n(Book) Hands-On Machine Learning from Scratch: http://bit.ly/hands-on-machine-learning-from-scratch\"",
    "lengthSeconds": "1493",
    "uploadDate": "2019-07-11",
    "thumbnail_url": "https://i.ytimg.com/vi/9DqaS8PpOhA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=KqmolIJPyi8",
    "title": "Predicting Diabetes with Logistic Regression in TensorFlow.js | Deep Learning for JavaScript Hackers",
    "tags": "Machine Learning, TensorFlow, TensorFlow.js, Artificial Intelligence, Logistic Regression, Data Science, JavaScript",
    "scraped_at": 1684584238.6849742,
    "genre": "Science",
    "views": "2143",
    "desc": "Complete tutorial: http://bit.ly/Predicting-Diabetes-using-Logistic-Regression\\\\n\\\\nBuild a Logistic Regression model in TensorFlow.js using the high-level layers API, and predict whether or not a patient has Diabetes. Learn how to visualize the data, create a Dataset, train and evaluate multiple models.\\\\n\\\\nTimestamps:\\\\n\\\\n(0:00) - What is Logistic Regression?\\\\n(6:23) - Types of models in TensorFlow.js\\\\n(8:29) - Build a Logistic Regression model in TensorFlow.js\\\\n(13:07) - Cross-entropy loss function\\\\n(25:22) - Training evaluation\\\\n(27:00) - Training a model with more features\\\\n(31:15) - Display the confusion matrix\\\\n(39:38) - Train a more complex model\\\\n\\\\n(Book) Deep Learning for JavaScript Hackers: http://bit.ly/deep-learning-for-javascript-hackers\\\\n\\\\n(Book) Hands-On Machine Learning from Scratch: http://bit.ly/hands-on-machine-learning-from-scratch\"",
    "lengthSeconds": "2581",
    "uploadDate": "2019-07-06",
    "thumbnail_url": "https://i.ytimg.com/vi/KqmolIJPyi8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=9HqI4bz5WRk",
    "title": "Data preprocessing with TensorFlow.js for Logistic Regression | Deep Learning for JavaScript Hackers",
    "tags": "machine learning, data preprocessing, data frame, data analysis, javascript, artificial intelligence, tensorflow, tensorflow.js, data science",
    "scraped_at": 1684584241.973974,
    "genre": "Science",
    "views": "1110",
    "desc": "Complete tutorial: http://bit.ly/Predicting-Diabetes-using-Logistic-Regression\\\\n\\\\nLearn how to create tf.data.Dataset for our diabetes prediction task and split the data into training and validation datasets\"",
    "lengthSeconds": "1372",
    "uploadDate": "2019-07-04",
    "thumbnail_url": "https://i.ytimg.com/vi/9HqI4bz5WRk/maxresdefault.jpg"
  },
  {
    "link": "watch?v=P38DZf9iFvA",
    "title": "Logistic Regression with TensorFlow.js: EDA  | Deep Learning for JavaScript Hackers (Part 1)",
    "tags": "machine learning, visualization, data science, tensorflow, plotly, tensorflowjs, artificial intelligence, javascript, charts, diabetes, logistic regression, binary classification",
    "scraped_at": 1684584239.5189745,
    "genre": "Science",
    "views": "1855",
    "desc": "Complete tutorial: http://bit.ly/Predicting-Diabetes-using-Logistic-Regression\\\\n\\\\nRead and visualize a dataset from diabetes patients using Plotly.js. Learn how to create histograms, pie charts and scatter plots in JavaScript!\\\\n\\\\n(Book) Deep Learning for JavaScript Hackers: http://bit.ly/deep-learning-for-javascript-hackers\\\\n\\\\n(Book) Hands-On Machine Learning from Scratch: http://bit.ly/hands-on-machine-learning-from-scratch\"",
    "lengthSeconds": "2640",
    "uploadDate": "2019-07-03",
    "thumbnail_url": "https://i.ytimg.com/vi/P38DZf9iFvA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=pJcDA9sTt4c",
    "title": "Getting Started with TensorFlow.js | Deep Learning for JavaScript Hackers (Part 0)",
    "tags": "machine learning, tensorflow, javascript, tensorflowjs, artificial intelligence, data science, neural networks, deep learning",
    "scraped_at": 1684584238.021975,
    "genre": "Science",
    "views": "3765",
    "desc": "Tutorial + Source Code: http://bit.ly/getting-started-with-tensorflowjs\\\\n\\\\nTimestamps:\\\\n(1:46) - Setup\\\\n(5:36) - What is a Tensor?\\\\n(17:58) - Data visualization with tfjs-vis\\\\n(23:40) - Train a simple Machine Learning model to predict the amount of pounds from kilograms\\\\n\\\\nLearn the basics building blocks of TensorFlow.js. Create some Tensors, do some math, show some charts and even create your first Machine Learning model!\\\\n\\\\n(Book) Deep Learning for JavaScript Hackers: http://bit.ly/deep-learning-for-javascript-hackers\\\\n\\\\n(Book) Hands-On Machine Learning from Scratch: http://bit.ly/hands-on-machine-learning-from-scratch\"",
    "lengthSeconds": "2515",
    "uploadDate": "2019-07-02",
    "thumbnail_url": "https://i.ytimg.com/vi/pJcDA9sTt4c/maxresdefault.jpg"
  },
  {
    "link": "watch?v=CHayUf_IoUc",
    "title": "Self-driving taxi using Reinforcement Learning (Untrained)",
    "tags": "reinforcement learning, mdp, q",
    "scraped_at": 1684584238.8109741,
    "genre": "Science",
    "views": "604",
    "desc": "Complete walkthrough \\\\u0026 source code: https://www.curiousily.com/posts/build-self-driving-taxi-using-reinforcement-learning/\\\\n\\\\nUntrained self-driving agent build in Python and trained using Q-learning.\"",
    "lengthSeconds": "65",
    "uploadDate": "2019-06-28",
    "thumbnail_url": "https://i.ytimg.com/vi/CHayUf_IoUc/hqdefault.jpg"
  },
  {
    "link": "watch?v=gDK9Phy8GmY",
    "title": "Simple Linear Regression using TensorFlow.JS (with JavaScript)  in the browser",
    "tags": "Machine learning, TensorFlowJS, TensorFlow JS, TensorFlow, Deep Learning, JavaScript, Data Science, Linear Regression, Simple Linear Regression, Fibonacci, Fibonacci Sequence, Fibonacci Numbers, NodeJS",
    "scraped_at": 1684584242.1229744,
    "genre": "Science",
    "views": "1894",
    "desc": "Walkthrough \\\\u0026 source code:\\\\nhttp://curiousily.com/machine-learning/2018/06/20/ml-in-browser-for-hackers-part-1.html\\\\n\\\\nReady to build models that run in the browser using only JavaScript and TensorFlow.JS? Let\\'s create a Simple Linear Regression model and pick up some core concepts along the way - Tensors, Optimizers, and Variables. Your mission, should you choose to accept it, is to create a model that given a number from the Fibonacci sequence predicts the next one while only running in the browser!\\\\n\\\\nLive demo:\\\\nhttps://htmlpreview.github.io/?https://github.com/curiousily/Machine-Learning-in-the-Browser-for-Hackers/blob/master/1-linear-regression/index.html\\\\n\\\\nSource code:\\\\nhttps://github.com/curiousily/ML-in-the-Browser-for-Hackers-with-TensorFlow-js/tree/master/1-linear-regression\"",
    "lengthSeconds": "3197",
    "uploadDate": "2018-06-22",
    "thumbnail_url": "https://i.ytimg.com/vi/gDK9Phy8GmY/maxresdefault.jpg"
  }
]