[
  {
    "link": "watch?v=cGPyH-PO8vg",
    "title": "Terraform has forever changed the way I deploy code",
    "tags": "iac, infrastructure, terraform, deployment, infrastructure as code, hashicorp, golang, go, aws, amazon web services, lambda, s3 bucket, s3, sqs, simple message queue, aws s2, aws s3, terra form, infra, infra as code, coding, software, development",
    "scraped_at": 1685095725.904323,
    "genre": "Science",
    "views": "33669",
    "desc": "Never deploy code manually again.\\\\n\\\\nTerraform has probably had one of the biggest impacts to the way I deploy code, and whilst it\\'s not my favorite piece of tooling for performing IaC, it\\'s perhaps the piece that is still the most ubiquitous.\\\\n\\\\nIn this video, we take a brief look at Infrastructure as Code, and why it\\'s useful, as well as deploying a project to AWS using terraform.\\\\n\\\\n#iac #terraform #coding \\\\n\\\\nLinks:\\\\nGit repo: https://github.com/dreamsofcode-io/iac-intro\\\\nIAM file: https://github.com/dreamsofcode-io/iac-intro/blob/files/iam/infrastructure/iam.tf\\\\nHashicorp documentation: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket\\\\ntfenv: https://github.com/tfutils/tfenv\\\\n\\\\nSocials:\\\\nTwitter: https://twitter.com/dreamsofcode_io\\\\nDiscord Server: https://discord.gg/eMjRTvscyt\\\\nPatreon: https://www.patreon.com/DreamsofCode/membership\\\\n\\\\n00:00 Intro\\\\n01:13 Terraform and IaC\\\\n03:33 Setup\\\\n05:40 Terraform basics\\\\n08:58 Project Overview\\\\n10:43 S3 Bucket\\\\n12:05 SQS Queue\\\\n13:05 Lambda\\\\n17:07 Testing Deployment\\\\n18:33 Cleanup (Important!)\\\\n18:46 Outro\"",
    "lengthSeconds": "1152",
    "uploadDate": "2023-05-18",
    "thumbnail_url": "https://i.ytimg.com/vi/cGPyH"
  },
  {
    "link": "watch?v=i04sSQjd-qo",
    "title": "The perfect Neovim setup for Go",
    "tags": "neovim, vim, nvim, golang, go, go lang, vi, editor, text editor, config, lua",
    "scraped_at": 1685095726.7577415,
    "genre": "Science",
    "views": "13152",
    "desc": "Go with Neovim is one of my favorite combinations to use as my daily driver. However, it does take a little configuration to get started.\\\\n\\\\nI want to help share the configuration I have and to encourage others to configure their own editors to work for them. In this video, we look at getting some powerful functionality added to Neovim for use with Go.\\\\n\\\\nIf you\\xe2\\x80\\x99re looking for powerful autocomplete, autoformatting, boilerplate reduction, debugging and many other features, then this video will help you achieve that.\\\\n\\\\n#golang #neovim #coding \\\\n\\\\nMy socials:\\\\nTwitter: https://twitter.com/dreamsofcode_io\\\\nDiscord Server: https://discord.gg/eMjRTvscyt\\\\nPatreon: https://www.patreon.com/DreamsofCode/membership\\\\n\\\\nVideo Links:\\\\nNVChad: https://github.com/NvChad/NvChad\\\\nNVChad Install: git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 \\\\u0026\\\\u0026 nvim\\\\nNVChad Install Windows: git clone https://github.com/NvChad/NvChad $HOME\\\\\\\\AppData\\\\\\\\Local\\\\\\\\nvim --depth 1 \\\\u0026\\\\u0026 nvim\\\\ngopls: https://pkg.go.dev/golang.org/x/tools/gopls\\\\nnull-ls: https://github.com/jose-elias-alvarez/null-ls.nvim\\\\n\\\\nFinal Config: https://github.com/dreamsofcode-io/neovim-go-config\\\\n\\\\n00:00 Intro\\\\n00:17 Getting Started\\\\n01:31 Autocomplete \\\\u0026 Suggestions\\\\n04:36 Autoformatting\\\\n07:05 Deugging\\\\n11:03 Extra features\"",
    "lengthSeconds": "840",
    "uploadDate": "2023-05-08",
    "thumbnail_url": "https://i.ytimg.com/vi/i04sSQjd"
  },
  {
    "link": "watch?v=ywDxJbULcdM",
    "title": "Write better code by doing less. The S in SOLID.",
    "tags": "solid, principles, coding principles, architecture, better code, coding, solid coding, S O L I D",
    "scraped_at": 1685095726.2853563,
    "genre": "Science",
    "views": "17217",
    "desc": "There are five principles the help you write better code, known as SOLID. \\\\n\\\\nIn this video, we look at the first of these principles, known as the Single Responsibility Principle, which dictates that modules should only be responsible for one thing and to do that one thing well. \\\\n\\\\n#coding #solid #architecture\\\\n\\\\nCode: https://github.com/dreamsofcode-io/single-responsibility-principle\\\\n\\\\nMy socials:\\\\nDiscord: https://discord.gg/U4h4SStT\\\\nTwitter: https://twitter.com/dreamsofcode_io\"",
    "lengthSeconds": "561",
    "uploadDate": "2023-05-01",
    "thumbnail_url": "https://i.ytimg.com/vi/ywDxJbULcdM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=DzNmUNvnB04",
    "title": "Tmux has forever changed the way I write code.",
    "tags": "tmux, coding, t mux, dev env",
    "scraped_at": 1685095725.5592995,
    "genre": "Science",
    "views": "232002",
    "desc": "Before tmux, I spent most of my time working in graphical editors and interfaces, and found working in the terminal difficult to do.\\\\n\\\\nAfter moving to tmux and learning how to configure it to suit my needs, I now spend nearly all my time whilst writing code in tmux.\\\\n\\\\nIn this video, I share the configuration that I\\xe2\\x80\\x99ve developed over the years to improve my own productivity, and why you may want to consider using tmux yourself.\\\\n\\\\n#coding #programming #software \\\\n\\\\nTmux config git repository: https://github.com/dreamsofcode-io/tmux\\\\nTmux: https://github.com/tmux/tmux\\\\nTPM: https://github.com/tmux-plugins/tpm\\\\n\\\\nMy socials:\\\\nDiscord: https://discord.gg/U4h4SStT\\\\nTwitter: https://twitter.com/dreamsofcode_io\\\\n\\\\n00:00 Intro\\\\n00:21 Why Tmux?\\\\n01:20 Getting started\\\\n02:59 How to use Tmux\\\\n06:59 Better Navigation\\\\n08:53 Colors\\\\n09:20 Prefix key\\\\n09:49 Theme\\\\n10:36 Mouse Support\\\\n10:51 Window numbering\\\\n11:17 Yanking\\\\n12:26 Current working directory\"",
    "lengthSeconds": "810",
    "uploadDate": "2023-04-25",
    "thumbnail_url": "https://i.ytimg.com/vi/DzNmUNvnB04/maxresdefault.jpg"
  },
  {
    "link": "watch?v=mh_EJhH49Ms",
    "title": "The perfect Neovim setup for Rust.",
    "tags": "rust, rustlang, rusty, neovim, nvim, vim, neo vim, text editor",
    "scraped_at": 1685095725.7663221,
    "genre": "Science",
    "views": "22820",
    "desc": "Give your text editor super powers when it comes to writing Rust code. This video will help you set up your environment to make developing with Rust easier.\\\\n\\\\nBy the end of this video, you\\'ll have autocomplete, auto formatting, debugging and cargo crates utilities running for Neovim, helping to turn Neovim into a powerful text editor for writing code.\\\\n\\\\n#rust #neovim #coding\"",
    "lengthSeconds": "664",
    "uploadDate": "2023-04-16",
    "thumbnail_url": "https://i.ytimg.com/vi/mh_EJhH49Ms/maxresdefault.jpg"
  },
  {
    "link": "watch?v=j584uJhWWhE",
    "title": "This Go package was archived. What do we do now?",
    "tags": "golang, go, gorilla, web service, web router, router, http router, gorilla",
    "scraped_at": 1685095726.1053264,
    "genre": "Science",
    "views": "35754",
    "desc": "At the end of 2022, something unexpected happened in the Go ecosystem. Due to this, a lot of code will likely need to be refactored and migrated in order to prevent against any potential future CVEs or vulnerabilities.\\\\n\\\\nIn this video, I look at three other options to gorilla/mux, how to easily migrate over to any of these options and to talk about what I think this says about Go in the long term.\\\\n\\\\n#golang #coding #discussion \\\\n\\\\nLinks:\\\\nTwitter: https://twitter.com/dreamsofcode_io\\\\nDiscord: https://discord.gg/eMjRTvscyt\"",
    "lengthSeconds": "352",
    "uploadDate": "2023-04-09",
    "thumbnail_url": "https://i.ytimg.com/vi/j584uJhWWhE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Mtgo-nP_r8Y",
    "title": "Turn VIM into a full featured IDE with only one command",
    "tags": "text editor, vim, neovim, nvim, chadnv, emacs, nano, coding, editors, ricing, customization vim, how to set vim, tutorial, vimscript, lua",
    "scraped_at": 1685095726.4936895,
    "genre": "Science",
    "views": "188522",
    "desc": "The number one question I get is to explain how I set up my development environment.\\\\n\\\\nSo, I decided to do a video on one of the key components of my setup. NVChad.\\\\n\\\\nNVChad is a neovim configuration that I\\xe2\\x80\\x99ve been using for just over a year now, and it\\xe2\\x80\\x99s perhaps my favorite configuration so far. \\\\n\\\\nIt offers all the essentials one needs to get started with a modern version of vim whilst still allowing for a decent amount of customization. \\\\n\\\\nIn this video, I share how to get set up with NVChad. Then I look at some of the core features of NVChad and how to add your own plugins and LSP servers.\\\\n\\\\n#neovim #IDE #coding \\\\n\\\\nNOTE: If you\\'re having trouble running NVChad, make sure your Neovim is the most recent version. Apologies for not calling that out in the video! \\\\n\\\\nCommands:\\\\nmacOS/Linux: git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 \\\\u0026\\\\u0026 nvim\\\\nWindows: git clone https://github.com/NvChad/NvChad $HOME\\\\\\\\AppData\\\\\\\\Local\\\\\\\\nvim --depth 1 \\\\u0026\\\\u0026 nvim\\\\n\\\\nMy socials:\\\\nTwitter: https://twitter.com/dreamsofcode_io\\\\nDiscord Server: https://discord.gg/eMjRTvscyt\\\\n\\\\n00:00 Intro\\\\n00:30 Setup\\\\n01:18 Installation\\\\n02:22 Theming\\\\n02:49 Syntax Highlighting\\\\n03:21 File tree\\\\n04:04 File Navigation\\\\n04:41 Cheat Sheet\\\\n05:17 Window Navigation\\\\n05:51 Tabbufline\\\\n06:19 Terminal\\\\n06:42 Customization\\\\n09:43 LSP\\\\n11:36 Outro\"",
    "lengthSeconds": "714",
    "uploadDate": "2023-04-02",
    "thumbnail_url": "https://i.ytimg.com/vi/Mtgo"
  },
  {
    "link": "watch?v=ZbhzLP3vnkg",
    "title": "Tide is perhaps my favorite Rust web app framework.",
    "tags": "tide, rust, rustlang, web app, web api, a p i, api, rusty, framework, spring, rustup, rust lang, software, dev, developer, developers, software dev, software engineering, code, web framework, web dev, api dev, backend",
    "scraped_at": 1685095726.893734,
    "genre": "Science",
    "views": "68338",
    "desc": "There are a name of frameworks for building Rust web applications, and most of them make heavy use of macros and magic. Tide is different.\\\\n\\\\nFor me, Tide feels like it closely resembles other web application frameworks found in other languages, which makes it a familiar and simple framework to use.\\\\n\\\\n#rust #tide #coding #api\\\\n\\\\nMy dotfiles: https://github.com/dreamsofcode-io/dotfiles\"",
    "lengthSeconds": "554",
    "uploadDate": "2023-03-26",
    "thumbnail_url": "https://i.ytimg.com/vi/ZbhzLP3vnkg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=YON9PliOYFk",
    "title": "5 Approaches for Making PostgreSQL run FAST. How to improve database performance.",
    "tags": "postgres, postgrsql, postgresql, database, optimization, database optimization, optimizing, optimising, speed up, datbase tables, tables, performance, database speed, read replicas, writes, write replicas",
    "scraped_at": 1685095725.4823232,
    "genre": "Science",
    "views": "6729",
    "desc": "There\\'s an approach in here for everyone! PostgreSQL is one of the most versatile SQL databases but often does not provide performance out of the box.\\\\n\\\\nFortunately, there are some easy approaches to improve the speed of database queries when it comes to PostgreSQL. In this video, we look at 5 different approaches which can be used based on your requirements.\\\\n\\\\n#postgresql #database #optimization \\\\n\\\\nSource code: https://github.com/dreamsofcode-io/postgres-brrr\"",
    "lengthSeconds": "491",
    "uploadDate": "2023-03-21",
    "thumbnail_url": "https://i.ytimg.com/vi/YON9PliOYFk/maxresdefault.jpg"
  },
  {
    "link": "watch?v=U2PpMZ7hWpg",
    "title": "Should you learn Go in 2023?",
    "tags": "golang, go, software, coding, programming, languages, developer, 2022, learning coding, best language to learn, software language, network programming, highest paid software language",
    "scraped_at": 1685095725.8303225,
    "genre": "Science",
    "views": "31691",
    "desc": "Go is a modern language with a focus on simplicity. With many languages out there, is Go a programming language worth learning in 2023? In this video, we explore some of the reasons that I think it is, and why you may want to consider learning it.\\\\n\\\\n#golang #coding #programming\"",
    "lengthSeconds": "272",
    "uploadDate": "2023-03-14",
    "thumbnail_url": "https://i.ytimg.com/vi/U2PpMZ7hWpg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=g27YffcLYXg",
    "title": "Crystal is the modern Ruby you probably shouldn't use... just yet.",
    "tags": "crystal lang, crystallang, programming language, type safe, coding, ruby, ruby lang, ruby syntax, crystalline, shards, shards package manager, software development, programming languages, gems",
    "scraped_at": 1685095726.68771,
    "genre": "Science",
    "views": "5282",
    "desc": "Ruby has one of my favorite syntax of any programming language. This syntax, coupled with the modern concepts, makes Crystal a really interesting language to play with.\\\\n\\\\nHowever, I don\\'t believe it\\'s ready for production just yet.\\\\n\\\\nUltimately, I have high hopes for Crystal and am looking forward to seeing it grow into it\\'s full potential. Until that time, I\\'m going to be using it as a hobby language, however.\\\\n\\\\n#crystal #coding #ruby \\\\n\\\\n00:00 Intro\\\\n00:29 Getting Started\\\\n00:52 Collections\\\\n01:13 Functions \\\\u0026 Methods\\\\n01:58 Classes, Structs, \\\\u0026 Enums\\\\n03:08 Modules\\\\n03:34 Generics\\\\n04:21 Dependency Management\\\\n05:04 Concurrency\\\\n05:25 Not yet ready\"",
    "lengthSeconds": "452",
    "uploadDate": "2023-03-11",
    "thumbnail_url": "https://i.ytimg.com/vi/g27YffcLYXg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=TCERYbgvbq0",
    "title": "SQLx is my favorite PostgreSQL driver to use with Rust.",
    "tags": "rustlang, rust programming, tokio, postgres, postgresql, pg, rust database, databases, sql, sqlx, rust coding, coding, db, pgdb, psql, rustdb, rust lang, programming, tutorial, rust tutorial, how to, database, mysql, sqlite, postgres sql, rusty, rustup, cargo, crates, crates.io, postgres crate",
    "scraped_at": 1685095726.9636767,
    "genre": "Science",
    "views": "10869",
    "desc": "SQLx is perhaps my favorite Rust crate for interfacing with Postgres, my favorite relational database. It provides a number of features and support that I haven\\'t been able to find in an asynchronous framework.\\\\n\\\\nIn this video, I take a look at the basic usage and also some of the more advanced features that are available with feature flags. \\\\n\\\\nThis should provide a decent tutorial for anyone who is looking for a database driver for their Rust project.\\\\n\\\\nSource code: https://github.com/dreamsofcode-io/rust-sqlx\\\\n\\\\n#rust #postgresql #coding #tutorial #tokio\\\\n\\\\n00:00 Intro\\\\n00:10 Getting started\\\\n02:10 Migrations\\\\n03:34 Writing data\\\\n04:46 Reading Data\\\\n06:46 Transactions\\\\n07:36 Feature Flags\\\\n09:05 Notifications\\\\n09:24 Outro\"",
    "lengthSeconds": "586",
    "uploadDate": "2023-03-05",
    "thumbnail_url": "https://i.ytimg.com/vi/TCERYbgvbq0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=dOzrO40jgbU",
    "title": "Getting started with Tokio. The ultimate starter guide to writing async Rust.",
    "tags": "async, async await, async",
    "scraped_at": 1685095726.351663,
    "genre": "Science",
    "views": "15567",
    "desc": "Async Rust is one of the more exciting developments of the last few years, and Tokio is a powerful framework to enable asynchronous code, which can provide performant and scalable solutions. \\\\n\\\\nIt\\'s also scary and daunting to tackle without any understanding. This video aims to be the ultimate starter guide for writing async code with Tokio, and how to achieve performant code that\\'s both blocking and non-blocking\\\\n\\\\n#rustlang #tokio #async #coding #programming #developers #frameworks #framework #await #asynchronous #nonblockingio\\\\n\\\\n00:00 Intro\\\\n00:12 Getting Started\\\\n01:46 Non Blocking IO\\\\n02:52 Futures\\\\n04:39 Tokio Features\"",
    "lengthSeconds": "424",
    "uploadDate": "2023-03-01",
    "thumbnail_url": "https://i.ytimg.com/vi/dOzrO40jgbU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=YsOYMrBNGq8",
    "title": "Six secrets to speed up Python anyone can use",
    "tags": "python, python development, software engineering, software developer, speed up python, fast python code, better python, cython, multiprocessing, concurrency, threaded python, pypy, numpy, pillow, pandas, interpretor, just in time, optimize, optimization, code, neovim, benchmark",
    "scraped_at": 1685095725.7013233,
    "genre": "Science",
    "views": "3778",
    "desc": "Don\\'t assume Python is slow. These are some of the best ways to turn python into a language that is comparable for runtime performance to other known fast languages. Here, we look at six different approaches to turn your python code into some of the fastest code out there.\\\\n\\\\nof these, my favorite is using pypy, which I think is one of the easiest ways to get more performance.\\\\n\\\\nSource code: https://github.com/dreamsofcode-io/python-go-brrr\\\\n\\\\n#python #fast #coding #developer #programming #optimizing #concurrency #pypy\\\\n\\\\n00:00 Intro\\\\n00:15 Built-in functions\\\\n00:52 Be Lazy with Generators\\\\n01:47 Use Concurrency\\\\n02:39 Cython\\\\n03:24 Using Compiled Frameworks\\\\n03:52 pypy\\\\n04:40 outro\"",
    "lengthSeconds": "301",
    "uploadDate": "2023-02-26",
    "thumbnail_url": "https://i.ytimg.com/vi/YsOYMrBNGq8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=NTTTjQDfmyA",
    "title": "How do NPCs navigate environments? Pathfinding with Pyglet in Python",
    "tags": "AI, Dijkstra",
    "scraped_at": 1685095725.6293235,
    "genre": "Science",
    "views": "1852",
    "desc": "In Games, NPCs help to make the experience richer and fuller for the player. In order to do that, they require the ability to navigate the games environment. In this video, we look at how that\\'s done using two algorithms that are made especially to solve this problem.\\\\n\\\\n#python #gamedev #pathfinding\\\\n\\\\nCode from Video: https://github.com/dreamsofcode-io/pathfinding-for-npcs\\\\n\\\\n0:00 Intro \\\\n01:53 - Line of Sight movement\\\\n03:49 - Graph Theory\\\\n04:40 - Dijkstra\\'s Algorithm\\\\n07:32 - A-Star Algorithm\\\\n08:48 - Final Resultgame Dev\"",
    "lengthSeconds": "571",
    "uploadDate": "2023-02-19",
    "thumbnail_url": "https://i.ytimg.com/vi/NTTTjQDfmyA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=4q3Z5RBX7hQ",
    "title": "Getting started with Rust. A brief Introduction to the language",
    "tags": "coding, develop with rust, guide, how to code in rust, lang, language, learn rust programming language, programming language, rust guide, rust lang, rust language, rust programming full tutorial, rust programming language, rust programming language tutorial, rust programming tutorial, rust programming tutorial #1, rust tutorial, rust tutotial, rust",
    "scraped_at": 1685095725.4123235,
    "genre": "Science",
    "views": "9482",
    "desc": "Fear Rust no more. This video gives a high level overview into common features and functionality so one can get started writing Rust code. \\\\n\\\\nRust is one of the more exciting programming languages to come out of the last 10 years and has remained the most loved language for 6 years in a row. As exciting as it is, it also brings a lot of advanced concepts and a high level of cognitive complexity for newcomers to the language. \\\\n\\\\nIn this video, we dive into Rust to explore some of the basic features and functionality, in order to help you get started. This tutorial is going to be the first part in a series on Rust, and can help you get acquainted to the language.\\\\n\\\\n#rust #coding #tutorial \\\\n\\\\n00:00 Intro\\\\n01:00 Getting Started\\\\n01:40 Cargo\\\\n02:12 Data Structures\\\\n02:40 Dependencies \\\\u0026 Crates\\\\n03:24 Types\\\\n04:01 Functional influence\\\\n04:58 Organization and Modules\\\\n05:13 Memory Safety \\\\u0026 Borrow Checker\\\\n06:13 Tooling\\\\n07:09 Outro\"",
    "lengthSeconds": "472",
    "uploadDate": "2023-02-12",
    "thumbnail_url": "https://i.ytimg.com/vi/4q3Z5RBX7hQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=YbA3pznKR_8",
    "title": "I gave ChatGPT a Coding Interview.",
    "tags": "chat gpt, coding interview, coding interveiw, coding challenge, coding test, chatpgt, chat pgt, job, coding job, programming, software engineering role, software, engineering, software dev, dev, development",
    "scraped_at": 1685095725.337298,
    "genre": "Science",
    "views": "2811",
    "desc": "Everyone has been talking about how to make money with ChatGPT. I\\'m skeptical of the claims that have been floating around YouTube, so wanted to see if I could get go the more traditional approach of getting ChatGPT to make money for me, through employement!. However, it\\'s not wise to just hire anyone without screening them first. Therefore, I gave it a job interview to see if it could pass the high standards I had set for it. \\\\n\\\\nTurns out! There was something I had forgotten to consider for the interview!\\\\n\\\\n#chatgpt #coding #interview\\\\n\\\\n00:00 Intro\\\\n00:33 Technical Screening\\\\n02:10 Whiteboard Coding\\\\n05:24 Culture Interview\\\\n06:48 Negotiations\"",
    "lengthSeconds": "493",
    "uploadDate": "2023-02-05",
    "thumbnail_url": "https://i.ytimg.com/vi/YbA3pznKR_8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=KbiRYkoBV34",
    "title": "Pyglet is Perhaps the BEST Game Engine for Python?",
    "tags": "pygame, pyglet, python game dev, game dev, game development, python games, python coding, pygame game tutorial, tutorial",
    "scraped_at": 1685095726.2193568,
    "genre": "Science",
    "views": "19617",
    "desc": "Building 2D games on python usually means building games with Pygame. However, I decided I wanted to take a look at Pyglet and see what the experience was like there. In this video, I go over the necessary functionality needed for creating games using Pyglet, and give my opinions on what I like about the interface provided by the game engine. \\\\n\\\\nSource code is available here: https://github.com/project-code-io/pyglet-game-engine-overview\\\\n\\\\n00:00 Intro\\\\n00:34 Getting Started\\\\n00:46 Drawing Shapes\\\\n01:11 Drawing Sprites\\\\n01:47 Animations\\\\n02:39 Update Loop\\\\n03:20 Handling Input\\\\n03:47 Drawing Text\\\\n04:06 Playing Audio\\\\n04:42 Conclusion\"",
    "lengthSeconds": "333",
    "uploadDate": "2023-01-29",
    "thumbnail_url": "https://i.ytimg.com/vi/KbiRYkoBV34/maxresdefault.jpg"
  },
  {
    "link": "watch?v=etuOKWLM6zU",
    "title": "Deno & Oak: A Brief Introduction",
    "tags": "javascript, java script, coding, deno, oak, koa, node.js, node, javascript backend, server",
    "scraped_at": 1685095726.4166896,
    "genre": "Science",
    "views": "2525",
    "desc": "Deno, the next runtime from the founder of Node.js, looks to be a promising JavaScript and TypeScript runtime for modern programming. Oak, inspired by Koa, brings a middleware framework to Deno to allow Node.js engineers to easily jump in and get started.\\\\n\\\\nThis video gives a brief introduction to the framework, such as how to get started, how to import the package, and how to perform basic routing and request/response handling. Additionally, Server Sent Events, a server side push technology, is also discussed. \\\\n\\\\nWe also look at some of the tooling provided by the Deno binary.\\\\n\\\\nAll in all, Deno looks to be a promising replacement for Node, and Oak is a wonderful framework to use. \\\\n\\\\n#coding #deno #javascript \\\\n\\\\n0:00 Intro\\\\n0:50 Coding\\\\n3:23 Tooling\"",
    "lengthSeconds": "266",
    "uploadDate": "2023-01-22",
    "thumbnail_url": "https://i.ytimg.com/vi/etuOKWLM6zU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Xn26a0u_fZU",
    "title": "How I used ChatGPT to create Pong in C++",
    "tags": "chatgpt, pong, SDL2, gaming coding, game development, game dev, software engineering, game code, C",
    "scraped_at": 1685095726.0353289,
    "genre": "Science",
    "views": "1051",
    "desc": "Having determined that ChatGPT was not going to replace software engineers, I decided to see how useful it would be for improving productivity when it came to new projects. I decided to create the game of pong using use C++ and SDL2 as I had previous experience with both technologies and building games in the past (albeit many years ago now). I knew that this was going to be a non trivial project with many different components, and so it would be a decent challenge for trying out ChatGPT as an ally, instead of an adversary.\\\\n\\\\nSource Code: https://github.com/project-code-io/pong-chatgpt\"",
    "lengthSeconds": "425",
    "uploadDate": "2023-01-16",
    "thumbnail_url": "https://i.ytimg.com/vi/Xn26a0u_fZU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=H5kRWjWPM2w",
    "title": "Ep 5: Node.js Koa Project with PostgreSQL - Name-spaced Routing",
    "tags": "nodejs, node.js, software development, javascript, koa, postgres, coding tutorial, api tutorial, tutorial, how to build a web app, software engineering, coding guide, coding, postgresql, api routing, api router, express.js, express, koa.js",
    "scraped_at": 1685095725.9683244,
    "genre": "Science",
    "views": "817",
    "desc": "In this episode we look at adding name-spaced API routes to our application. We\\'ll start by explaining name-spaced routes and creating a POST route which allows us to create a new todo_list. \\\\n\\\\nWe also run into a bug regarding timestamps and, after some investigation, figure a solution for it. \\\\n\\\\n\\\\nGitHub URL: https://github.com/valar-videos/koa-pg\\\\nNode Postgres: https://node-postgres.com/\"",
    "lengthSeconds": "1833",
    "uploadDate": "2020-02-15",
    "thumbnail_url": "https://i.ytimg.com/vi/H5kRWjWPM2w/maxresdefault.jpg"
  },
  {
    "link": "watch?v=T4cqBViRLmE",
    "title": "Ep 4: Node.js Koa Project with PostgreSQL - Database Migrations",
    "tags": "postgres, koa, node, node.js, programming, software, development, javascript, server side, backend, how to build an api, how to code, learning to code",
    "scraped_at": 1685095726.6197102,
    "genre": "Science",
    "views": "1473",
    "desc": "In this episode we look at adding database migrations to our application. We\\'ll explain a little about what migrations are used for, and implement using the Postgres Migrations package available on NPM. Then we\\'ll create our first data table and add some data to it.\\\\n\\\\nPostgres Migrations: https://www.npmjs.com/package/postgres-migrations\\\\nGitHub URL: https://github.com/valar-videos/koa-pg\"",
    "lengthSeconds": "1539",
    "uploadDate": "2019-07-05",
    "thumbnail_url": "https://i.ytimg.com/vi/T4cqBViRLmE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=4rE4iWOrujU",
    "title": "Ep 3: Node.js Koa Project with PostgreSQL - Setting up our Database",
    "tags": "postgres, koa, node, node.js, programming, software, development, javascript, server side, backend, how to build an api, how to code, learning to code",
    "scraped_at": 1685095726.8257399,
    "genre": "Science",
    "views": "2280",
    "desc": "In this episode we look at adding PostgreSQL to our application. We\\'ll begin by setting up our local machine to run an instance of PostgreSQL and then connect our server to it using the \\'pg\\' node package.\\\\n\\\\nGitHub URL: https://github.com/valar-videos/koa-pg\"",
    "lengthSeconds": "1929",
    "uploadDate": "2019-01-28",
    "thumbnail_url": "https://i.ytimg.com/vi/4rE4iWOrujU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=MC1zS7XQPwg",
    "title": "Ep2: Node.js Koa Project with PostgreSQL - Server, Routing, and Middleware",
    "tags": "koa, nodejs, node.js, node, server, backend, postgresql, postgres, coding, routing, koa",
    "scraped_at": 1685095726.5577102,
    "genre": "People",
    "views": "3501",
    "desc": "Welcome to a new episode on setting up Node.js with Koa. In this episode we take a look at running our Koa server on a local port and adding our first steps to routing requests in our application. We also take a brief look at middleware and how we can utilise this powerful functionality.\"",
    "lengthSeconds": "1542",
    "uploadDate": "2019-01-20",
    "thumbnail_url": "https://i.ytimg.com/vi/MC1zS7XQPwg/maxresdefault.jpg"
  }
]