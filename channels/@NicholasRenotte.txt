[
  {
    "link": "watch?v=u8vQyTzNGVY",
    "title": "I built a GPT Investment Banker using this 312 PAGE document",
    "tags": "machine learning, python, ai",
    "scraped_at": 1685095301.1301663,
    "genre": "Science",
    "views": "41573",
    "desc": "\\xf0\\x9f\\x90\\x8d Get the free Python course\\\\nhttps://go.coursesfromnick.com/python\\\\n\\\\n\\xf0\\x9f\\x91\\xa8\\xe2\\x80\\x8d\\xf0\\x9f\\x92\\xbb Sign up for the Full Stack course and use YOUTUBE50 to get 50% off:\\\\nhttps://www.coursesfromnick.com/bundles/fullstackml\\\\n\\\\nHopefully you enjoyed this video. \\\\n\\xf0\\x9f\\x92\\xbc Find AWESOME ML Jobs: https://www.jobsfromnick.com\\\\n\\\\n\\xf0\\x9f\\xa4\\x96 Get the Code: https://github.com/nicknochnack/LangchainDocuments\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\"",
    "lengthSeconds": "326",
    "uploadDate": "2023-05-12",
    "thumbnail_url": "https://i.ytimg.com/vi/u8vQyTzNGVY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=MlK6SIjcjE8",
    "title": "LangChain Crash Course: Build a AutoGPT app in 25 minutes!",
    "tags": "machine learning, python, ai",
    "scraped_at": 1685095301.0651648,
    "genre": "Science",
    "views": "174413",
    "desc": "Get the free Python course\\\\nhttps://go.coursesfromnick.com/python\\\\n\\\\nGet the code: https://github.com/nicknochnack/Langchain-Crash-Course\\\\n\\\\nSign up for the Full Stack course here and use YOUTUBE50 to get 50% off:\\\\nhttps://www.coursesfromnick.com/bundles/fullstackml\\\\n\\\\nHopefully you enjoyed this video. \\\\n\\xf0\\x9f\\x92\\xbc Find AWESOME ML Jobs: https://www.jobsfromnick.com\\\\n\\\\nGet the Code: https://github.com/nicknochnack/LipNet \\\\n\\\\nLinks: \\\\nCTC Blog Post: https://distill.pub/2017/ctc\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\"",
    "lengthSeconds": "1647",
    "uploadDate": "2023-04-23",
    "thumbnail_url": "https://i.ytimg.com/vi/MlK6SIjcjE8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=55nZ8rU9lM0",
    "title": "ChatGPT vs NeuralSeek: what's better for BUSINESS?",
    "tags": "machine learning, python, ai",
    "scraped_at": 1685095300.3551667,
    "genre": "Science",
    "views": "9376",
    "desc": "Get notified of the free Python course on the home page at https://www.coursesfromnick.com\\\\n\\\\nSign up for the Full Stack course here and use YOUTUBE50 to get 50% off:\\\\nhttps://www.coursesfromnick.com/bundles/fullstackml\\\\n\\\\nHopefully you enjoyed this video. \\\\n\\xf0\\x9f\\x92\\xbc Find AWESOME ML Jobs: https://www.jobsfromnick.com\\\\n\\\\nGet the Code: https://github.com/nicknochnack/LipNet \\\\n\\\\nLinks: \\\\nCTC Blog Post: https://distill.pub/2017/ctc\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\"",
    "lengthSeconds": "245",
    "uploadDate": "2023-04-13",
    "thumbnail_url": "https://i.ytimg.com/vi/55nZ8rU9lM0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=FMPYShYLg3o",
    "title": "How to Code a Machine Learning Lip Reading App with Python Tensorflow and Streamlit",
    "tags": "machine learning, python, ai",
    "scraped_at": 1685095300.622192,
    "genre": "Science",
    "views": "12923",
    "desc": "Get notified of the free Python course on the home page at https://www.coursesfromnick.com\\\\n\\\\nSign up for the Full Stack course here and use YOUTUBE50 to get 50% off:\\\\nhttps://www.coursesfromnick.com/bundles/fullstackml\\\\n\\\\nHopefully you enjoyed this video. \\\\n\\xf0\\x9f\\x92\\xbc Find AWESOME ML Jobs: https://www.jobsfromnick.com\\\\n\\\\nGet the Code: https://github.com/nicknochnack/LipNet \\\\n\\\\nLinks: \\\\nCTC Blog Post: https://distill.pub/2017/ctc\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\"",
    "lengthSeconds": "2725",
    "uploadDate": "2023-02-25",
    "thumbnail_url": "https://i.ytimg.com/vi/FMPYShYLg3o/maxresdefault.jpg"
  },
  {
    "link": "watch?v=F4WEGvFAwv8",
    "title": "MusicLM is a GAMECHANGER for ML Text to Music Generation",
    "tags": "machine learning, python, ai",
    "scraped_at": 1685095301.274165,
    "genre": "Science",
    "views": "20710",
    "desc": "Get notified of the free Python course on the home page at https://www.coursesfromnick.com\\\\n\\\\nSign up for the Full Stack course here and use YOUTUBE50 to get 50% off:\\\\nhttps://www.coursesfromnick.com/bundles/fullstackml\\\\n\\\\nHopefully you enjoyed this video. \\\\n\\xf0\\x9f\\x92\\xbc Find AWESOME ML Jobs: https://www.jobsfromnick.com\\\\n\\\\nLinks: \\\\nMusicLM Examples: https://google-research.github.io/seanet/musiclm/examples/\\\\nPaper: https://arxiv.org/pdf/2301.11325.pdf\\\\nMusicCaps: https://www.kaggle.com/datasets/googleai/musiccaps\\\\nAudioLM Examples: https://google-research.github.io/seanet/audiolm/examples/\\\\nPaper: https://arxiv.org/pdf/2209.03143.pdf\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\"",
    "lengthSeconds": "780",
    "uploadDate": "2023-02-10",
    "thumbnail_url": "https://i.ytimg.com/vi/F4WEGvFAwv8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=uKyojQjbx4c",
    "title": "Build a Deep Learning Model that can LIP READ using Python and Tensorflow | Full Tutorial",
    "tags": "machine learning, python, ai, coding challenge, MiDaS, depth esimation",
    "scraped_at": 1685095302.0671906,
    "genre": "Science",
    "views": "28000",
    "desc": "Building a machine learning model that\\'s able to perform lip reading!\\\\n\\\\nGet notified of the free Python course on the home page at https://www.coursesfromnick.com\\\\n\\\\nSign up for the Full Stack course here and use YOUTUBE50 to get 50% off:\\\\nhttps://www.coursesfromnick.com/bundles/fullstackml\\\\n\\\\nHopefully you enjoyed this video. \\\\n\\xf0\\x9f\\x92\\xbc Find AWESOME ML Jobs: https://www.jobsfromnick.com\\\\n\\\\nGet the code: https://github.com/nicknochnack/LipNet \\\\nLinks: https://www.tensorflow.org/api_docs/python/tf/data\\\\nOriginal Paper: https://arxiv.org/abs/1611.01599 \\\\nAssociated Code for Paper: https://github.com/rizkiarm/LipNet \\\\nASR Tutorial: https://keras.io/examples/audio/ctc_asr/#model\\\\n\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\"",
    "lengthSeconds": "4462",
    "uploadDate": "2023-02-02",
    "thumbnail_url": "https://i.ytimg.com/vi/uKyojQjbx4c/maxresdefault.jpg"
  },
  {
    "link": "watch?v=c_WbKfyt8pY",
    "title": "I tried coding a AI DEPTH VISION app with MIDAS in 15 Minutes",
    "tags": "machine learning, python, ai, coding challenge, MiDaS, depth esimation",
    "scraped_at": 1685095302.7531931,
    "genre": "Science",
    "views": "13909",
    "desc": "MiDaS was originally developed by researchers at Intel for Robust Monocular Depth Estimation...aka derving how far objects are using a single standard camera. We\\'re going to try to build an OpenCV app with it using Python in just 15 minutes. \\\\n\\\\nGood to be back to Code That!\\\\n\\\\nGet notified of the free Python course on the home page at https://www.coursesfromnick.com\\\\n\\\\nSign up for the Full Stack course here and use YOUTUBE50 to get 50% off:\\\\nhttps://www.coursesfromnick.com/bundles/fullstackml\\\\n\\\\nHopefully you enjoyed this video. \\\\n\\xf0\\x9f\\x92\\xbc Find AWESOME ML Jobs: https://www.jobsfromnick.com\\\\n\\\\nThanks again to Seeed Studio for the Jetson Nano, check them out here: https://www.seeedstudio.com/reComputer-J1020-v2-p-5498.html\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\"",
    "lengthSeconds": "1071",
    "uploadDate": "2023-01-05",
    "thumbnail_url": "https://i.ytimg.com/vi/c_WbKfyt8pY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=SgoVJq18YSI",
    "title": "My FULL STACK MACHINE LEARNING course is FINALLY DONE!",
    "tags": "machine learning, python, ai",
    "scraped_at": 1685095300.5431929,
    "genre": "Science",
    "views": "19128",
    "desc": "It\\'s done...it\\'s finally done...well that is until I add the next projects. \\\\n\\\\nGet notified of the free Python course on the home page at https://www.coursesfromnick.com\\\\n\\\\nSign up for the Full Stack course here and use YOUTUBE50 to get 50% off:\\\\nhttps://www.coursesfromnick.com/bundles/fullstackml\\\\n\\\\nHopefully you enjoyed this video. \\\\n\\xf0\\x9f\\x92\\xbc Find AWESOME ML Jobs: https://www.jobsfromnick.com\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#machinelearning  #python #datascience\"",
    "lengthSeconds": "164",
    "uploadDate": "2022-12-30",
    "thumbnail_url": "https://i.ytimg.com/vi/SgoVJq18YSI/maxresdefault.jpg"
  },
  {
    "link": "watch?v=zPWxavBy1X0",
    "title": "I tried to code a TRAFFIC SIGN ML MODEL in 15 minutes",
    "tags": "machine learning, python, traffic sign detection, stop sign detection, coding challenge, ai",
    "scraped_at": 1685095302.2181914,
    "genre": "Science",
    "views": "16119",
    "desc": "Trying out something a little different for Code That this week...Voice Over Nick has entered the chat. Anyway, this week we\\'re building out very own Traffic Sign ML model using YOLOv5....all in 15 minutes. \\\\n\\\\nYou\\'ll get a blast fast walkthrough of how to download and convert Pascal VOC annotations to YOLO format and how to apply them to a Kaggle Dataset using Yolov5 and Python. \\\\n\\\\nHopefully you enjoyed this video. \\\\n\\xf0\\x9f\\xa4\\x96 Get the CODE: https://github.com/nicknochnack/StopSign\\\\n\\xf0\\x9f\\x92\\xbc Find AWESOME ML Jobs: www.jobsfromnick.com\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#machinelearning  #codingchallenge #react #javascript\"",
    "lengthSeconds": "1004",
    "uploadDate": "2022-11-10",
    "thumbnail_url": "https://i.ytimg.com/vi/zPWxavBy1X0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=3l16wCsDglU",
    "title": "I tried to build a REACT STABLE DIFFUSION App in 15 minutes",
    "tags": "machine learning, stable diffusion, react, javascript",
    "scraped_at": 1685095303.5244086,
    "genre": "Science",
    "views": "35029",
    "desc": "Oooooh lawdy, this one put my coding skills to the test...python ANNNND JAVASCRIPT? \\\\n\\\\nAnyway, hopefully you agree that this is slightly better than the last Stable Diffusion UI that I made, either way it allows you to generate images by leveraging the amazing model. Deployment of the API would require a GPU to be quick...let me know if you have any suggestions!\\\\n\\\\nHopefully you enjoyed this video. \\\\n\\xf0\\x9f\\xa4\\x96 Get the CODE: https://github.com/nicknochnack/Code-That-ReactStableDiffusion\\\\n\\xf0\\x9f\\x92\\xbc Find AWESOME ML Jobs: www.jobsfromnick.com\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#machinelearning  #codingchallenge #react #javascript\"",
    "lengthSeconds": "2089",
    "uploadDate": "2022-11-04",
    "thumbnail_url": "https://i.ytimg.com/vi/3l16wCsDglU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=xTKoyfCQiiU",
    "title": "I tried building a AUTO MACHINE LEARNING Web App 15 Minutes",
    "tags": "python, machine learning, python app",
    "scraped_at": 1685095306.8661928,
    "genre": "Science",
    "views": "48404",
    "desc": "So you need some AutoML...well now you got it using Python, Pandas Profiling, PyCaret and Streamlit...and close to 15ish minutes. \\\\n\\\\nThanks again to Bright Data, check them out here: https://brightdata.grsm.io/nicholas-renotte\\\\n\\\\nHopefully you enjoyed this video. \\\\n\\xf0\\x9f\\xa4\\x96 Get the CODE: https://github.com/nicknochnack/AutoStreamlit\\\\n\\xf0\\x9f\\x92\\xbc Find AWESOME ML Jobs: www.jobsfromnick.com\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#machinelearning  #codingchallenge #tkintertutorial #python\"",
    "lengthSeconds": "1447",
    "uploadDate": "2022-10-27",
    "thumbnail_url": "https://i.ytimg.com/vi/xTKoyfCQiiU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=aMldpZF6GBU",
    "title": "I tried building an ML Cancer Segmentation API in 15 Minutes",
    "tags": "python, machine learning, python app, tkinter",
    "scraped_at": 1685095300.863165,
    "genre": "Science",
    "views": "11641",
    "desc": "Was originally meant to be satellite segmentation but \\xf0\\x9f\\xa4\\xb7 I think this is cooler anyway. \\\\n\\\\nIn this episode we\\'re going to try to build AND deploy a machine learning Cancer Segmentation API using Python, Tensorflow, FastAPI and Heroku...all in 15 minutes. \\\\n\\\\n\\xf0\\x9f\\xa4\\x96 Get the CODE: https://github.com/nicknochnack/SegmentationAPI\\\\n\\xf0\\x9f\\x92\\xbc Find AWESOME ML Jobs: www.jobsfromnick.com\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #machinelearning  #codingchallenge #tkintertutorial #python\"",
    "lengthSeconds": "1440",
    "uploadDate": "2022-10-21",
    "thumbnail_url": "https://i.ytimg.com/vi/aMldpZF6GBU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=msGOrJIMGy8",
    "title": "I tried to build a ML Drowsiness Detector App (with sound alerts) in 15 mins",
    "tags": "film, udost",
    "scraped_at": 1685095302.9091659,
    "genre": "Science",
    "views": "12370",
    "desc": "You asked for it! So here it is. \\\\n\\\\nFinally putting together all the stuff we learned during OD class and bringing it to production as an app. For this episode of Code That we\\'re going to be building a object detection app that can pick up if we\\'re awake or drowsy then playing an alert if we\\'re found sleeping. \\\\n\\\\nWe\\'ll use PyTorch YOLOv5 to detect our state and then put it together in a Tkinter app with VLC being used to play the audio. Hope you enjoy it guys!\\\\n\\\\nGet the Code: https://github.com/nicknochnack/https://github.com/nicknochnack/CodeThatObjectDetection\\\\n\\\\nSign up to Jobs From Nick: www.jobsfromnick.com\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#machinelearning  #codingchallenge #tkintertutorial #python\"",
    "lengthSeconds": "1327",
    "uploadDate": "2022-10-06",
    "thumbnail_url": "https://i.ytimg.com/vi/msGOrJIMGy8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=HoMZxHNpM84",
    "title": "I secretly used AI to clone my favourite Rapper",
    "tags": "tkinter, python, transformer",
    "scraped_at": 1685095300.9981925,
    "genre": "Science",
    "views": "15454",
    "desc": "What\\'s happening guys, welcome to the seventh episode of CodeThat!? I think\\\\n\\\\nI was a little down about the fact that Stormzy cancelled his tour down to Australia so I figured I\\xe2\\x80\\x99d build my own Rap God AI. \\\\n\\\\nIn this video I put it all together, Transformer based text generation to generate rap lyrics, then voice cloning using Tortoise  Text to Speech to mimic a voice and last but not least\\xe2\\x80\\xa6.we use the Make It Talk model from Adobe to synthesise our rapper rapping all with Python\\\\n\\\\nGet the Code: https://github.com/nicknochnack/RapGod\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#machinelearning  #codingchallenge #tkintertutorial #python\"",
    "lengthSeconds": "1696",
    "uploadDate": "2022-09-30",
    "thumbnail_url": "https://i.ytimg.com/vi/HoMZxHNpM84/maxresdefault.jpg"
  },
  {
    "link": "watch?v=7xc0Fs3fpCg",
    "title": "I tried to build a ML Text to Image App with Stable Diffusion in 15 Minutes",
    "tags": "python, machine learning, python app, tkinter",
    "scraped_at": 1685095304.2131658,
    "genre": "Science",
    "views": "59213",
    "desc": "What\\'s happening guys, welcome to the sixth episode of CodeThat!? I think\\\\n\\\\nSo there\\'s been a lotta talk about text to image generation using machine learning...well I thought I would give it a crack and try to whip up a Python App that could do it. \\\\n\\\\nAnd along comes Stable Diffusion, an open source SOTA model for text to image generation from Stability AI, well the rest is history. In this ep we focus on using the Stable Diff model through Hugging Face Diffusers and build up an app using Tkinter so that you can use it on your desktop with nothing more than a 4GB GPU. \\\\n\\\\nGet the Code: https://github.com/nicknochnack/StableDiffusionApp\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #machinelearning  #codingchallenge #tkintertutorial #python\"",
    "lengthSeconds": "1123",
    "uploadDate": "2022-09-20",
    "thumbnail_url": "https://i.ytimg.com/vi/7xc0Fs3fpCg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Ebb4gUI2IpQ",
    "title": "I tried to build a Python Machine Learning Streamlit App in 7 Minutes | Coding Challenge",
    "tags": "machine learning, streamlit, python, xgboost, coding challenge",
    "scraped_at": 1685095301.8531673,
    "genre": "Science",
    "views": "22939",
    "desc": "What\\'s happening guys, welcome to the fifth episode of CodeThat!\\\\n\\\\nIn this ep I try to build a machine learning app to for deploying scikit-learn models using the titanic dataset using nothing but Python. In this case we used a XGBoost model, Streamlit, Pandas and Numpy!\\\\n\\\\nGet the Code: https://github.com/nicknochnack/StreamlitTitanic\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #machinelearning  #codingchallenge #tkintertutorial #python\"",
    "lengthSeconds": "780",
    "uploadDate": "2022-09-16",
    "thumbnail_url": "https://i.ytimg.com/vi/Ebb4gUI2IpQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=zaBy3X37Oa8",
    "title": "I tried to build a Machine Learning Python App in 15 Minutes | Coding Challenge",
    "tags": "python, machine learning, python app, tkinter",
    "scraped_at": 1685095300.6961653,
    "genre": "Science",
    "views": "82068",
    "desc": "What\\'s happening guys, welcome to the fourth episode of CodeThat!\\\\n\\\\nIn this ep I try to build a machine learning app to track deadlifts all done using nothing but Python. In this case we used a Scikit-Learn model, mediapipe and Tkinter to get it all done. \\\\n\\\\nGet the Code: https://github.com/nicknochnack/mlapp\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #machinelearning  #codingchallenge #tkintertutorial #python\"",
    "lengthSeconds": "1393",
    "uploadDate": "2022-09-07",
    "thumbnail_url": "https://i.ytimg.com/vi/zaBy3X37Oa8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=mozBidd58VQ",
    "title": "Building a Neural Network with PyTorch in 15 Minutes | Coding Challenge",
    "tags": "coding challenge, pytorch, python, deep learning",
    "scraped_at": 1685095307.6361675,
    "genre": "Science",
    "views": "62177",
    "desc": "What\\'s happening guys, welcome to the third episode of CodeThat!\\\\n\\\\nIn this ep I try to build my first neural network in PyTorch...seriously the first time I even dug into their documentation was yesterday! Anyway you know the rules I have to get it done in 15 minutes, no doco or stack overflow and a gift card to you guys if I fail. \\\\n\\\\nWill I make it in time???!\\\\n\\\\nGet the Code: https://github.com/nicknochnack/PyTorchin15\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #machinelearning  #codingchallenge #gradientdescent\"",
    "lengthSeconds": "1234",
    "uploadDate": "2022-08-24",
    "thumbnail_url": "https://i.ytimg.com/vi/mozBidd58VQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Souzjv6WfrY",
    "title": "Building the Gradient Descent Algorithm in 15 Minutes | Coding Challenge",
    "tags": "machine learning, python, gradient descent",
    "scraped_at": 1685095303.3001845,
    "genre": "Science",
    "views": "31945",
    "desc": "What\\'s happening guys, welcome to the second episode of CodeThat!\\\\n\\\\nIn this ep I try to build a regression machine learning model using a gradient descent algorithm we build completely from scratch using Python. The only dependency we use in the challenge is numpy!\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #machinelearning  #codingchallenge #gradientdescent\"",
    "lengthSeconds": "1349",
    "uploadDate": "2022-08-17",
    "thumbnail_url": "https://i.ytimg.com/vi/Souzjv6WfrY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=C82lT9cWQiA",
    "title": "Building a Machine Learning API in 15 Minutes | Coding Challenge",
    "tags": "coding challenge, python, machine learning, fast api",
    "scraped_at": 1685095301.927168,
    "genre": "Science",
    "views": "69568",
    "desc": "What\\'s happening guys, welcome to the first episode of CodeThat!\\\\n\\\\nIn this ep I try to build a machine learning API at freaking light speed using Python, FastAPI and Scikit-Learn AND DEPLOY it using Heroku. Hope y\\'all enjoy it. \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #machinelearning  #api #fastapi\"",
    "lengthSeconds": "1203",
    "uploadDate": "2022-08-10",
    "thumbnail_url": "https://i.ytimg.com/vi/C82lT9cWQiA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ymF9xq7xIug",
    "title": "Data Scientist answers Your DEEPEST Questions | Data Science AMA",
    "tags": "ama, data science",
    "scraped_at": 1685095301.3461657,
    "genre": "Science",
    "views": "2012",
    "desc": "Just answering some of your questions! Part two to come soon, see ya on the live stream.\\\\n\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #machinelearning #ai #python\"",
    "lengthSeconds": "955",
    "uploadDate": "2022-07-14",
    "thumbnail_url": "https://i.ytimg.com/vi/ymF9xq7xIug/maxresdefault.jpg"
  },
  {
    "link": "watch?v=dWmJ5CXSKdw",
    "title": "Reinforcement Learning for Gaming | Full Python Course in 9 Hours",
    "tags": "reinforcement learning, reinforcement learning course, machine learning, artificial intelligence full course, machine learning course, machine learning with python full course, deep reinforcement learning, reinforcement learning example, reinforcement learning python, reinforcement learning tutorial",
    "scraped_at": 1685095308.2931666,
    "genre": "Science",
    "views": "34068",
    "desc": "Ever wanted to learn how to apply ML to games?\\\\n\\\\nHere ya go!\\\\n\\\\nWhat\\'s happening team! This is a compilation of the RL tutorials for gaming in one mega course. In this course, you\\'ll learn an absolute TON about best practices when training reinforcement learning models for games using Python and Stable Baselines 3. \\\\n\\\\nChapters\\\\n0:00 - START\\\\n1:07 - MARIO\\\\n3:03 - Mario Mission 1 - Setup Mario\\\\n21:49 - Mario Mission 2 - Preprocess Environment \\\\n43:51 - Mario Mission 3 - Build the RL Model\\\\n1:03:47 - Mario Mission 4 - Run the RL Model Live\\\\n1:18:13 - DOOM\\\\n1:20:00 - Doom Mission 1 - Get Vizdoom Working\\\\n1:44:34 - Doom Mission 2 - Setup OpenAI Gym Environment\\\\n2:27:30 - Doom Mission 3 - Train the RL Agent\\\\n3:03:41 - Doom Mission 4 - Test the RL Agent\\\\n3:14:03 - Doom Mission 5 - Training for Other Levels\\\\n3:34:27 - Doom Mission 6 - Curriculum Learning and Reward Shaping\\\\n4:34:43 - STREETFIGHTER\\\\n4:36:16 - Streetfighter Mission 1 - Setup Streetfighter\\\\n5:00:21 - Streetfighter Mission 2 - Preprocessing \\\\n5:45:55 - Streetfighter Mission 3 - Hyperparameter Tuning \\\\n6:33:58 - Streetfighter Mission 4 - Fine Tune the Model\\\\n6:52:28 - Streetfighter Mission 5 - Testing the Model\\\\n7:15:26 - DINO\\\\n7:16:50 - Dino Mission 1 - Install and Setup Dependencies\\\\n7:35:50 - Dino Mission 2 - Create a Custom OpenAI Gym Environment\\\\n8:31:26 - Dino Mission 3 - Train the RL Model\\\\n8:47:24 - Dino Mission 4 - Get the Model to Smash Chrome Dino\\\\n8:57:22 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #machinelearning #ai #tech\"",
    "lengthSeconds": "32250",
    "uploadDate": "2022-07-07",
    "thumbnail_url": "https://i.ytimg.com/vi/dWmJ5CXSKdw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=-MX5C_e5Ytk",
    "title": "AI DREW all of THESE | DALLE-2 Walkthrough",
    "tags": "dalle2, ai, openai",
    "scraped_at": 1685095300.7981946,
    "genre": "Science",
    "views": "4743",
    "desc": "Ever wondered what DALLE2 can generate, well in this video I\\'m going to walk you through just what\\'s possible. We\\'ll generate using prompts as well as performing in painting. \\\\n\\\\nIf you haven\\'t heard of DALLE2 or DALLE before, it\\'s a deep learning model created by OpenAI. It\\'s revolutionary because it can create hyper realistic images using nothing but a natural language prompt. \\\\n\\\\nChapters\\\\n0:00 - START\\\\n0:36 - Explainer\\\\n1:49 - Prompts\\\\n4:33 - In Painting\\\\n9:34 - Generating Your Prompts\\\\n24:11 - Wrap Up!\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #machinelearning #ai #tech\"",
    "lengthSeconds": "1493",
    "uploadDate": "2022-07-06",
    "thumbnail_url": "https://i.ytimg.com/vi/"
  },
  {
    "link": "watch?v=0sgjH5NWbNw",
    "title": "Build a Virtual Agent in 15 minutes with Watson Assistant Actions | Chatbot Tutorial",
    "tags": "chatbots, virtual agents, watson assistant",
    "scraped_at": 1685095307.7111664,
    "genre": "Science",
    "views": "8097",
    "desc": "Ever wanted to build your own virtual agent?\\\\n\\\\nNot too sure where to start?\\\\n\\\\nI got ya! \\\\n\\\\nIn this tutorial you\\'ll learn how to build a virtual agent using Watson Assistant in 15 minutes. I\\'ll go through how to design actions, build simple logic and handling responses. This is just scraping the tip of the iceberg, if you\\'d like to see more, definitely let me know!\\\\n\\\\nChapters\\\\n0:00 - START\\\\n1:01 - Explainer\\\\n2:24 - Use Case\\\\n3:46 - Creating an Action\\\\n6:53 - Trying out the Agent\\\\n8:14 - Building a More Complex Action\\\\n11:22 - Handling Logic\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #machinelearning #ai #tech\"",
    "lengthSeconds": "1024",
    "uploadDate": "2022-07-04",
    "thumbnail_url": "https://i.ytimg.com/vi/0sgjH5NWbNw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Aso895pvii0",
    "title": "Unboxing the M1 Max for Data Science Work",
    "tags": "m1 max, macbook pro, data science",
    "scraped_at": 1685095303.055167,
    "genre": "Science",
    "views": "6279",
    "desc": "Sup team!\\\\n\\\\nFinally got the new work macbook pro delivered and wanted to do a quick unboxing video. Let me know what you think. Also walk through a little of the setup involved for data science. Full data science setup tutorial to come!\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #machinelearning #ai #tech\"",
    "lengthSeconds": "624",
    "uploadDate": "2022-07-03",
    "thumbnail_url": "https://i.ytimg.com/vi/Aso895pvii0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=GH1RuKguO54",
    "title": "MACHINE LEARNING Battlestation Breakdown",
    "tags": "film, udost",
    "scraped_at": 1685095304.2961693,
    "genre": "Science",
    "views": "5119",
    "desc": "Wondered where I make all those ML tutorials? Well, this is it! \\\\n\\\\nI wanted to give you a runthrough of my machine learning and data science battlestation, this is where the magic happens. I go through all the stuff I use to code, build and work in the machine learning field.\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #machinelearning #ai #tech\"",
    "lengthSeconds": "1025",
    "uploadDate": "2022-06-25",
    "thumbnail_url": "https://i.ytimg.com/vi/GH1RuKguO54/maxresdefault.jpg"
  },
  {
    "link": "watch?v=vahwuupy81A",
    "title": "Build a Chrome Dino Game AI Model with Python | AI Learns to Play Dino Game",
    "tags": "deep learning, python, ai learns to play",
    "scraped_at": 1685095304.0601661,
    "genre": "Science",
    "views": "18687",
    "desc": "Learn to build a custom reinforcement learning model for gaming...in this case for web games like the Google Chrome Dino game with Python and Deep Learning.\\\\n\\\\nChapters\\\\n0:00 - START\\\\n0:42 - Explainer\\\\n1:23 - PART 1: Install and Import Dependencies\\\\n1:58 - Breakdown Board\\\\n20:18 - PART 2: Create a Custom Game Environment\\\\n1:16:00 - PART 3: Train the AI Model \\\\n1:31:57 - PART 4: Get the Model to Play the Chrome Dino Game\\\\n1:41:28 - Ending\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n #deeplearning #python #ai #gaming\"",
    "lengthSeconds": "6116",
    "uploadDate": "2022-06-18",
    "thumbnail_url": "https://i.ytimg.com/vi/vahwuupy81A/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ilrHB5tD15g",
    "title": "How I stay MOTIVATED when learning DEEP TECH (coding, ML & data science)",
    "tags": "python, coding, motivation, data science, deep learning",
    "scraped_at": 1685095305.5591667,
    "genre": "Science",
    "views": "6980",
    "desc": "A few of y\\xe2\\x80\\x99all were asking how I stay motivated when learning hardcore tech stuff. I\\xe2\\x80\\x99m sharing a bunch of the concepts that have helped me along the way and those that continue to help me along my journey of learning data science, machine learning and deep learning. \\\\n\\\\nHoping there\\xe2\\x80\\x99s a few useful takeaways! Let me know if you have any others!\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#datascience #motivation #deeplearning #python\"",
    "lengthSeconds": "646",
    "uploadDate": "2022-06-12",
    "thumbnail_url": "https://i.ytimg.com/vi/ilrHB5tD15g/maxresdefault.jpg"
  },
  {
    "link": "watch?v=AALBGpLbj6Q",
    "title": "Build a Generative Adversarial Neural Network with Tensorflow and Python | Deep Learning Projects",
    "tags": "deep learning, python, gan, generative adversarial neural network",
    "scraped_at": 1685095303.379793,
    "genre": "Science",
    "views": "53251",
    "desc": "Want to get your hands dirty building a deep learning powered GAN with Python? Well in this video you\\xe2\\x80\\x99ll learn everything involved to do it from scratch using Python and Tensorflow. You\\xe2\\x80\\x99ll learn how to build your very own Generative Adversarial Neural Network to generate new synthetic datasets. \\\\n\\\\nGet the code: https://github.com/nicknochnack/GANBasics\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:43 - Explainer\\\\n1:40 - PART 1 - Setup Environment\\\\n2:02 - Breakdown Board\\\\n17:54 - PART 2 - Visualize data and Build Data Pipeline\\\\n34:49 - PART 3 - Build the Neural Networks\\\\n1:07:28 - PART 4 - Build a Custom Training Loop\\\\n1:54:39 - PART 5 - Generating Images\\\\n2:00:58 - Ending \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#gan #python #deeplearning\"",
    "lengthSeconds": "7283",
    "uploadDate": "2022-06-09",
    "thumbnail_url": "https://i.ytimg.com/vi/AALBGpLbj6Q/maxresdefault.jpg"
  },
  {
    "link": "watch?v=TW5WuaSyKjY",
    "title": "Singapore DATA SCIENCE Day in the Life | First work TRIP post lockdown",
    "tags": "data science, day in the life",
    "scraped_at": 1685095300.4451656,
    "genre": "Science",
    "views": "5601",
    "desc": "First work trip post lockdown! Wanted to share a data science day in the life when I\\xe2\\x80\\x99m travelling and what I got up to whilst meeting my new team for the first time. Plenty of coding tips and travel tricks to try to stay productive while you\\'re on the road.\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#datascience #dayinthelife\"",
    "lengthSeconds": "782",
    "uploadDate": "2022-06-04",
    "thumbnail_url": "https://i.ytimg.com/vi/TW5WuaSyKjY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Zanrd7IzZLM",
    "title": "Uncover what Deep CNNs are doing with Python and Tensorflow",
    "tags": "film, udost",
    "scraped_at": 1685095301.7881677,
    "genre": "Science",
    "views": "11131",
    "desc": "Learn how to visualize the outputs of intermediate CNN layers. This helps a ton to see how your computer vision models are making predictions. \\\\n\\\\nGet the code: https://github.com/nicknochnack/CNNLayers\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:31 - Explainer\\\\n1:16 - Code\\\\n3:13 - Import Dependencies\\\\n5:52 - Load a Trained Model\\\\n8:10 - Accessing Layers\\\\n10:45 - Creating an Intermediate Model\\\\n13:04 - Load an Image\\\\n16:26 - Predictions with the Intermediate Model\\\\n21:57 - Visualising the Output\\\\n25:05 - Create a Viz Grid\\\\n36:20 - Visualising Different Layers\\\\n40:24 - Ending\\\\n\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#cnn  #python\"",
    "lengthSeconds": "2455",
    "uploadDate": "2022-05-28",
    "thumbnail_url": "https://i.ytimg.com/vi/Zanrd7IzZLM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=kKZFmklDSXs",
    "title": "MACHINE LEARNING Resources I use EVERYDAY (and you can too!)",
    "tags": "film, udost",
    "scraped_at": 1685095307.8761885,
    "genre": "Science",
    "views": "9960",
    "desc": "Figured I\\'d share a bunch of resources I use in my day to day life to learn all things machine learning and data science!\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:41 - Explainer\\\\n1:04 - IDEAS\\\\n1:26 - Reddit\\\\n2:23 - Blogs\\\\n4:34 - IMPLEMENTATION\\\\n4:41- Papers with Code\\\\n5:57 - Github\\\\n6:42 - THEORY \\\\n7:17 - Books\\\\n8:59 - O\\xe2\\x80\\x99Reilly\\\\n10:58 - SUPPORT\\\\n11:37 - Library Tutorials\\\\n13:09 - NICHE RESOURCES\\\\n13:21 - OpenCV Documentation\\\\n13:28 - Hugging Face\\\\n13:36 - Close\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#machinelearning  #python\"",
    "lengthSeconds": "836",
    "uploadDate": "2022-05-24",
    "thumbnail_url": "https://i.ytimg.com/vi/kKZFmklDSXs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=qpFrg4gN4Mg",
    "title": "Build a Deep Iris Detection Model using Python and Tensorflow | Keypoint Detection",
    "tags": "film, udost",
    "scraped_at": 1685095308.116166,
    "genre": "Science",
    "views": "23904",
    "desc": "Learn how to build an Iris Tracking model using Keypoint Detection with Tensorflow and Python!\\\\n\\\\nGet the code here: https://github.com/nicknochnack/IrisDetection\\\\n\\\\nLinks\\\\nhttps://github.com/wkentaro/labelme\\\\nhttps://albumentations.ai/docs/getting_started/\\\\nhttps://www.tensorflow.org/api_docs/python/tf/data/Dataset#batch\\\\n\\\\nChapters\\\\n0:00 - Intro\\\\n0:37 - Explainer\\\\n1:31 - PART 1 - Install and Setup\\\\n13:23 - PART 2 - Load Data and Labels\\\\n14:12 - How the Data was Created\\\\n21:49 - Load Images\\\\n30:06 - Load Labels\\\\n37:25 - Combine Image and Label Samples\\\\n43:46 - View Examples\\\\n53:17 - PART 3 - Build and Train the Neural Network\\\\n53:59 - Create the Keypoint Detection Model\\\\n1:13:28 - Setup Loss and Optimizer\\\\n1:14:57 - Sense Check Predictions\\\\n1:17:23 - Train the Model\\\\n1:24:51 - PART 4 - Review Performance and Make Predictions\\\\n1:27:24 - View Loss Plots\\\\n1:30:57 - Save the Model\\\\n1:34:03 - PART 5 - Real Time Detection and Final Results\\\\n1:41:49 - Ending\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#deeplearning  #python\"",
    "lengthSeconds": "6141",
    "uploadDate": "2022-05-12",
    "thumbnail_url": "https://i.ytimg.com/vi/qpFrg4gN4Mg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=N_W4EYtsa10",
    "title": "Build a Deep Face Detection Model with Python and Tensorflow | Full Course",
    "tags": "face recognition python, face recognition, deep learning, python, face detection, object detection",
    "scraped_at": 1685095305.7501657,
    "genre": "Science",
    "views": "101048",
    "desc": "Learn how to build a face detection model using an Object Detection architecture using Tensorflow and Python! \\\\n\\\\nGet the code here: https://github.com/nicknochnack/FaceDetection\\\\n\\\\nLinks\\\\nhttps://github.com/wkentaro/labelme\\\\nhttps://albumentations.ai/docs/getting_started/bounding_boxes_augmentation/\\\\nhttps://www.tensorflow.org/api_docs/python/tf/data/Dataset#batch\\\\n\\\\nChapters\\\\n0:00 - START\\\\n0:38 - Explainer\\\\n1:38 - PART 1 - COLLECt IMAGES \\\\u0026 ANNOTATE\\\\n2:22 - Breakdown Board\\\\n8:51 - Setting up and Getting Data\\\\n32:47 - PART 2 - PARTITION \\\\u0026 AUGMENT DATA\\\\n34:11 - Review dataset and build Image Loading Function\\\\n45:32 - Partition Unaugmented Data\\\\n53:08 - Apply Image Augmentation on Images and Labels\\\\n1:07:10 - Build and Run Augmentation Pipeline\\\\n1:15:10 - Prepare Labels\\\\n1:19:04 - Combine Label and Image Samples\\\\n1:24:57 - PART 3 - BUILD \\\\u0026 TRAIN THE DEEP LEARNING MODEL\\\\n1:26:09 - Build a Deep Learning Model using the Functional API\\\\n1:41:20 - Defining a Custom Loss Function \\\\u0026 Optimizer\\\\n1:45:51 - Train a Neural Network\\\\n2:03:25 - PART 4 - TEST AND PERFORM REAL TIME DETECTIONS\\\\n2:18:28 - Final Results\\\\n2:25:42 - Ending\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#deeplearning  #python\"",
    "lengthSeconds": "8765",
    "uploadDate": "2022-05-05",
    "thumbnail_url": "https://i.ytimg.com/vi/N_W4EYtsa10/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ZUqB-luawZg",
    "title": "Build a Comment Toxicity Model with Deep Learning and Python",
    "tags": "deep learning, python",
    "scraped_at": 1685095304.543167,
    "genre": "Science",
    "views": "28153",
    "desc": "The internet can be a mean and nasty place...but it doesn\\'t need to be! Learn how to spot and detect toxic comments using deep learning and Python. The dataset leveraged is originally from Kaggle but you could sub this out for your own data plus I\\'ll show you how to make predictions from raw strings as well!\\\\n\\\\nGet the code: https://github.com/nicknochnack/CommentToxicity\\\\n\\\\nChapters\\\\n0:00 - Introduction\\\\n0:38 - Explainer\\\\n1:35 - PART 1: Setup and Data Loading\\\\n17:47 - PART 2: Prepare Comments\\\\n36:57 - PART 3: Build a Deep Learning Model\\\\n49:33 - PART 4: Make Predictions\\\\n56:27 - PART 5: Evaluate the Model\\\\n1:03:30 - PART 6: Build a Deep Learning Gradio App\\\\n1:12:24 - Ending\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#deeplearning  #python\"",
    "lengthSeconds": "4365",
    "uploadDate": "2022-04-28",
    "thumbnail_url": "https://i.ytimg.com/vi/ZUqB"
  },
  {
    "link": "watch?v=jztwpsIzEGc",
    "title": "Build a Deep CNN Image Classifier with ANY Images",
    "tags": "python, deep learning, image classification, cnn deep learning, image classification using tensorflow",
    "scraped_at": 1685095305.3061924,
    "genre": "Science",
    "views": "212467",
    "desc": "Get the Code https://github.com/nicknochnack/ImageClassification\\\\n\\\\nSo...you wanna build your own image classifier eh? Well in this tutorial you\\'re going to learn how to do exactly that...FROM SCRATCH using Python, Tensorflow and Keras. But best yet, you can do it on virtually any dataset. Go on, give it a go!\\\\n\\\\nLinks\\\\nSigmoid Activation: https://en.wikipedia.org/wiki/Sigmoid_function\\\\nRelu Activation: https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\\\\nImage Downloader Extension: https://chrome.google.com/webstore/detail/download-all-images/ifipmflagepipjokmbdecpmjbibjnakm?hl=en\\\\nConv2D Layer: https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv2D\\\\nMaxPooling Layer: https://keras.io/api/layers/pooling_layers/max_pooling2d/\\\\n \\\\nChapters\\\\n0:00 - Start\\\\n0:28 - Explainer \\\\n1:19 - PART 1: Building a Data Pipeline\\\\n3:08 - Installing Dependencies\\\\n8:30 - Getting Data from Google Images\\\\n23:12 - Load Data using Keras Utils\\\\n33:22 - PART 2: Preprocessing Data\\\\n35:56 - Scaling Images\\\\n42:23 - Partitioning the Dataset\\\\n47:34 - PART 3: Building the Deep Neural Network\\\\n48:21 - Build the Network\\\\n1:02:32 - Training the DNN\\\\n1:06:37 - Plotting Model Performance\\\\n1:09:50 - PART 4: Evaluating Perofmrnace\\\\n1:10:38 - Evaluating on the Test Partition\\\\n1:13:59 - Testing on New Data \\\\n1:20:39 - PART 5: Saving the Model\\\\n1:21:08 - Saving the model as h5 file\\\\n1:24:43 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#deeplearning  #python\"",
    "lengthSeconds": "5105",
    "uploadDate": "2022-04-25",
    "thumbnail_url": "https://i.ytimg.com/vi/jztwpsIzEGc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=19LQRx78QVU",
    "title": "Getting Started with Python Deep Learning for Beginners",
    "tags": "python, deep learning",
    "scraped_at": 1685095308.3771958,
    "genre": "Science",
    "views": "77265",
    "desc": "Not too sure where or how to start?\\\\n\\\\nIn this video, you\\'ll learn how to setup your machine and begin using some of the most common tools and libraries when it comes to deep learning. You\\'ll go from absolute beginner to successfully running your own image classification model by the end of this tutorial. \\\\n\\\\nGet the Code https://github.com/nicknochnack/ImageClassification\\\\n\\\\nLinks\\\\nAnaconda: https://www.anaconda.com/products/distribution\\\\nGit: https://git-scm.com/download/win\\\\nVenv Documentation: https://docs.python.org/3/library/venv.html\\\\nTensorflow CUDA/cuDNN Versions: https://www.tensorflow.org/install/source_windows#gpu\\\\nCUDA 11.2:  https://developer.nvidia.com/cuda-11.2.0-download-archive\\\\ncuDNN Archive: https://developer.nvidia.com/rdp/cudnn-archive\\\\nVisual Studio 2019: https://visualstudio.microsoft.com/vs/older-downloads/ \\\\n\\\\nChapters\\\\n0:00 - Start\\\\n1:58 - PART 1: Setting up Python and Jupyter with Anaconda\\\\n3:38 - Installing Anaconda\\\\n7:38 - Working with Jupyter\\\\n12:32 - PART 2: Environment Creation Workflows\\\\n13:44 - Working with Git and GitHub\\\\n19:12 - Creating Environments for DL\\\\n24:11 - Activating a Virtual Environment\\\\n32:05 - PART 3: Installing Tensorflow for Deep Learning\\\\n39:23 - Running the Image Classifier Pipeline\\\\n41:32 - PART 4: Configuring your GPU\\\\n57:06 - PART 5: Training a Deep Image Classifier\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#deeplearning  #python\"",
    "lengthSeconds": "4243",
    "uploadDate": "2022-04-21",
    "thumbnail_url": "https://i.ytimg.com/vi/19LQRx78QVU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ZLIPkmmDJAc",
    "title": "Build a Deep Audio Classifier with Python and Tensorflow",
    "tags": "machine learning, python, audio classification machine learning, audio classification",
    "scraped_at": 1685095306.9511926,
    "genre": "Science",
    "views": "77941",
    "desc": "In this tutorial, you\\'ll learn how to build a Deep Audio Classification model with Tensorflow and Python!\\\\n\\\\nGet the code: https://github.com/nicknochnack/DeepAudioClassification\\\\n\\\\nGet the data: https://www.kaggle.com/kenjee/z-by-hp-unlocked-challenge-3-signal-processing \\\\n\\\\nChapters\\\\n0:00 - START\\\\n1:22 - CLIENT CALL 1\\\\n2:00 - Breakdown Board\\\\n5:47 - MISSION 1\\\\n11:00 - Install and Import Dependencies\\\\n12:56 - Build a Dataloading Function\\\\n19:56 - MISSION 2\\\\n20:45 - Create Tensorflow Dataset\\\\n28:12 - Determine Average Call Length\\\\n32:11 - Build Preprocessing Function\\\\n41:41 - MISSION 3\\\\n42:22 - Create Training and Testing Partitions\\\\n45:52 - Build Deep CNN Model\\\\n54:09 - Classifier Audio Clips\\\\n58:13 - MISSION 4\\\\n59:18 - Build Forest Parsing Function\\\\n1:10:34 - Predict All Files\\\\n1:14:55 - MISSION 5\\\\n1:15:16 - Export Results to CSV\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#deeplearning  #python\"",
    "lengthSeconds": "4630",
    "uploadDate": "2022-04-15",
    "thumbnail_url": "https://i.ytimg.com/vi/ZLIPkmmDJAc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=bNi8RMQ-g6A",
    "title": "7 Key Skills You NEED to Stand Out in Data Science",
    "tags": "data science, data scientist",
    "scraped_at": 1685095304.1401682,
    "genre": "Science",
    "views": "5518",
    "desc": "Any others you can think of?\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#ailearns  #python\"",
    "lengthSeconds": "394",
    "uploadDate": "2022-04-12",
    "thumbnail_url": "https://i.ytimg.com/vi/bNi8RMQ"
  },
  {
    "link": "watch?v=IHLwjiBmf-g",
    "title": "Deep Fake Images and Video with SimSwap",
    "tags": "deepfake, deep, deep fake, face swap, deepfake tutorial, how to deepfake",
    "scraped_at": 1685095307.9551973,
    "genre": "Science",
    "views": "46542",
    "desc": "Get the Notebook: https://github.com/nicknochnack/SimSwap\\\\n\\\\nLearn to apply face swapping technology to images and video using the SimSwap model made available on Github! In this tutorial you\\'ll learn how to apply it in a range of use cases as well as gaining an understanding of the GAN behind it. \\\\n\\\\nA huge thanks to the author of the SimSwap lib and github repo owner NeuralChen for SimSwap! Also, if you\\'re using this and you\\'re up to no good...like...don\\'t. \\\\n\\\\nReferences\\\\nMain Github Repo: https://github.com/neuralchen/SimSwap\\\\nPreparation Steps: https://github.com/neuralchen/SimSwap/blob/main/docs/guidance/preparation.md\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n1:05 - Explainer\\\\n1:44 - Client Conversation\\\\n3:19 - Breakdown Board\\\\n6:36 - Tutorial Kickoff\\\\n7:44 - Cloning the Repo\\\\n9:10 - Installing Dependencies\\\\n12:42 - Getting Models\\\\n21:40 - Face Swapping Images\\\\n31:35 - Face Swapping Video\\\\n38:06 - FINAL RESULTS!\\\\n46:05 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#deepfake #gan  #python\"",
    "lengthSeconds": "2785",
    "uploadDate": "2022-03-17",
    "thumbnail_url": "https://i.ytimg.com/vi/IHLwjiBmf"
  },
  {
    "link": "watch?v=0iZdzWG1-NY",
    "title": "Bringing OLD IMAGES back to life with DEOLDIFY AI and Python",
    "tags": "deoldify, old photo restoration, photo restoration, deoldify colorization, deoldify tutorial, deoldify neural network, deoldify ai",
    "scraped_at": 1685095302.9851658,
    "genre": "Science",
    "views": "14077",
    "desc": "Get the code: https://github.com/jantic/DeOldify\\\\nGet the model here: https://data.deepai.org/deoldify/ColorizeArtistic_gen.pth\\\\n\\\\nLearn to use DeOldify and Python to recolour images from black and white to a coloured reconstruction. In this tutorial we\\'ll keep it pretty lightweight and beginner friendly. \\\\n\\\\nChapters\\\\n0:00 - START\\\\n0:35 - Explainer\\\\n1:04 - Client Conversation\\\\n2:19 - Breakdown Board\\\\n6:01 - Tutorial\\\\n7:20 - Cloning the Repo\\\\n8:42 - Installing the Dependencies\\\\n11:41 - Getting the Trained Model\\\\n14:57 - Deoldify Results \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#gan  #python\"",
    "lengthSeconds": "1589",
    "uploadDate": "2022-03-10",
    "thumbnail_url": "https://i.ytimg.com/vi/0iZdzWG1"
  },
  {
    "link": "watch?v=67hqsP7fhvQ",
    "title": "Upscale your Images using DEEP SUPER RESOLUTION with ESRGAN",
    "tags": "super resolution gan, super resolution, super resolution deep learning",
    "scraped_at": 1685095303.9871907,
    "genre": "Science",
    "views": "63231",
    "desc": "Get the code: https://github.com/xinntao/ESRGAN\\\\n\\\\nLearn to use ESRGAN and Python to enhance the resolution of your images by up to four times the size. In this tutorial we\\'ll keep it pretty lightweight and beginner friendly. \\\\n\\\\nChapters\\\\n0:00 - START\\\\n0:42 - Explainer\\\\n1:17 - Client Conversation\\\\n3:24 - Breakdown Board\\\\n6:29 - Tutorial\\\\n7:30 - Cloning the Repo\\\\n8:43 - Getting the Trained Model\\\\n11:03 - Installing Dependencies\\\\n13:21 - Super Resolution Results \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#yolo  #python\"",
    "lengthSeconds": "1284",
    "uploadDate": "2022-03-09",
    "thumbnail_url": "https://i.ytimg.com/vi/67hqsP7fhvQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=0efnQCHbsyE",
    "title": "I made OD bots for Gaming in 30 MINUTES",
    "tags": "film, udost",
    "scraped_at": 1685095309.028191,
    "genre": "Science",
    "views": "11155",
    "desc": "Well...I tried to lol. \\\\n\\\\nGet the code: https://github.com/nicknochnack/GameObjectDetection\\\\n\\\\nWant to learn how to use Object Detection in games? Say no more! In this video I ridiculously tried to do it in 30 minutes using Python and a Pytorch implementation of the famous YOLO model. \\\\n\\\\nChapters\\\\n0:00 - START\\\\n0:33 - Explainer\\\\n1:35 - Mission 1: Setup YOLO\\\\n2:00 - Breakdown Boar\\\\n19:58 - Mission 2: Capture Timberman Data\\\\n30:50 - Mission 3: Label Images\\\\n43:03 - Mission 4: Train and Test Deep Learning model\\\\n1:09:14 - Fixing Up Performance\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#yolo  #python\"",
    "lengthSeconds": "4413",
    "uploadDate": "2022-03-05",
    "thumbnail_url": "https://i.ytimg.com/vi/0efnQCHbsyE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=rzbFhu6So5U",
    "title": "Build a Street Fighter AI Model with Python | Gaming Reinforcement Learning Full Course",
    "tags": "artificial intelligence, street fighter 2, reinforcement learning, machine learning",
    "scraped_at": 1685095302.2941923,
    "genre": "Science",
    "views": "34001",
    "desc": "Yeah, I don\\xe2\\x80\\x99t know if anyone actually reads this. But if you do, here\\xe2\\x80\\x99s some stuff for ya!\\\\n\\\\nIn this tutorial, you\\'ll learn how to: \\\\n1. Setup Gym Retro to play Street Fighter with Python\\\\n2. Perform Hyperparameter tuning for Reinforcement Learning with Optuna\\\\n3. Fine tune game reinforcement learning models using Stable baselines\\\\n\\\\nGet the code: https://github.com/nicknochnack/StreetFighterRL\\\\n\\\\nChapters\\\\n0:00 - START\\\\n1:35 - MISSON1: Setting up Street Fighter\\\\n25:40 - MISSION2: Preprocessing\\\\n1:12:02 - MISSION3: Hyperparameter Tuning \\\\n1:59:17 - MISSION4: Fine Tuning the Model\\\\n2:18:00 - MISSION5: Testing the Model\\\\n2:30:15 - FINAL GAMEPLAY\\\\n2:39:27 - FEEDBACK\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#ailearns  #python #streetfighter\"",
    "lengthSeconds": "9642",
    "uploadDate": "2022-02-09",
    "thumbnail_url": "https://i.ytimg.com/vi/rzbFhu6So5U/maxresdefault.jpg"
  },
  {
    "link": "watch?v=G1uGSkANZjQ",
    "title": "Build a Deep Q&A Web App with Transformers and Anvil | Python Deep Learning App",
    "tags": "machine learning, nlp tutorial, deep nlp, natural language processing python, natural language processing in artificial intelligence, natural language processing tutorial",
    "scraped_at": 1685095305.4831662,
    "genre": "Science",
    "views": "12374",
    "desc": "Thanks to Anvil for sponsoring this video! Check out the link below to get started https://anvil.works/nicholasrenotte \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to build your very own deep learning powered Q\\\\u0026A app. \\\\n\\\\nGet the Code: https://github.com/nicknochnack/Q-A-Anvil-App\\\\n\\\\nLinks Mentioned\\\\nAnvil: www.anvil.works/nicholasrenotte \\\\nPyTorch: https://pytorch.org/get-started/locally/\\\\nHugging Face Transformers: https://huggingface.co/models \\\\nRobert Model: https://huggingface.co/deepset/roberta-base-squad2 \\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:33 - Explainer\\\\n1:18 - Tutorial Start\\\\n2:20 - Install Dependencies\\\\n4:19 - Load Model\\\\n10:47 - RoBERTa Results\\\\n13:48 - Building the Deep Learning App\\\\n21:45 - Integrate Anvil to Jupyter\\\\n23:57 - Build Callable Function\\\\n19:16 - Build App Plumbing\\\\n38:20 - Testing the App\\\\n44:12 - Deploying the App\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#opencv #python\"",
    "lengthSeconds": "2783",
    "uploadDate": "2022-01-29",
    "thumbnail_url": "https://i.ytimg.com/vi/G1uGSkANZjQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=2VP9nOWiJ04",
    "title": "Capture Timberman Footage with Python and OpenCV | Gaming Computer Vision",
    "tags": "computer vision tutorial, opencv python",
    "scraped_at": 1685095306.6451662,
    "genre": "Science",
    "views": "6664",
    "desc": "Learn how to capture game footage for computer vision using OpenCV and Python. \\\\n\\\\nIn this tutorial, you\\'ll learn how to: \\\\n1. Install dependencies required or computer vision\\\\n2. Capture game frames using PyAutogui\\\\n3. Render game footage using OpenCV\\\\n\\\\nGet the code: https://github.com/nicknochnack/GameCapture\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:32 - Explainer\\\\n1:09 - Tutorial Kickoff\\\\n3:04 - Installing Dependencies\\\\n4:41 - Import Dependencies\\\\n5:28 - Building the Capture Loop\\\\n7:52 - Handling Frame Closing\\\\n9:24 - Test Run\\\\n10:17 - Cropping Regions\\\\n14:22 - Update Color Channel Order\\\\n17:59 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#opencv #python\"",
    "lengthSeconds": "1121",
    "uploadDate": "2022-01-26",
    "thumbnail_url": "https://i.ytimg.com/vi/2VP9nOWiJ04/maxresdefault.jpg"
  },
  {
    "link": "watch?v=eBCU-tqLGfQ",
    "title": "Build a Doom AI Model with Python | Gaming Reinforcement Learning Full Course",
    "tags": "doom ai, doom, ai, python full course, python projects",
    "scraped_at": 1685095307.1261668,
    "genre": "Science",
    "views": "33610",
    "desc": "Teach AI to play Doom\\\\n\\\\nIn this video you\\'ll learn how to:\\\\n- Install VizDoom for Python\\\\n- Prepare VizDoom for Reinforcement Learning with OpenAI Gym\\\\n- Build Reinforcement Learning AI models using Stable Baselines 3\\\\n- Train for different Doom levels\\\\n- Apply Curriculum Learning and Reward Shaping to improve results \\\\n\\\\nGet the code: https://github.com/nicknochnack/DoomReinforcementLearning \\\\n\\\\nLinks:\\\\nVizDoom: http://vizdoom.cs.put.edu.pl/ \\\\nOpenAI Gym: https://gym.openai.com/\\\\nPyTorch: https://pytorch.org/get-started/locally/\\\\nPPO Algorithm: https://stable-baselines3.readthedocs\\xe2\\x80\\xa6\\\\n\\\\n\\\\n0:00 - Start\\\\n0:13 - Introduction\\\\n0:28 - Explainer\\\\n1:46 - CLIENT CONVERSATION 1\\\\n1:57 - Animation 1\\\\n2:09 - Tutorial Kickoff\\\\n3:01 - Getting VizDoom up and running\\\\n26:19 - CLIENT CONVERSATION 2\\\\n26:45 - Animation 2\\\\n27:16 - Creating an OpenAI Gym Environment\\\\n1:09:24 - CLIENT CONVERSATION 3\\\\n1:09:32 - Animation 3\\\\n1:13:32 - Setup Training Callback\\\\n1:22:21 - Train the RL model\\\\n1:45:28 - CLIENT CONVERSATION 4\\\\n1:45:41 - Testing the Agent\\\\n1:53:34 - BASIC LEVEL AI RESULTS \\\\n1:55:50 - CLIENT CONVERSATION 5\\\\n1:56:15 - Animation 4\\\\n1:56:30 - Changing Levels\\\\n2:11:16 - DEFEND CENTER LEVEL AI RESULTS \\\\n2:16:14 -  CLIENT CONVERSATION 6\\\\n2:18:43 - Reward shaping\\\\n3:02:54 - Curriculum Learning\\\\n3:09:05 - DEADLY CORRIDOR LEVEL AI RESULTS \\\\n3:15:29 - FINAL CLIENT CALL\\\\n3:16:02 - Wrap up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#ai #python\"",
    "lengthSeconds": "11791",
    "uploadDate": "2022-01-18",
    "thumbnail_url": "https://i.ytimg.com/vi/eBCU"
  },
  {
    "link": "watch?v=2eeYqJ0uBKE",
    "title": "Build an Mario AI Model with Python | Gaming Reinforcement Learning",
    "tags": "ai, python",
    "scraped_at": 1685095305.8541658,
    "genre": "Science",
    "views": "100243",
    "desc": "Teach AI to play Super Mario\\\\n\\\\nIn this video you\\'ll learn how to:\\\\nSetup a Mario Environment \\\\nPreprocess Mario for Applied Reinforcement Learning\\\\nBuild a Reinforcement Learning model to play Mario\\\\nTake a look at the final results\\\\n\\\\nGet the code: https://github.com/nicknochnack/MarioRL\\\\n\\\\nLinks:\\\\nSuper Mario RL: https://pypi.org/project/gym-super-mario-bros/\\\\nNes Py: https://pypi.org/project/nes-py/\\\\nOpenAI Gym: https://gym.openai.com/\\\\nPyTorch: https://pytorch.org/get-started/locally/\\\\nPPO Algorithm: https://stable-baselines3.readthedocs.io/en/master/modules/ppo.html\\\\nIntro to RL Loss: https://spinningup.openai.com/en/latest/spinningup/rl_intro3.html \\\\n\\\\n0:00 - Start\\\\n0:18 - Introduction\\\\n0:44 - Explainer\\\\n1:58 - Client Interview 1\\\\n2:02 - Animation 1\\\\n2:30 - Tutorial Start\\\\n3:22 - Setting Up Mario\\\\n10:44 - Running the Game\\\\n18:26 - Understanding the Mario State and Reward\\\\n20:44 - Client Interview 2 \\\\n21:38 - Preprocessing the Environment\\\\n26:22 - Installing the RL Libraries\\\\n31:11 - Applying Grayscaling\\\\n35:32 - Applying Vectorization\\\\n36:56 - Applying Frame Stacking\\\\n42:46 - Client Conversation 3\\\\n43:05 - Animation 3\\\\n44:00 - Importing the PPO Algorithm\\\\n47:33 - Setting Up the Training Callback\\\\n50:13 - Creating a Mario PPO Model\\\\n55:30 - Training the Reinforcement Learning Model\\\\n1:02:40 - Client Conversation 4\\\\n1:02:56 - Animation 4\\\\n1:04:01 - Loading the PPO Model\\\\n1:06:10 - Using the AI Model\\\\n1:15:56 - Client Conversation 5\\\\n1:16:37 - Ending \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n#ai #python\"",
    "lengthSeconds": "4625",
    "uploadDate": "2021-12-22",
    "thumbnail_url": "https://i.ytimg.com/vi/2eeYqJ0uBKE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=6cXV8dhNu50",
    "title": "Detect Edges with OpenCV and Python | Computer Vision Tutorial",
    "tags": "edge detection, computer vision tutorial python",
    "scraped_at": 1685095301.2051663,
    "genre": "Science",
    "views": "17626",
    "desc": "Welcome to the OpenCV Basics series. In this series, we\\'ll be going through all the basics of OpenCV from the ground up.\\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Apply Canny Edge Detection to Images\\\\n2. Tweak and Tune Detection Parameters to improve Results\\\\n3. Export final detections\\\\n\\\\nGet the code: \\\\n\\\\nLinks\\\\nDocumentation: https://docs.opencv.org/3.4/da/d22/tutorial_py_canny.html\\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:12 - Intro\\\\n0:46 - Gameplan\\\\n1:20 - Tutorial Start\\\\n3:06 - Import Dependencies\\\\n3:59 - Load Image\\\\n7:07 - Viewing and Resizing Images\\\\n10:54 - Applying Canny Edge Detection\\\\n13:30 - Reducing Noise with a Gaussian Blur \\\\n16:12 - Preprocessing with Grayscale\\\\n18:36 - Exporting Results\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1246",
    "uploadDate": "2021-12-19",
    "thumbnail_url": "https://i.ytimg.com/vi/6cXV8dhNu50/maxresdefault.jpg"
  },
  {
    "link": "watch?v=E6B3uWF-V7w",
    "title": "Build a TikTok Data Science App with Streamlit and Python | Data Science Project",
    "tags": "data science projects for beginners, data science project from scratch, data science project in python, data science project walkthrough, data science project ideas, data science projects using python, data science project tutorial, streamlit tutorial, streamlit python tutorial, streamlit dashboard, streamlit app",
    "scraped_at": 1685095307.2151659,
    "genre": "Science",
    "views": "33567",
    "desc": "Build some slick Streamlit dashboards using TikTok Data and Python.\\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Build a real time feed from TikTok\\\\n2. Preprocess that data using an ETL Pipeline\\\\n3. Create a Streamlit dashboard to visualise the data\\\\n\\\\nGet the code: https://github.com/nicknochnack/TikTokAnalytics\\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:14 - Introduction\\\\n0:47 - Gameplan\\\\n1:51 - Client Conversation 1\\\\n2:26 - Tutorial Start\\\\n4:36 - Creating a Virtual Environment\\\\n7:18 - Installing the TikTok API\\\\n10:44 - Setup VS Code\\\\n12:28 - Getting Data from TikTok\\\\n21:03 - Exporting Data to JSON\\\\n26:09 - Client Conversation 2\\\\n27:35 - Setting Up Jupyter for Prototyping\\\\n32:55 - Loading TikTok Data into Pandas\\\\n40:45 - Building an ETL Pipeline\\\\n1:00:56 - Viewing Transformed Data in Pandas\\\\n1:06:07 - Converting ETL code into a Module\\\\n1:12:34 - Exporting Transformed TikTok Data to CSV\\\\n1:17:07 - Client Conversation 3\\\\n1:18:40 - Setting up Streamlit\\\\n1:22:14 - Building Your First Streamlit App\\\\n1:27:17 - Adding TikTok Hashtag Search\\\\n1:49:17 - Creating Plotly Charts\\\\n2:05:30 - Setting app to wide and Creating a sidebar\\\\n2:16:01 - Client Conversation 4\\\\n2:16:43 - Wrap up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "8231",
    "uploadDate": "2021-12-12",
    "thumbnail_url": "https://i.ytimg.com/vi/E6B3uWF"
  },
  {
    "link": "watch?v=H7cGq0xIHbc",
    "title": "AI Learns to Do Deadlifts",
    "tags": "coding challenge, ai",
    "scraped_at": 1685095303.749916,
    "genre": "Science",
    "views": "20679",
    "desc": "I built a deadlift bot using AI. \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1026",
    "uploadDate": "2021-12-06",
    "thumbnail_url": "https://i.ytimg.com/vi/H7cGq0xIHbc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=FygLqV15TxQ",
    "title": "Accessing USB Devices and Webcams with OpenCV and Python",
    "tags": "computer vision, capturing video with python, python capture video, python stream video, python cv2, python laptop camera, computer vision projects, computer vision tutorial",
    "scraped_at": 1685095308.2001672,
    "genre": "Science",
    "views": "52052",
    "desc": "Welcome to the OpenCV Basics series. In this series, we\\'ll be going through all the basics of OpenCV from the ground up.\\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Access your webcam using OpenCV and cv2.VideoCapture\\\\n2. Take Photos with your Webcam or USB device using Python\\\\n3. Produce a real time webcam feed using Python and OpenCV\\\\n\\\\nGet the code: https://github.com/nicknochnack/OpenCV-Basics\\\\n\\\\nLinks\\\\nDocumentation: https://docs.opencv.org/4.5.4/\\\\nPython Tutorials: https://docs.opencv.org/4.5.4/d6/d00/tutorial_py_root.html\\\\nDownload Samples from here: https://opencv.org/releases/ \\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:36 - Explainer\\\\n1:29 - Tutorial Kickoff\\\\n2:02 - Whiteboard\\\\n5:43 - Import Dependencies\\\\n6:58 - Connect to a Webcam\\\\n9:14 - The Camera I use for Computer Vision\\\\n9:36 - Finding Your Video Capture Device\\\\n12:17 - Take a Photo with OpenCV\\\\n15:06 - Accesss Video from Your Webcam\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1299",
    "uploadDate": "2021-11-04",
    "thumbnail_url": "https://i.ytimg.com/vi/FygLqV15TxQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=mEzBnhJPUjc",
    "title": "Reading, Transforming and Exporting Videos using OpenCV and Python",
    "tags": "opencv tutorial, image processing, opencv python tutorial, opencv tutorial for beginners, computer vision tutorial, computer vision basics",
    "scraped_at": 1685095302.3781686,
    "genre": "Science",
    "views": "18690",
    "desc": "Welcome to the OpenCV Basics series. In this series, we\\'ll be going through all the basics of OpenCV from the ground up. In this first video you\\'ll learn how to get up and running with OpenCV. \\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Load and render Videos inside of Python with OpenCV using cv2.VideoCapture\\\\n2. Transform and access video properties using cap.get and cv2.CAP_PROP\\\\n3. Export video transformations using cv2.VideoWriter\\\\n\\\\nGet the code: https://github.com/nicknochnack/OpenCV-Basics\\\\n\\\\nLinks\\\\nDocumentation: https://docs.opencv.org/4.5.4/\\\\nPython Tutorials: https://docs.opencv.org/4.5.4/d6/d00/tutorial_py_root.html\\\\nDownload Samples from here: https://opencv.org/releases/ \\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:21 - Intro\\\\n0:54 - Explainer\\\\n2:59 - Whiteboard\\\\n7:02 - Import Dependencies\\\\n8:24 - Setting Up Video Capture\\\\n14:54 - Accessing Video Properties\\\\n20:38 - Rendering Videos\\\\n28:59 - Exporting Videos\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2430",
    "uploadDate": "2021-10-28",
    "thumbnail_url": "https://i.ytimg.com/vi/mEzBnhJPUjc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=LKispFFQ5GU",
    "title": "Build a Python Facial Recognition App with Tensorflow and Kivy",
    "tags": "face recognition, python kivy tutorial, facial recognition, face recognition with python, deep learning, face recognition python",
    "scraped_at": 1685095307.292167,
    "genre": "Science",
    "views": "113169",
    "desc": "Ever wanted to implement facial recognition or verification into your application?\\\\n\\\\nIn this series you\\'ll learn how to build a deep facial recognition application to authenticate into an application. You\\'ll start off by building a model using Deep Learning with Tensorflow which replicates what is shown in the paper titled Siamese Neural Networks for One-shot Image Recognition. Once that\\'s all trained you\\'ll be able to integrate it into a Kivy app and actually authenticate!\\\\n\\\\nGet the code: https://github.com/nicknochnack/FaceRecognition\\\\nFinal App: https://github.com/nicknochnack/FaceIDApp\\\\n\\\\nLinks\\\\nPaper: https://www.cs.cmu.edu/~rsalakhu/papers/oneshot1.pdf\\\\nLabelled Faces in the Wild: http://vis-www.cs.umass.edu/lfw/\\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:43 - Setting Up Tensorflow and Keras for Deep Learning\\\\n24:35 - Collecting Image Samples and Using the LFW Dataset\\\\n1:08:06 - Loading Images into the Tensorflow Dataloader\\\\n1:51:25 - Building a Siamese Neural Network\\\\n2:38:55 - Building a Custom Training Loop with tf.GradientTape\\\\n3:10:00 -  Testing the Model on Images\\\\n3:40:37 - Integrating with OpenCV\\\\n4:18:40 - Building the Kivy App and Integrating with Tensorflow\\\\n\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "20994",
    "uploadDate": "2021-10-25",
    "thumbnail_url": "https://i.ytimg.com/vi/LKispFFQ5GU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=43eAC1LMrsU",
    "title": "Build a Deep Facial Recognition App // Part 8 - Kivy Computer Vision App with OpenCV and Tensorflow",
    "tags": "face recognition, facial recognition, face recognition python, opencv face recognition, deep learning, face recognition app, opencv face detection, programming, python, kivy",
    "scraped_at": 1685095307.3841672,
    "genre": "Science",
    "views": "18154",
    "desc": "Ever wanted to implement facial recognition or verification into your application?\\\\n\\\\nIn this series you\\'ll learn how to build a deep facial recognition application to authenticate into an application. You\\'ll start off by building a model using Deep Learning with Tensorflow which replicates what is shown in the paper titled Siamese Neural Networks for One-shot Image Recognition. Once that\\'s all trained you\\'ll be able to integrate it into a Kivy app and actually authenticate!\\\\n\\\\nIn Part 8 you\\'ll go through how to: \\\\nInstalling and Setting Up Kivy\\\\nBuilding a Tensorflow Computer Vision App\\\\nPerforming Facial Verification with the App\\\\n\\\\nGet the code: https://github.com/nicknochnack/FaceRecognition\\\\nFinal App: https://github.com/nicknochnack/FaceIDApp\\\\n\\\\nLinks\\\\nPaper: https://www.cs.cmu.edu/~rsalakhu/papers/oneshot1.pdf\\\\nLabelled Faces in the Wild: http://vis-www.cs.umass.edu/lfw/\\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:54- Explainer\\\\n1:33 - Tutorial Start\\\\n2:16 - Whiteboard\\\\n5:09 - Setup App Folder\\\\n5:52 - Install Kivy\\\\n7:45 - Setup Validation Folder\\\\n9:08 - Create Custom Layer module\\\\n13:06 - Bring over h5 model\\\\n13:55 - Create faceid.py\\\\n14:46 - Import Dependencies\\\\n19:11 - Import Other Dependencies\\\\n20:17 - Build App Layout\\\\n30:47 - Build Update Function\\\\n44:43 - Migrate preprocessing Function\\\\n46:30 - Migrate verification Function\\\\n48:38 - Setup Webcam Saving \\\\n51:14 - Load Tensorflow Model\\\\n56:28 - Link Verification button to Function\\\\n57:22 - Testing the App \\\\n1:00:55 - Tuning the Verification and Detection Metrics\\\\n1:09:11 - Debugging Weird Detection Performance\\\\n1:17:11 - Performance Tuning\\\\n1:19:02 - Data Augmentation\\\\n1:22:51 - Adding more images to Dataset\\\\n1:23:07 - Bump up Shuffle buffer_size\\\\n1:25:03 - Evaluate on Whole Test Dataset\\\\n1:26:27 - Testing the Final Model\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "5473",
    "uploadDate": "2021-10-23",
    "thumbnail_url": "https://i.ytimg.com/vi/43eAC1LMrsU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=6yA5S9B2Z60",
    "title": "How to Read, View and Export Images using OpenCV for Python // OpenCV for Beginners",
    "tags": "image processing, opencv tutorial for beginners, opencv tutorial, opencv python tutorial, computer vision tutorial, computer vision basics",
    "scraped_at": 1685095301.4881656,
    "genre": "Science",
    "views": "9253",
    "desc": "Wassup! Welcome to the OpenCV Basics series. In this series, we\\'ll be going through all the basics of OpenCV from the ground up. In this first video you\\'ll learn how to get up and running with OpenCV. \\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Read in images into Python using OpenCV\\\\n2. Visualise images inside a Jupyter Notebook with Matplotlib\\\\n3. Write out transformed images\\\\n\\\\nGet the code: https://github.com/nicknochnack/OpenCV-Basics\\\\n\\\\nLinks\\\\nDocumentation: https://docs.opencv.org/4.5.4/\\\\nPython Tutorials: https://docs.opencv.org/4.5.4/d6/d00/tutorial_py_root.html\\\\nDownload Samples from here: https://opencv.org/releases/ \\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:30 - Explainer\\\\n1:15 - Tutorial Kickoff\\\\n3:17 - Read in an Image\\\\n7:34 - Render images using Matplotlib\\\\n10:16 - Reordering Channels\\\\n11:46 - Exporting images\\\\n15:56 - Wrap up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "978",
    "uploadDate": "2021-10-19",
    "thumbnail_url": "https://i.ytimg.com/vi/6yA5S9B2Z60/maxresdefault.jpg"
  },
  {
    "link": "watch?v=M6jukmppMqU",
    "title": "How to Install OpenCV for Python // OpenCV for Beginners",
    "tags": "opencv tutorial, opencv python tutorial, how to install opencv, opencv tutorial for beginners, install opencv",
    "scraped_at": 1685095301.6362002,
    "genre": "Science",
    "views": "28673",
    "desc": "Wassup! Welcome to the OpenCV Basics series. In this series, we\\'ll be going through all the basics of OpenCV from the ground up. In this first video you\\'ll learn how to get up and running with OpenCV. \\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Install OpenCV in Jupyter and Colab\\\\n2. Import OpenCV into a Notebook\\\\n3. Run Hist and Optical Flow Samples\\\\n\\\\nGet the code: https://github.com/nicknochnack/OpenCV-Basics\\\\n\\\\nLinks\\\\nDocumentation: https://docs.opencv.org/4.5.4/\\\\nPython Tutorials: https://docs.opencv.org/4.5.4/d6/d00/tutorial_py_root.html\\\\nDownload Samples from here: https://opencv.org/releases/ \\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:24 - Gameplan\\\\n1:53 - Install OpenCV\\\\n2:40 - Importing OpenCV\\\\n3:51 - Testing Samples\\\\n6:33 - Run Image Histogram Sample\\\\n8:54 - Run Optical Flow Sample\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "731",
    "uploadDate": "2021-10-19",
    "thumbnail_url": "https://i.ytimg.com/vi/M6jukmppMqU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=FfywuRCPmqY",
    "title": "Build a Conversation Agent using Facebook's Blenderbot and #Python",
    "tags": "machine learning, python chatbot",
    "scraped_at": 1685095304.9541876,
    "genre": "Science",
    "views": "8445",
    "desc": "Ever wanted to talk to a real life AI model? \\\\n\\\\nWell using Blenderbot you can...and it\\'s NOT even that hard. \\\\n\\\\nIn this tutorial you\\xe2\\x80\\x99ll learn how to leverage the Facebook Blenderbot to build conversational flows with Python. The model itself is accessed through Hugging Face Transformers which makes it super easy to get started with state of the art deep NLP models. This could be integrated into virtual agents, chatbots and deployed to a website!\\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Install Transformers and Blenderbot\\\\n2. Tokenize utterances for modelling\\\\n3. Speak to Facebook Blenderbot\\\\n\\\\nGet the code: https://github.com/nicknochnack/Blenderbot\\\\n\\\\nLinks\\\\nInstall PyTorch: https://pytorch.org/get-started/locally/\\\\nBlenderbot Documentation: https://huggingface.co/transformers/model_doc/blenderbot.html\\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:28 - Explainer\\\\n2:41 - Install Dependencies\\\\n4:25 - Import model\\\\n8:24 - Create Tokens\\\\n10:20 - Generate Output\\\\n14:26 - Testing Blenderbot\\\\n\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1059",
    "uploadDate": "2021-10-16",
    "thumbnail_url": "https://i.ytimg.com/vi/FfywuRCPmqY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=FNHLVRJ1HU4",
    "title": "Build a Deep Facial Recognition App // Part 7 - Real Time Predictions with OpenCV // #Python",
    "tags": "deep learning, facial recognition, face recognition",
    "scraped_at": 1685095301.5641966,
    "genre": "Science",
    "views": "9516",
    "desc": "Ever wanted to implement facial recognition or verification into your application?\\\\n\\\\nIn this series you\\'ll learn how to build a deep facial recognition application to authenticate into an application. You\\'ll start off by building a model using Deep Learning with Tensorflow which replicates what is shown in the paper titled Siamese Neural Networks for One-shot Image Recognition. Once that\\'s all trained you\\'ll be able to integrate it into a Kivy app and actually authenticate!\\\\n\\\\nIn Part 7  you\\'ll go through how to: \\\\nSetup Verification Images\\\\nBuild Verify Function\\\\nPerform Recognition in Real Time using OpenCV\\\\n\\\\nGet the code: https://github.com/nicknochnack/FaceRecognition\\\\n\\\\nLinks\\\\nPaper: https://www.cs.cmu.edu/~rsalakhu/papers/oneshot1.pdf\\\\nLabelled Faces in the Wild: http://vis-www.cs.umass.edu/lfw/\\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:29 - Explainer\\\\n1:09 - Tutorial Start\\\\n1:48 - Whiteboard\\\\n5:09 - Setup Verification Images Folder\\\\n7:53 - Build Verification Function\\\\n15:30 - Make Predictions\\\\n17:08 - Calculate Detection and Verification Thresholds\\\\n20:32 - Access Webcam\\\\n26:30 - Add Verification to Loop\\\\n31:32 - Testing the Final Model \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2287",
    "uploadDate": "2021-10-16",
    "thumbnail_url": "https://i.ytimg.com/vi/FNHLVRJ1HU4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=W1pw_ojO7XE",
    "title": "Build a Deep Facial Recognition App // Part 6 - Making Facial Recognition Predictions // #Python",
    "tags": "python, deep learning tutorial",
    "scraped_at": 1685095302.6091661,
    "genre": "Science",
    "views": "8104",
    "desc": "Ever wanted to implement facial recognition or verification into your application?\\\\n\\\\nIn this series you\\'ll learn how to build a deep facial recognition application to authenticate into an application. You\\'ll start off by building a model using Deep Learning with Tensorflow which replicates what is shown in the paper titled Siamese Neural Networks for One-shot Image Recognition. Once that\\'s all trained you\\'ll be able to integrate it into a Kivy app and actually authenticate!\\\\n\\\\nIn Part 5  you\\'ll go through how to: \\\\n1. Making Predictions with a Siamese Neural network\\\\n2. Calculating Precision and Recall\\\\n3. Saving and reloading the model from a h5 file\\\\n\\\\nGet the code: https://github.com/nicknochnack/FaceRecognition\\\\n\\\\nLinks\\\\nPaper: https://www.cs.cmu.edu/~rsalakhu/papers/oneshot1.pdf\\\\nLabelled Faces in the Wild: http://vis-www.cs.umass.edu/lfw/\\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:28 - Explainer\\\\n1:00 - Tutorial Kickoff\\\\n2:02 - Import Metrics\\\\n4:04 - Get Data Batches\\\\n7:18 - Make Predictions\\\\n12:31 - Calculate Precision and Recall\\\\n16:35 - Visualize Results\\\\n23:47 - Save Model\\\\n25:00 - Reloading the Model\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1841",
    "uploadDate": "2021-10-13",
    "thumbnail_url": "https://i.ytimg.com/vi/W1pw_ojO7XE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=2UXWNsOPN30",
    "title": "How I became a Data Scientist at IBM (No CS Degree / No Masters)",
    "tags": "data science, how i became a data scientist, data scientist, data science work, how to become a data scientist, how to get a data science job, data science career",
    "scraped_at": 1685095307.0341918,
    "genre": "Science",
    "views": "54114",
    "desc": "Sharing my story of how I became a data scientist at IBM. All done without a CS degree, masters or bootcamp! I think they key thing is that, either way you\\'re going to have to put in the work. \\\\n\\\\nWant to know anything else? Hit me up! \\\\n\\\\nInterview Resources:\\\\n1. Simplilearn Data Science Interview Qs - https://youtu.be/5JZsSNLXXuE \\\\n2. Edureka Data Science Interview Qs - https://youtu.be/tTAieUcNHdY\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:22 - My Background\\\\n1:45 - Masters Degree?\\\\n2:50 - Starting a Self Study Routine\\\\n4:03 - Kicking off Projects\\\\n5:30 - Becoming a Consultant\\\\n6:12 - Building a Startup\\\\n7:07 - Blogging and YouTube\\\\n8:20 - Networking and Tips\\\\n9:23 - Applying...a lot\\\\n10:02 - Tips on Getting Experience\\\\n10:51 - Interview Prep\\\\n12:10 - Interview Process\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "888",
    "uploadDate": "2021-10-06",
    "thumbnail_url": "https://i.ytimg.com/vi/2UXWNsOPN30/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Z3Bafw9DO7o",
    "title": "Build a Deep Facial Recognition App // Part 5 - Training a Siamese Neural Network // #Python",
    "tags": "facial recognition, facial recognition python, siamese neural network, siamese neural networks for one",
    "scraped_at": 1685095300.9351668,
    "genre": "Science",
    "views": "10716",
    "desc": "Ever wanted to implement facial recognition or verification into your application?\\\\n\\\\nIn this series you\\'ll learn how to build a deep facial recognition application to authenticate into an application. You\\'ll start off by building a model using Deep Learning with Tensorflow which replicates what is shown in the paper titled Siamese Neural Networks for One-shot Image Recognition. Once that\\'s all trained you\\'ll be able to integrate it into a Kivy app and actually authenticate!\\\\n\\\\nIn Part 5  you\\'ll go through how to: \\\\n1. Set Up a Loss Function\\\\n2. Set Up an Optimizer\\\\n3. Build a Custom Training Step\\\\n4. Create a Training Loop\\\\n5. Train the MODEL\\\\n\\\\nGet the code: https://github.com/nicknochnack/FaceRecognition\\\\n\\\\nLinks\\\\nPaper: https://www.cs.cmu.edu/~rsalakhu/papers/oneshot1.pdf\\\\nLabelled Faces in the Wild: http://vis-www.cs.umass.edu/lfw/\\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:21 - Explainer\\\\n1:15 - Tutorial Kickoff\\\\n3:17 - Setup the Loss Function \\\\u0026 Optimizer\\\\n5:40 - Establish Checkpoint Function\\\\n8:52 - Build the Train Step Function\\\\n23:22 - Build the Training Loop\\\\n27:26 - Train the Model\\\\n\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1867",
    "uploadDate": "2021-09-30",
    "thumbnail_url": "https://i.ytimg.com/vi/Z3Bafw9DO7o/maxresdefault.jpg"
  },
  {
    "link": "watch?v=sQpPaW17TwU",
    "title": "Build a Deep Facial Recognition App // Part 4 - Building a Siamese Neural Network // #Python",
    "tags": "python, machine learning, deep learning",
    "scraped_at": 1685095306.7171674,
    "genre": "Science",
    "views": "13547",
    "desc": "Ever wanted to implement facial recognition or verification into your application?\\\\n\\\\nIn this series you\\'ll learn how to build a deep facial recognition application to authenticate into an application. You\\'ll start off by building a model using Deep Learning with Tensorflow which replicates what is shown in the paper titled Siamese Neural Networks for One-shot Image Recognition. Once that\\'s all trained you\\'ll be able to integrate it into a Kivy app and actually authenticate!\\\\n\\\\nIn Part 4 you\\'ll go through: \\\\n1. Creating an Image Embedding Model\\\\n2. Building an L1 Distance Layer\\\\n3. Combining models to Create a Siamese Neural Network\\\\n\\\\nGet the code: https://github.com/nicknochnack/FaceRecognition\\\\n\\\\nLinks\\\\nPaper: https://www.cs.cmu.edu/~rsalakhu/papers/oneshot1.pdf\\\\nLabelled Faces in the Wild: http://vis-www.cs.umass.edu/lfw/\\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:30 - Gameplan\\\\n1:59 - Tutorial Kickoff\\\\n3:07 - Create an Embedding Layer with Tensorflow\\\\n28:11 - Build a custom L1 Distance Keras Layer\\\\n35:35 - Use the Keras Functional API to make a Siamese Model \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2853",
    "uploadDate": "2021-09-22",
    "thumbnail_url": "https://i.ytimg.com/vi/sQpPaW17TwU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=QBxQxYvdNek",
    "title": "Build a Deep Facial Recognition App // Part 3 - Preparing Data for Deep Learning // TF Dataloader",
    "tags": "face recognition python, face recognition, face recognition app, face recognition project, face recognition using python, tensorflow data pipeline, tensorflow dataset, tensorflow data augmentation, tensorflow data validation, tensorflow data input pipeline",
    "scraped_at": 1685095305.6381664,
    "genre": "People",
    "views": "10252",
    "desc": "Ever wanted to implement facial recognition or verification into your application?\\\\n\\\\nIn this series you\\'ll learn how to build a deep facial recognition application to authenticate into an application. You\\'ll start off by building a model using Deep Learning with Tensorflow which replicates what is shown in the paper titled Siamese Neural Networks for One-shot Image Recognition. Once that\\'s all trained you\\'ll be able to integrate it into a Kivy app and actually authenticate!\\\\n\\\\nIn Part 3 you\\'ll go through: \\\\n1. Scaling and Resizing Images as part of a Deep Learning pipeline\\\\n2. Loading and labelling images using the Tensorflow Dataloader\\\\n3. Splitting data pipelines into training and testing partitions\\\\n\\\\nGet the code: https://github.com/nicknochnack/FaceRecognition\\\\n\\\\nLinks\\\\nPaper: https://www.cs.cmu.edu/~rsalakhu/papers/oneshot1.pdf\\\\nLabelled Faces in the Wild: http://vis-www.cs.umass.edu/lfw/\\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n3:19 - Loading Image paths into tf.data\\\\n10:19 - Loading, Scaling and Resizing Images in a pipeline\\\\n16:51 - Creating Positive and Negative Samples\\\\n25:21 - Caching, Batching and Splitting the Pipeline\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2600",
    "uploadDate": "2021-09-18",
    "thumbnail_url": "https://i.ytimg.com/vi/QBxQxYvdNek/maxresdefault.jpg"
  },
  {
    "link": "watch?v=sw3o0rAazMg",
    "title": "Machine Learning Projects You NEVER Knew Existed",
    "tags": "machine learning projects, machine learning, machine learning projects in python, machine learning projects for beginners, ml project ideas, ml projects for beginners, ai projects for beginners, ml project ideas for beginners, machine learning project",
    "scraped_at": 1685095301.7061663,
    "genre": "People",
    "views": "87677",
    "desc": "Looking for machine learning projects to add to your portfolio?\\\\n\\\\nThis video is about to answer all your prayers all the way from beginner to advanced there\\'s a project for you. Plus I\\'ll give you links to tutorials that you can use to get started ASAP. \\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n2:11 - Beginner Projects\\\\n5:35 - Intermediate Projects\\\\n9:59 - Advanced Projects\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "919",
    "uploadDate": "2021-09-17",
    "thumbnail_url": "https://i.ytimg.com/vi/sw3o0rAazMg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=UMjW4Db4E_g",
    "title": "Build a Deep Facial Recognition App // Part 2 Collecting Data // Deep Learning Project Tutorial",
    "tags": "face recognition, face detection, face recognition python, machine learning projects, face recognition tutorial, face recognition app, deep learning, machine learning, deep learning project",
    "scraped_at": 1685095303.6769538,
    "genre": "People",
    "views": "14321",
    "desc": "Ever wanted to implement facial recognition or verification into your application?\\\\n\\\\nIn this series you\\'ll learn how to build a deep facial recognition application to authenticate into an application. You\\'ll start off by building a model using Deep Learning with Tensorflow which replicates what is shown in the paper titled Siamese Neural Networks for One-shot Image Recognition. Once that\\'s all trained you\\'ll be able to integrate it into a Kivy app and actually authenticate!\\\\n\\\\nIn Part 2 you\\'ll go through: \\\\n1. Collecting Negative images from Labelled Faces in the wild \\\\n2. Resizing OpenCV Output Frames for Image Collection\\\\n3. Collecting Positive and Anchor Images  \\\\n\\\\nGet the code: https://github.com/nicknochnack/FaceRecognition\\\\n\\\\nLinks\\\\nPaper: https://www.cs.cmu.edu/~rsalakhu/papers/oneshot1.pdf\\\\nLabelled Faces in the Wild: http://vis-www.cs.umass.edu/lfw/\\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:28 - What\\'s Covered\\\\n1:45 - Whiteboard Session\\\\n7:34 - Collect LFW Data\\\\n12:20 - Moving Images\\\\n19:38 - Access Webcam with OpenCV\\\\n27:14 - Changing OpenCV Frame Size\\\\n32:43 - Saving Images\\\\n43:16 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2612",
    "uploadDate": "2021-09-11",
    "thumbnail_url": "https://i.ytimg.com/vi/UMjW4Db4E_g/maxresdefault.jpg"
  },
  {
    "link": "watch?v=bK_k7eebGgc",
    "title": "Build a Deep Facial Recognition App from Paper to Code // Part 1 // Deep Learning Project Tutorial",
    "tags": "face recognition, facial recognition, face recognition with python",
    "scraped_at": 1685095301.9971678,
    "genre": "People",
    "views": "32692",
    "desc": "Ever wanted to implement facial recognition or verification into your application?\\\\n\\\\nIn this series you\\'ll learn how to build a deep facial recognition application to authenticate into an application. You\\'ll start off by building a model using Deep Learning with Tensorflow which replicates what is shown in the paper titled Siamese Neural Networks for One-shot Image Recognition. Once that\\'s all trained you\\'ll be able to integrate it into a Kivy app and actually authenticate!\\\\n\\\\nIn Part 1, you\\'ll go through: \\\\n1. Install Dependencies around Tensorflow\\\\n2. Importing Tensorflow Functional API\\\\n3. Setting up to Limit your GPU growth \\\\n4. Create Data Folders and Structures\\\\n\\\\nGet the code: https://github.com/nicknochnack/FaceRecognition\\\\n\\\\nLinks\\\\nPaper: https://www.cs.cmu.edu/~rsalakhu/papers/oneshot1.pdf\\\\nLabelled Faces in the Wild: http://vis-www.cs.umass.edu/lfw/\\\\n\\\\nChapters: \\\\n0:00 - Start\\\\n0:25 - Explainer\\\\n2:09 - Install Dependencies\\\\n3:51 - Import Dependencies\\\\n13:20 - Set GPU Growth\\\\n16:54 - Create Folder Structures\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1433",
    "uploadDate": "2021-09-08",
    "thumbnail_url": "https://i.ytimg.com/vi/bK_k7eebGgc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=KC7nJtBHBqg",
    "title": "Tensorflow Multi-Person Pose Estimation with Python // Machine Learning Tutorial",
    "tags": "pose estimation, pose estimation opencv, pose estimation deep learning, pose estimation tutorial, pose estimation python, pose estimation computer vision, deep learning tutorial",
    "scraped_at": 1685095308.0301666,
    "genre": "People",
    "views": "33756",
    "desc": "Get the code: https://github.com/nicknochnack/MultiPoseMovenetLightning \\\\n\\\\nLinks\\\\nModel: https://tfhub.dev/google/movenet/multipose/lightning/1\\\\nExisting Movenet Model: https://github.com/nicknochnack/MoveNetLightning\\\\n\\\\nPapers\\\\nMobileNetv2: https://arxiv.org/pdf/1801.04381.pdf\\\\nFeature Pyramid Networks: https://arxiv.org/pdf/1612.03144.pdf\\\\nCenterNet: https://arxiv.org/pdf/1904.07850.pdf\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "3348",
    "uploadDate": "2021-08-29",
    "thumbnail_url": "https://i.ytimg.com/vi/KC7nJtBHBqg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Yo5Hw8aV3vY",
    "title": "Automatic Summarization using Deep Learning | Abstractive Summarization with Pegasus",
    "tags": "python for automation, python deep learning, python tutorial for beginners, text summarization, natural language processing, text summarization using python, text summarization using transformer",
    "scraped_at": 1685095305.3941665,
    "genre": "People",
    "views": "27966",
    "desc": "So you\\'re tired of reading Emma too?\\\\n\\\\nPegasus is here to help. The Pegasus model is built using a Transformer Encoder-Decoder architecture and is ridiculously powerful when it comes to summarizing big blocks of text. \\\\n\\\\nYou can get started with it super quickly using the Transformers library from Hugging Face and Python. This Python tutorial will walk you through how to do it all from start to finish. \\\\n\\\\nIn this video, you\\'ll learn how to: \\\\n1. Install Dependencies for Transformers in Python\\\\n2. Import and Configure the Pegasus X-Sum Model\\\\n3. Perform Abstractive Summarization on Wikipedia, News and Scientific Journals\\\\n\\\\nGet the code: https://github.com/nicknochnack/PegasusSummarization\\\\n\\\\nLinks:\\\\nPegasus Paper: https://arxiv.org/pdf/1912.08777.pdf\\\\nX-Sum Model: https://huggingface.co/google/pegasus-xsum\\\\nInstall PyTorch: https://pytorch.org/get-started/locally/\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n2:56 - What you\\'ll learn\\\\n4:09 - Tutorial Kickoff\\\\n4:42 - Install Dependencies\\\\n7:40 - Load Model and Tokenizer\\\\n11:53 - Perform Abstractive Summarization on Wikipedia Articles\\\\n17:36 - Results of Summarization\\\\n21:12 - Summarizing News Articles\\\\n22:52 - Summarizing Scientific Research\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1575",
    "uploadDate": "2021-08-26",
    "thumbnail_url": "https://i.ytimg.com/vi/Yo5Hw8aV3vY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=t5xwQguk9XU",
    "title": "Rip out Drug Labels using Deep Learning with PaddleOCR & Python",
    "tags": "paddleocr, deep learning, text extraction from image using python, text extraction from pdf using python, text extraction from image, text extraction from image using deep learning, optical character recognition tutorial",
    "scraped_at": 1685095302.5341659,
    "genre": "People",
    "views": "24031",
    "desc": "Want to learn how to apply optical character recognition?\\\\n\\\\nIn this video you\\'ll be able to leverage it to extract prescription medication labels using PaddleOCR. This has a range of applications and could be used as part of a broader deep learning pipeline. It could be integrated with a Text to Speech system to make it easier for people with accessibility issues to interpret their medications. \\\\n\\\\nGet the code: https://github.com/nicknochnack/DrugLabelExtraction-\\\\n\\\\nIn this video, you\\'ll learn:\\\\n1. How to install PaddleOCR for Python\\\\n2. Applying OCR to images\\\\n3. Extracting prescription medication labels using PaddleOCR\\\\n \\\\nLinks: \\\\nPaper: https://arxiv.org/pdf/2009.09941v3.pdf\\\\nGitHub: https://github.com/PaddlePaddle/PaddleOCR\\\\n\\\\nChapters:\\\\n0:00 Start\\\\n3:13 - Install and Import Dependencies\\\\n10:31 - Make Detections\\\\n20:36 - Visualise OCR Results\\\\n31:51 - Other Examples\\\\n36:00 - Ending \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2171",
    "uploadDate": "2021-08-22",
    "thumbnail_url": "https://i.ytimg.com/vi/t5xwQguk9XU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=3uhP6xDfx3o",
    "title": "The END for developers? First look at OpenAI Codex + Python Tutorial",
    "tags": "openai codex, openai, openai codex python, openai codex machine learning, openai codex paper, openai codex tutorial",
    "scraped_at": 1685095304.4571671,
    "genre": "People",
    "views": "30309",
    "desc": "Sup team!\\\\n\\\\nToday we\\'re taking a look at OpenAI Codex. \\\\n\\\\nThis is the same model that powers the amazing GitHub CoPilot. It\\'s a refined version of GPT3 named Davinci-Codex which allows you to leverage Natural Language Processing to generate code. \\\\n\\\\nIn this video, we\\'ll look at: \\\\n1. How it works and how to get access?\\\\n2. Use it to build some machine learning pipelines\\\\n3. Commence building a javascript app in the Playground\\\\n\\\\nWe\\'ll also take a look at how to leverage the Python SDK to apply code completion. The code that I showed in the video is available here: https://github.com/nicknochnack/OpenAI-Codex\\\\n\\\\nChapters:\\\\n0:00 Start\\\\n2:27 - Paper\\\\n3:52 - What can GPT3 Do?\\\\n4:30 - Generating Python Code\\\\n13:47 - Generating Javascript\\\\n17:54 - Using the Python SDK to Fix Code\\\\n28:25 - Generating Code using the SDK\\\\n31:57 - Generating Machine Learning Code in Python\\\\n35:50 - Pitfalls\\\\n38:19 - Wrap up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2310",
    "uploadDate": "2021-08-18",
    "thumbnail_url": "https://i.ytimg.com/vi/3uhP6xDfx3o/maxresdefault.jpg"
  },
  {
    "link": "watch?v=yGN28LY5VuA",
    "title": "Python for Data Science | Beginner Friendly Full Course in 5 Hours",
    "tags": "python for beginners, python tutorial, python full course, python projects, python programming, python course, python tutorial for beginners, python full course for beginners, python full course in english",
    "scraped_at": 1685095306.0401669,
    "genre": "People",
    "views": "39205",
    "desc": "Starting your data science journey?\\\\n\\\\nJust dipping your toe into Machine Learning?\\\\n\\\\nNot too sure how to get started with the wild world of Python?\\\\n\\\\nI got you.\\\\n\\\\nThere\\xe2\\x80\\x99s a ton of stuff to learn when you\\xe2\\x80\\x99re just getting started with data science, but having a good foundation in Python will set you up for success. That being said there\\xe2\\x80\\x99s a lot of fluff that can derail you when you\\xe2\\x80\\x99re learning. \\\\n\\\\nSo I put this together. \\\\n\\\\nThis is everything I wish I would have learned when starting off my journey in Data Science. It\\xe2\\x80\\x99s all of the Python that I use in my day to day job and it\\xe2\\x80\\x99s more than enough to get you started!\\\\n\\\\nIn this video, you\\xe2\\x80\\x99ll learn:\\\\n1. How to setup your environment for Python\\\\n2. Fundamentals of coding with Python with a focus on Data Science Applications\\\\n3. Applications of Python for Data Science along with some practical Python projects\\\\n\\\\nLink to Code: https://github.com/nicknochnack/PythonForDataScience\\\\n\\\\nLink to Projects:\\\\nProject 1 - End to End Machine Learning: https://www.youtube.com/playlist?list=PLgNJO2hghbmjNrHZqplNMEpsW-QLFdvJV\\\\nProject 2 - Data Science Basics: https://www.youtube.com/playlist?list=PLgNJO2hghbmjpjt9sa2POi4U0a1-GGTlj\\\\nProject 3 - Deep Learning Summarization: https://youtu.be/TsfLm5iiYb4\\\\nProject 4 - Sentiment Analysis: https://youtu.be/szczpgOEdXs\\\\n\\\\nOther projects\\\\nAI for Gaming: https://youtu.be/hCeJeq8U0lo\\\\nObject Detection: https://youtu.be/yqkISICHH-U \\\\n\\\\nChapters\\\\n0:00 - Start\\\\n1:16 - Why you should learn Python\\\\n6:08 - How to get started\\\\n6:59 - Installing Anaconda\\\\n11:42 - Starting Jupyter Notebooks\\\\n13:42 - Creating a Jupyter Notebook\\\\n16:10 - Jupyter Shortcuts\\\\n17:54 - Exporting Jupyter to .py\\\\n21:04 - Cell Types\\\\n23:16  - Working with Markdown\\\\n25:23 - Accessing Documentation\\\\n26:42 - Google Colab\\\\n28:40 - Watson Studio\\\\n33:23 - SECTION 2 Variables \\\\u0026 Data Types\\\\n34:38 - CRUD\\\\n41:13 - Variables\\\\n47:18 - Data Types\\\\n49:09 - Strings\\\\n52:52 - Integers\\\\n54:55 - Floats\\\\n56:27 - Booleans\\\\n1:00:44 - Lists\\\\n1:05:28 - Tuples\\\\n1:12:43 - Sets\\\\n1:21:05 - Dictionaries\\\\n1:28:17 - CRUD for Lists\\\\n1:30:14 - Creating a List\\\\n1:31:33 - Reading a List Using Indexing\\\\n1:32:55 - Updating List Values\\\\n1:33:58 - Using .append()\\\\n1:34:57 - Using .insert()\\\\n1:39:21 - CRUD for Dictionaries\\\\n1:39:58 - Create a Dictionary\\\\n1:41:41 - Read from a Dictionary\\\\n1:42:46 - Accessing Dictionary .keys()\\\\n1:43:27 - Accessing Dictionary .values()\\\\n1:43:57 - Updating Dictionaries\\\\n1:46:50 - Deleting from a Dictionary\\\\n1:48:54 - SECTION 3 Conditions \\\\u0026 Loops\\\\n1:52:23 - Conditions and Logic\\\\n1:54:47 - if Statement\\\\n2:02:54 - else Statement\\\\n2:05:28 - elif Statement\\\\n2:09:46 - in Statement\\\\n2:17:29 - for Loop\\\\n2:25:27 - continue, break, pass\\\\n2:32:32 - while Loop\\\\n2:39:59 - Looping through Dictionaries\\\\n2:48:28 - List comprehensions\\\\n2:52:00 - SECTION 4 Functions\\\\n2:55:59 - Defining Functions\\\\n3:02:36 - Positional Arguments\\\\n3:10:47 - Multiple Positional Arguments\\\\n3:15:34 - Looping with an Index\\\\n3:21:35 - Keyword Arguments\\\\n3:25:35 - Combining Positional and Keyword Args\\\\n3:32:11 - return Keyword\\\\n3:34:52 - lambda Functions\\\\n3:39:00 - SECTION 5 Classes\\\\n3:42:41 - Classes\\\\n3:44:52 - class Statement\\\\n3:45:45 - __init__ Method\\\\n3:47:01 - self keyword\\\\n3:49:02 - Assigning properties\\\\n3:49:34 - Creating an object\\\\n3:51:36 - Methods\\\\n4:03:03 - Class Inheritance\\\\n4:06:36 - Defining a Child Class\\\\n4:08:10 - Inheriting using the super() function\\\\n4:18:25 - SECTION 6 - Modules and Packages\\\\n4:21:45 - Modules\\\\n4:23:05 - Creating a helper module \\\\n4:25:42 - Importing modules\\\\n4:27:25 - Accessing Python Packages\\\\n4:29:00 - Working with APIs\\\\n4:32:02 - Installing packages with pip install\\\\n4:33:42 - Viewing installed packages with pip list\\\\n4:34:36 - Importing Packages\\\\n4:35:41 - Making API calls with requests.get()\\\\n4:45:46 - Parsing JSON\\\\n4:57:24 - SECTION 7  Files \\\\u0026 Error handling\\\\n5:01:26 - Working with Files\\\\n5:02:32 - Writing Files using the with statement\\\\n5:07:04 - Reading from files\\\\n5:11:01 - Error Handling \\\\n5:14:26 - Using try except statements\\\\n5:19:37 - SECTION 8 Math and Projects\\\\n5:22:48 - Math in Python\\\\n5:24:54 - Math Operators\\\\n5:25:20 - Addition \\\\n5:26:01 - Subtraction \\\\n5:26:42 - Division\\\\n5:27:37 - Floor Division\\\\n5:29:06 - Modulus\\\\n5:31:28 - Multiplication \\\\n5:31:59 - Power\\\\n5:32:52 - Rounding with round()\\\\n5:34:15 - Absolute Values abs()\\\\n5:38:29 - Math Package\\\\n5:40:45 - Python Projects\\\\n\\\\n\\\\n\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "20718",
    "uploadDate": "2021-08-14",
    "thumbnail_url": "https://i.ytimg.com/vi/yGN28LY5VuA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=jq5QfwDkBGs",
    "title": "Build a Deep Learning Selfie Segmentation Web App using Gradio",
    "tags": "film, udost",
    "scraped_at": 1685095303.5980675,
    "genre": "Science",
    "views": "7121",
    "desc": "Build your own selfie segmentation model using Mediapipe, Gradio and Python. \\\\n\\\\nThe selfie segmentation model allows you to quickly and easily strip out the background from photos using a prebuilt machine learning model.\\\\n\\\\nWe\\xe2\\x80\\x99re going to take it one step further though and integrate it to a Gradio app! \\\\n\\\\nLink to Code: https://github.com/nicknochnack/SelfieSegmentationwithGradio\\\\n\\\\nOnce again thanks so much to Gradio for sponsoring this video. If you need to transform your ML models into standalone apps and make them shine, DEFINITELY check them out at https://gradio.app and get started for free! Also make sure to check out their GitHub repo for a bunch of great resources: https://github.com/gradio-app/gradio\\\\n\\\\nChapters\\\\n0:00 - Introduction\\\\n0:14 -  Gameplan\\\\n1:10 - How it Works\\\\n1:39 - Tutorial Start\\\\n2:37 - 1. Install and Import Dependencies\\\\n4:55 - 2. Setup OpenCV Feed\\\\n8:41 - 3. Apply Selfie Segmentation\\\\n13:30  - 4. Process Results with Matplotlib\\\\n26:54 - 5. Build Gradio App\\\\n36:29 - Ending\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2202",
    "uploadDate": "2021-07-22",
    "thumbnail_url": "https://i.ytimg.com/vi/jq5QfwDkBGs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=JuG6ZcNe_3Q",
    "title": "Master ML Papers without Losing Your Sh*t",
    "tags": "machine learning, deep learning",
    "scraped_at": 1685095303.8381681,
    "genre": "Science",
    "views": "13109",
    "desc": "Tired of struggling your way through Machine Learning research papers?\\\\n\\\\nLatest deep learning models got you feeling down?\\\\n\\\\nRipping out your hair trying to stack layers?\\\\n\\\\nLosing the plot over\\xe2\\x80\\xa6plotting loss?\\\\n\\\\nI hear you. Let\\xe2\\x80\\x99s face it, reading Machine Learning and Deep Learning research papers can be tough. Having a process to systematically break them down makes working through them a whole heap easier. In this video you\\xe2\\x80\\x99ll learn how to do exactly that.\\\\n\\\\nLinks Mentioned\\\\nPapers With Code: https://paperswithcode.com/\\\\nGoodNotes: https://www.goodnotes.com/\\\\nKeras Functional API: https://keras.io/guides/functional_api/\\\\n\\\\nChapters\\\\n0:00 - Introduction\\\\n0:39 - 1. Take a Breath\\\\n1:28 - 2. Read the Abstract, Conclusion, Data and Results Section\\\\n3:43 - 3. Get the Code\\\\n5:29 - 4. Isolate How it Was Built\\\\n9:49 - 5. Try it Out Yourself\\\\n11:36 - Ending\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "723",
    "uploadDate": "2021-07-17",
    "thumbnail_url": "https://i.ytimg.com/vi/JuG6ZcNe_3Q/maxresdefault.jpg"
  },
  {
    "link": "watch?v=feA-H6blwr4",
    "title": "Build a Simple Language Translation App using Python for Beginners",
    "tags": "python app development, python application development, python app tutorial, python machine learning project ideas, python projects",
    "scraped_at": 1685095306.376166,
    "genre": "Science",
    "views": "16069",
    "desc": "Want to build your very own language translation app?\\\\n\\\\nWell in this video you can using Hugging Face Transformers!\\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Instal Gradio and Transformers\\\\n2. Translate text using a SOTA deep learning translation pipeline\\\\n3. Building a lightweight machine learning app using Python and Gradio\\\\n\\\\nGet the code:\\\\nGitHub: https://github.com/nicknochnack/GradioxTransformersTranslation\\\\n\\\\nLinks\\\\nPyTorch Installation: https://pytorch.org/get-started/locally/\\\\nHugging Face Transformers Pipelines: https://huggingface.co/transformers/main_classes/pipelines.html\\\\nHugging Face Models: https://huggingface.co/models \\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:11 - Gameplan\\\\n0:48 - How it Works\\\\n1:25 - Tutorial Kick Off\\\\n2:14 - 1. Install and Import Dependencies\\\\n9:24 - 2. Load Pipeline and Translate\\\\n12:22 - 3. Create Gradio App\\\\n19:52 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1209",
    "uploadDate": "2021-07-14",
    "thumbnail_url": "https://i.ytimg.com/vi/feA"
  },
  {
    "link": "watch?v=tFNJGim3FXw",
    "title": "Deep Drowsiness Detection using YOLO, Pytorch and Python",
    "tags": "yolo python tensorflow, yolo python opencv, yolo python tutorial, yolo python code, yolo python implementation, yolo python code github, drowsinness, drowsiness detection system, drowsiness detection system using python, drowsiness detection system using raspberry pi",
    "scraped_at": 1685095306.566166,
    "genre": "Science",
    "views": "152796",
    "desc": "Want to leverage YOLO object detection for safety?\\\\n\\\\nOne great implementation is using it to determine when drivers might be feeling a little drowsy. In this video we\\xe2\\x80\\x99re going to do exactly that using a fine tuned, customer object detection model powered by YOLO and PyTorch!\\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Instal Ultralytics YOLOv5\\\\n2. Detect Objects from Images\\\\n3. Detect Objects from Pre-Recorded Videos\\\\n4. Detect Objects in Real Time Using OpenCV\\\\n5. Fine Tuning a Drowsiness Model using YOLOv5 and PyTorch\\\\n6. Perform Real Time Drowsiness Detection\\\\n\\\\nGet the code:\\\\nGitHub: https://github.com/nicknochnack/YOLO-Drowsiness-Detection\\\\n\\\\nLinks\\\\nUltralytics YOLOv5: https://github.com/ultralytics/yolov5\\\\nPyTorch Installation: https://pytorch.org/get-started/locally/\\\\nCOCO Classes: https://gist.github.com/AruniRC/7b3dadd004da04c80198557db5da4bda\\\\nLabelImg: https://github.com/tzutalin/labelImg\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:48 - Introduction\\\\n1:18 - Gameplan\\\\n2:23 - How it Works\\\\n3:05 - Tutorial Start\\\\n4:12 - 1. Install and Import Dependencies\\\\n10:51 - 2. Load Model\\\\n13:44 - 3. Make Detections using Images\\\\n21:05 - 4. Real Time Detections and Object Detection using Videos\\\\n30:05 - 5. Train a Custom YOLO Model\\\\n1:10:28 - 6. Detecting Drowsiness\\\\n1:17:58 - Ending\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "4714",
    "uploadDate": "2021-07-12",
    "thumbnail_url": "https://i.ytimg.com/vi/tFNJGim3FXw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=SSW9LzOJSus",
    "title": "Pose Estimation with the Fastest Python Deep Learning Model | MoveNet Lightning",
    "tags": "pose estimation opencv, pose estimation deep learning, pose estimation python, pose estimation computer vision, pose estimation tutorial, pose estimation tensorflow, movenet, movenet lightning",
    "scraped_at": 1685095302.4591658,
    "genre": "Science",
    "views": "38964",
    "desc": "MoveNet Lightning is hella fast and great for fitness applications. In this vid, you\\'ll learn how to use it!\\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Instal MoveNet for Python \\\\n2. Load MoveNet using TFLite\\\\n3. Rendering Pose Estimation results from scratch\\\\n4. Perform real time pose estimation using OpenCV\\\\n\\\\nGet the code:\\\\nGitHub: https://github.com/nicknochnack/MoveNetLightning\\\\n\\\\nLinks\\\\nDownload Model: https://tfhub.dev/google/lite-model/movenet/singlepose/lightning/3\\\\nModel Card: https://storage.googleapis.com/movenet/MoveNet.SinglePose%20Model%20Card.pdf\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:17 - Introduction\\\\n0:46 - Gameplan\\\\n1:21 - How it Works\\\\n2:11 - Tutorial\\\\n3:36 - 0. Install and Import Dependencies\\\\n6:42 - 1. Load TFLite Model\\\\n12:31 - 2. Make Pose Detections\\\\n28:29 - 3. Draw Keypoints\\\\n36:57 - 4. Draw Connections\\\\n50:36 - Wrap Up \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "3061",
    "uploadDate": "2021-07-08",
    "thumbnail_url": "https://i.ytimg.com/vi/SSW9LzOJSus/maxresdefault.jpg"
  },
  {
    "link": "watch?v=sL-4rWuEiVw",
    "title": "Build a ML Classification Model in 12 Lines with PyCaret",
    "tags": "machine learning, data science, machine learning tutorial, data science for beginners, machine learning classification, supervised machine learning, python machine learning project ideas, python machine learning data science, data science projects for beginners",
    "scraped_at": 1685095302.8331647,
    "genre": "Science",
    "views": "13275",
    "desc": "Want to get started with low-code machine learning FAST?\\\\n\\\\nWell PyCaret is the library for you, it allows you to leverage state of the art ml pipeline to build your machine learning models. You can build a series of ML models using a single function call and automatically rank different models against each other.\\\\n\\\\nYou\\'ll learn how to build a heart disease prediction model using data from kaggle. As part of the process you\\'ll learn how to rapidly prototype a machine learning model to predict a binary outcome. \\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Instal PyCaret (a low code machine learning library for Python)\\\\n2. Load in custom data from Kaggle using Pandas\\\\n3. Build a PyCaret ML classification model using automated pipelines\\\\n\\\\nGet the code:\\\\nhttps://github.com/nicknochnack/PyCaretClassificationCrashCourse\\\\n\\\\nLinks\\\\nData: https://www.kaggle.com/ronitf/heart-disease-uci\\\\nPyCaret: https://pycaret.org/\\\\nPyCaret create_model: https://pycaret.org/create-model/\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:51 - Gameplan\\\\n1:19 - How it Works\\\\n2:38 - 1. Install ad Import Dependencies\\\\n5:57 - 2. Load Data\\\\n9:40 - 3. Train and Evaluate Model\\\\n17:02 - 4. Test Model\\\\n19:35 - 5. Saving and Reload Models\\\\n21:51 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1327",
    "uploadDate": "2021-06-27",
    "thumbnail_url": "https://i.ytimg.com/vi/sL"
  },
  {
    "link": "watch?v=4htP-hmIBvc",
    "title": "Build a Grammar Correction Python App with Gramformer and Gradio",
    "tags": "grammar checker, grammar checker in python, gramformer, gramformer app, python app, python app development, python application, python app tutorial, python ml app, python machine learning application, build a machine learning web app with streamlit and python, python machine learning web app",
    "scraped_at": 1685095303.4554863,
    "genre": "Science",
    "views": "14390",
    "desc": "My grammar sucks at the best of times. \\\\n\\\\nEnter Gramformer.\\\\n\\\\nGramformer is a deep learning model built using Transformers and PyTorch that allows you to improve your grammar. It takes a malformed sentence as an input and returns a sentence with corrected grammar. \\\\n\\\\nWhat\\'s even better is that it\\'s easy to get up and started with and the creator is adding on a grammar highlighter and error detector as well! Anyway, we\\'ll go through it all in the vid! \\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Install Gramformer\\\\n2. Use the Gramformer model for grammar correction \\\\n3. Deploy it as an application using Gradio\\\\n\\\\nGet the code:\\\\nhttps://github.com/nicknochnack/GramformerApp\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:24 - Gameplan\\\\n1:03 - How it Works\\\\n1:38 - Tutorial Start\\\\n2:50 - 1. Install and Import Dependencies\\\\n7:04 - 2. Instantiate Gramformer\\\\n9:30 - 3. Correct Grammar Using Gramformer\\\\n14:36 - 4. Build Gradio App\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1390",
    "uploadDate": "2021-06-24",
    "thumbnail_url": "https://i.ytimg.com/vi/4htP"
  },
  {
    "link": "watch?v=doDUihpj6ro",
    "title": "Sign Language Detection using ACTION RECOGNITION with Python | LSTM Deep Learning Model",
    "tags": "sign language, action recognition deep learning, action recognition python, action recognition tutorial, action recognition deep learning tutorial, action recognition in videos, action recognition computer vision, sign language recognition, sign language recognition using machine learning, lstm model, lstm keras, lstm tutorial, lstm tensorflow",
    "scraped_at": 1685095306.2961686,
    "genre": "Science",
    "views": "245159",
    "desc": "Want to take your sign language model a little further?\\\\n\\\\nIn this video, you\\'ll learn how to leverage action detection to do so!\\\\n\\\\nYou\\'ll be able to leverage a keypoint detection model to build a sequence of keypoints which can then be passed to an action detection model to decode sign language! As part of the model building process you\\'ll be able to leverage Tensorflow and Keras to build a deep neural network that leverages LSTM layers to handle the sequence of keypoints.\\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Extract MediaPipe Holistic Keypoints\\\\n2. Build a Sign Language model using a Action Detection powered by LSTM layers\\\\n3. Predict sign language in real time using video sequences\\\\n\\\\nGet the code:\\\\nhttps://github.com/nicknochnack/ActionDetectionforSignLanguage\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:38 - Gameplan\\\\n1:38 - How it Works\\\\n2:13 - Tutorial Start\\\\n3:53 - 1. Install and Import Dependencies\\\\n8:17 - 2. Detect Face, Hand and Pose Landmarks\\\\n40:29 - 3. Extract Keypoints\\\\n57:35 - 4. Setup Folders for Data Collection\\\\n1:06:00 - 5. Collect Keypoint Sequences\\\\n1:25:17 - 6. Preprocess Data and Create Labels\\\\n1:34:38 - 7. Build and Train an LSTM Deep Learning Model\\\\n1:50:11 - 8. Make Sign Language Predictions\\\\n1:52:40 - 9. Save Model Weights\\\\n1:53:45 - 10. Evaluation using a Confusion Matrix\\\\n1:57:40 - 11. Test in Real Time\\\\n2:20:46 - BONUS: Improving Performance\\\\n2:26:52 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "8833",
    "uploadDate": "2021-06-18",
    "thumbnail_url": "https://i.ytimg.com/vi/doDUihpj6ro/maxresdefault.jpg"
  },
  {
    "link": "watch?v=wJsUY7IxsvU",
    "title": "Machine Learning Explainability & Bias Detection with Watson OpenScale",
    "tags": "explainable ai principles, explainable ai principles examples, explainable ai methods, explainable ai tools, explainable ai tutorial, explainable ai python, explaining machine learning, explainable machine learning, explainable machine learning in deployment, explainable machine learning models",
    "scraped_at": 1685095301.4151657,
    "genre": "Science",
    "views": "4143",
    "desc": "So you\\'ve built a model.\\\\n\\\\nIt\\'s deployed. \\\\n\\\\nNow what?\\\\n\\\\nHow do you know if it\\'s performing well?\\\\n\\\\nHow do you keep track of predictions?\\\\n\\\\nBetter yet, how do you explain them?\\\\n\\\\nIn this video, you\\'ll learn how to do exactly that using Watson OpenScale. in 20ish minutes I\\'ll walk you through how to leverage Watson OpenScale for machine learning explainability, debiasing and drift detection. \\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Setting up Watson OpenScale\\\\n2. Viewing Model Performance Metrics like Accuracy, AUC, Precision\\\\n3. Debiasing Machine Learning Predictions\\\\n4. Explaining and Interpret Machine Learning Model Predictions\\\\n\\\\nLinks Mentioned\\\\nIBM Cloud Register: https://cloud.ibm.com/registration\\\\nWatson OpenScale: https://cloud.ibm.com/catalog/services/watson-openscale\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:27 - Explainer\\\\n1:26 - How it Works\\\\n2:03 - Setup Watson OpenScale\\\\n6:21 - Evaluating Model Performance\\\\n12:30 - Mitigating and Detecting Bias in ML Models\\\\n14:39 - Explaining and Interpreting Predictions\\\\n17:09 - What-If Scenario Modelling using OpenScale\\\\n19:23 - Tracking Model Quality\\\\n20:19 - Evaluating Model and Data Drift\\\\n22:47 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1385",
    "uploadDate": "2021-06-15",
    "thumbnail_url": "https://i.ytimg.com/vi/wJsUY7IxsvU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=4aqx5P2Y38U",
    "title": "Exploratory Data Analysis with the Binance API using Python and Pandas | MLTrader EP1",
    "tags": "binance api python, binance api key, binance api tutorial, binance api python tutorial",
    "scraped_at": 1685095304.6271672,
    "genre": "Science",
    "views": "38082",
    "desc": "Want to start your own crypto analysis?\\\\n\\\\nKeen to apply a little Python or Data Science to your finances?\\\\n\\\\nWell this series is for you!\\\\n\\\\nIn this video, we\\'ll kick off the MLTrader series where we\\'re going to take a look at how to apply machine learning and data science to trading and finance. In this first episode we\\'ll take a look at how to extract and analyse real time securities and crypto data from Binance using the API and Pandas. \\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Setup the Binance API for Data Analysis\\\\n2. Pull OHLCV, Depth and Ticker data from Binance using Python\\\\n3. Perform Exploratory Data Analysis with Binance Data\\\\n4. Visualise Candlesticks using MPLFinance\\\\n\\\\nGet the code for this tutorial: https://github.com/nicknochnack/BinanceEDA\\\\n\\\\nLinks Mentioned\\\\nBinance: https://www.binance.com/en\\\\nPython Binance: https://python-binance.readthedocs.io/en/latest/\\\\nMPLFinance: https://github.com/matplotlib/mplfinance\\\\nPandas Crash Course: https://youtu.be/tRKeLrwfUgU\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:39 - What\\'s Covered\\\\n1:58 - Tutorial Start\\\\n3:20 - 1. Setup\\\\n10:48 - 2. Authenticate\\\\n11:38 - 3. Get Ticker Data from Binance\\\\n17:58 - 4. Get Market Depth\\\\n21:16 - 5. Get Historical OHLCV Data \\\\n30:44 - 6. Preprocess and Explore OHLCV using Pandas\\\\n37:41 - 7. Visualize Candlesticks using MPLFinace\\\\n42:21 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2567",
    "uploadDate": "2021-06-10",
    "thumbnail_url": "https://i.ytimg.com/vi/4aqx5P2Y38U/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Mut_u40Sqz4",
    "title": "Reinforcement Learning in 3 Hours | Full Course using Python",
    "tags": "reinforcement learning python, reinforcement learning tutorial, reinforcement learning course, reinforcement learning example, reinforcement learning pytorch, reinforcement learning game, reinforcement learning",
    "scraped_at": 1685095306.1821692,
    "genre": "Science",
    "views": "270170",
    "desc": "Want to get started with Reinforcement Learning?\\\\n\\\\nThis is the course for you!\\\\n\\\\nThis course will take you through all of the fundamentals required to get started with reinforcement learning with Python, OpenAI Gym and Stable Baselines. You\\'ll be able to build deep learning powered agents to solve a varying number of RL problems including CartPole, Breakout and CarRacing as well as learning how to build your very own environment!\\\\n\\\\nIn this video you\\'ll learn: \\\\n1. All the basics to get up and started with Reinforcement Learning\\\\n2. How to build custom environments using OpenAI Gym\\\\n3. About working on custom projects for Reinforcement Learning\\\\n\\\\nGet the code for this tutorial: https://github.com/nicknochnack/ReinforcementLearningCourse\\\\n\\\\nLinks Mentioned\\\\nStable Baselines 3: https://stable-baselines3.readthedocs.io/en/master/\\\\nOpenAI Gym: https://gym.openai.com/\\\\nPyTorch: https://pytorch.org/\\\\nAtarimania ROMs: http://www.atarimania.com/roms/Roms.rar\\\\nSwig: http://www.swig.org/Doc1.3/Windows.html\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:23 - Introduction\\\\n1:15 - Gameplan\\\\n4:24 - RL in a Nutshell\\\\n13:30 - 1. Setup Stable Baselines\\\\n21:45 - 2. Environments\\\\n30:10 - Loading OpenAI Gym Environments\\\\n40:00 - Understanding OpenAI Gym Environments\\\\n42:58 - 3. Training\\\\n51:32 - Train a Reinforcement Learning Model\\\\n1:00:00 - Saving and Reloading Environments\\\\n1:04:23 - 4. Testing and Evaluation\\\\n1:06:35 - Evaluating RL Models\\\\n1:09:34 - Testing the Agent\\\\n1:15:56 - Viewing Logs in Tensorboard\\\\n1:24:50 - Performance Tuning\\\\n1:26:31 - 5. Callbacks, Alternate Algorithms, Neural Networks\\\\n1:27:39 - Adding Training Callbacks\\\\n1:34:44 - Changing Policies\\\\n1:38:27 - Changing Algorithms\\\\n1:40:29 - 6. Projects\\\\n1:41:31 - Project 1 Atari\\\\n1:41:51 - Importing Dependencies\\\\n1:44:16 - Applying GPU Acceleration with PyTorch\\\\n1:45:11 - Testing Atari Environments\\\\n1:51:35 - Vectorizing Environments\\\\n1:56:48 - Save and Reload Atari Model\\\\n1:57:45 - Evaluate and Test Atari RL Model\\\\n2:02:16 - Updated Performance\\\\n2:06:34 - Project 2 Autonomous Driving\\\\n2:06:56 - Installing Dependencies\\\\n2:09:27 - Test CarRacing-v0 Environment\\\\n2:12:23 - Train Autonomous Driving Agent\\\\n2:17:16 - Save and Reload Self Driving model\\\\n2:18:20 - Updated Self Driving Performance\\\\n2:28:56 - Project 3 Custom Open AI Gym Environments\\\\n2:29:35 - Import Dependencies for Custom Environment\\\\n2:32:00 - Types of OpenAI Gym Spaces\\\\n2:38:47 - Building a Custom Open AI Environment\\\\n2:51:49 - Testing a Custom Environment\\\\n2:52:49 - Train a RL Model for a Custom Environment\\\\n2:56:22 - Save a Custom Environment Model\\\\n2:58:49 - 7. Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "10918",
    "uploadDate": "2021-06-06",
    "thumbnail_url": "https://i.ytimg.com/vi/Mut_u40Sqz4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=szczpgOEdXs",
    "title": "Sentiment Analysis with BERT Neural Network and Python",
    "tags": "bert deep learning, bert deep learning python, bert deep neural network, bert deep learning examples, sentiment analysis project, sentiment analysis with bert",
    "scraped_at": 1685095304.8811677,
    "genre": "Science",
    "views": "64042",
    "desc": "Want to leverage advanced NLP to calculate sentiment?\\\\n\\\\nCan\\'t be bothered building a model from scratch?\\\\n\\\\nTransformers allows you to easily leverage a pre-trained BERT neural network to do exactly that!\\\\n\\\\nIn this video we\\'ll go through how to get up and running with Hugging Face Transformers and BERT to be able to calculate sentiment. We\\'ll run the model using a single prompt but also leverage BeautifulSoup to scrape reviews from Yelp to be able to calculate sentiment on a larger scale. \\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Install Transformers\\\\n2. Perform Sentiment Scoring using BERT and Python\\\\n3. Scrape reviews from Yelp and Calculate their Sentiment\\\\n\\\\nGet the code for this tutorial: https://github.com/nicknochnack/BERTSentiment\\\\n\\\\nThanks so much to Mito for sponsoring this video! Mito is an amazing JupyterLab plugin that allows you to work with your data easily using a drag and drop interface that\\'s similar to Excel. Try it out for FREE at trymito.io! If you need a little help getting started, check out the tutorial: https://docs.trymito.io/getting-started/tutorial\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:23 - How it Works\\\\n1:48 - Tutorial Start\\\\n2:55 - Install and Import Dependencies\\\\n9:20 - Setup BERT and Transformers Neural Network\\\\n11:27 - Encode Sentences for Modelling and Calculate Sentiment\\\\n16:40 - Scrape Reviews from Yelp using BeautifulSoup\\\\n22:41 - Load Reviews into Pandas and Calculate Sentiment\\\\n29:52 - Run the Sentiment Pipeline for Multiple Reviews\\\\n31:32 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1916",
    "uploadDate": "2021-05-27",
    "thumbnail_url": "https://i.ytimg.com/vi/szczpgOEdXs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=xSElsMUqFqI",
    "title": "How to Break Into Data Science and Machine Learning and Land your DREAM JOB!",
    "tags": "data scientist job, data scientist job description, data scientist journey, break into data science, break into machinne learning, data scientist career, data scientist interview, machine learning engineer",
    "scraped_at": 1685095304.3721666,
    "genre": "Science",
    "views": "3948",
    "desc": "Want to work into Machine Learning?\\\\n\\\\nReady to become a Data Scientist but not sure how?\\\\n\\\\nI got chu fam!\\\\n\\\\nIn this video, I\\'ll show you the exact process I used to land my job at a large tech company as a Data Scientist. I\\'ll cover the 6 key steps you can follow in order to go from absolutely zero experience all the way through to landing your dream job as a Data Scientist, Data Engineer, ML Engineer or just about any role in the data industry. \\\\n\\\\nIn this video I\\'ll cover: \\\\n1. Tactics to plan your job hunt\\\\n2. How to network the right way \\\\n3. Steps to build your influence in the field\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n1:18 - Do Your Research\\\\n3:57 -  Build Your Skills and Portfolio\\\\n5:48 -  Speak to People in the Industry \\\\n8:19 - Develop Your Edge\\\\n10:19 - Cast a Wide Net and Get Experience\\\\n11:50 - Rinse and Repeat\\\\n13:12 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "833",
    "uploadDate": "2021-05-21",
    "thumbnail_url": "https://i.ytimg.com/vi/xSElsMUqFqI/maxresdefault.jpg"
  },
  {
    "link": "watch?v=i_-ud01wFhc",
    "title": "Instance Segmentation using Mask-RCNN with PixelLib and Python",
    "tags": "instance segmentation tensorflow, instance segmentation deep learning, instance segmentation tutorial, instance segmentation mask rcnn, instance segmentation python, instance segmentation github",
    "scraped_at": 1685095303.2231896,
    "genre": "Science",
    "views": "27736",
    "desc": "Mastered image classification?\\\\n\\\\nPushed the boundaries of object detection?\\\\n\\\\nReady for the next big step when it comes to computer vision?\\\\n\\\\nGet ready to sink your teeth into instance segmentation. In this video you\\'ll learn how to segment objects in real time using PixelLib. PixelLib is a flexible Python library that allows you to perform all types of segmentation. In this case you\\'ll learn how to leverage a pre-trained Mask-RCNN model which has been trained on the COCO dataset to be able to detect objects. \\\\n\\\\nIn this video you\\'ll learn: \\\\n1. How to install PixelLib for Segmentation\\\\n2. Download and load a pre-trained Mask R-CNN model\\\\n3. Capture Real Time Video using your Webcam and OpenCV\\\\n4. Apply real time instance segmentation to your OpenCV video feed\\\\n\\\\nGet the code: https://github.com/nicknochnack/PixelLibInstanceSegmentation\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1032",
    "uploadDate": "2021-05-19",
    "thumbnail_url": "https://i.ytimg.com/vi/i_"
  },
  {
    "link": "watch?v=cCmGg_Pn9K8",
    "title": "The ONE weird technique I used to learn DATA SCIENCE in 3 months",
    "tags": "learn data science fast, learn machine learning fast, data science, data scientist, how to data science, how i would learn data science, data science journey",
    "scraped_at": 1685095302.6801708,
    "genre": "Science",
    "views": "14644",
    "desc": "So about three years ago I set out to become a data scientist. I struggled learning and remembering all the stuff out there that I needed to know. I did course after course, tutorial after tutorial and nothing ever really stuck. \\\\n\\\\nUntil I learned this technique. \\\\n\\\\nUsing the strategy I managed to learn Python, Machine Learning with Scikit Learn and Deep Learning with Tensorflow. This same strategy is what I helped me land my current job as a data scientist. In fact I still use this strategy today, I\\'m using it to learn Discrete Optimization. \\\\n\\\\nYou can grab all the content shown in the video here including the memory path, the dataset and the jupyter notebook: https://github.com/nicknochnack/MemoryPath\\\\n\\\\nIf you\\'ve got any questions about how to use it or would like to lear more, just hit me up in the comments or connect with me via socials below!\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1304",
    "uploadDate": "2021-05-16",
    "thumbnail_url": "https://i.ytimg.com/vi/cCmGg_Pn9K8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=0tB6jG55mig",
    "title": "Body Segmentation with Python and Tensorflow BodyPix | Plus and AI Background Removal",
    "tags": "body segmentation, bodypix, bodypix tensorflow, bodypix segment person, bodypix tensorflow python, bodypix tensorflow lite, bodypix tensorflow js, remove background, semantic segmentation, deep learning ai",
    "scraped_at": 1685095304.720197,
    "genre": "Science",
    "views": "10168",
    "desc": "Want to strip out your background using nothing but a webcam and AI?\\\\n\\\\nDon\\xe2\\x80\\x99t have a green screen but still want a virtual background?\\\\n\\\\nYou can do it in no time using Python, OpenCV and the pre-trained BodyPix model! \\\\n\\\\nBodyPix is a pre-trained model that allows you to segment your body from nothing but an image. Now, normally it\\xe2\\x80\\x99s only available through Tensorflow.Js but the tf_bodypix library allows you to leverage it through OpenCV and Python! In this particular video we\\xe2\\x80\\x99ll take it one step further and use it to mask out the background in real time by leveraging your Webcam and OpenCV.\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Install BodyPix for Image Segmentation\\\\n2. Segment your Body in Real Time using OpenCV and your Webcam\\\\n3. Remove Backgrounds using BodyPix\\\\n4. Creating a Virtual Background in Real Time\\\\nGet the code: https://github.com/nicknochnack/BodyPixBackgroundRemoval\\\\n\\\\nA huge thanks to Data Interview Qs for sponsoring this video!\\\\nData Interview Qs allows you to prepare for your next big Data Science interview and to keep your skills sharp with real life interview questions delivered to your inbox three times a week! You\\xe2\\x80\\x99ll get questions straight to your inbox that allow you to hone your skills across a range of data science concepts around data. Sign up for free here: https://www.interviewqs.com/nr\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n0:13 - Explainer\\\\n1:55 - Tutorial Start\\\\n2:32 - Install and Import Dependencies\\\\n8:58 - Loading the BodyPix Model\\\\n11:46 - Real Time Webcam Feed with OpenCv\\\\n17:47 - Body Segmentation in Real Time\\\\n21:30 - Loading an Image for a Virtual background\\\\n26:21 - Applying a Virtual Background\\\\n33:00 - Real Time Virtual Background\\\\n34:17 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2076",
    "uploadDate": "2021-05-13",
    "thumbnail_url": "https://i.ytimg.com/vi/0tB6jG55mig/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Wh77ZGdIaZQ",
    "title": "AI Powered Iris Tracking with WebGazer.Js",
    "tags": "iris tracking, eye tracking, computer vision, ai javascript, ai java programming, machine learning javascript, machine learning applications",
    "scraped_at": 1685095305.1771674,
    "genre": "Science",
    "views": "21482",
    "desc": "Want to get started with Iris Tracking?\\\\n\\\\nInterested in human computer interaction?\\\\n\\\\nYou NEEED to check out WebGazer.Js. The library is an open course package that allows you to build intelligent applications using Iris tracking. The amazing thing about this Javascript library is that it only requires a standard webcam and Node.Js to run. \\\\n\\\\nIn this video you\\'ll learn how to get up and running with it super fast as well as being able to test out some of the pre-built demonstrations. A huge thanks to the team from Brown Human Computer Interaction for making this Open Source, it\\'s amazing!\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Install WebGazer.Js and get up and running\\\\n2. Calibrate the Iris tracking model \\\\n3. Test out the Iris tracking powered Collision Game\\\\n\\\\nLinks\\\\nWebgazer.Js: https://webgazer.cs.brown.edu/\\\\nNode.Js: https://nodejs.org/en/\\\\nGitHub Repo: https://github.com/brownhci/WebGazer\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n0:15 - Introduction\\\\n0:29 - How it works\\\\n2:02 - Accessing WebGazer.Js\\\\n3:57 - Cloning the Code from GitHub\\\\n6:15 - Starting the Demo App\\\\n7:56 - Applying Calibration\\\\n12:19 - Ball Collision Game\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "879",
    "uploadDate": "2021-05-06",
    "thumbnail_url": "https://i.ytimg.com/vi/Wh77ZGdIaZQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=0-4p_QgrdbE",
    "title": "Automatic Number Plate Recognition using Tensorflow and EasyOCR Full Course in 2 Hours | Python",
    "tags": "number plate recognition camera, number plate recognition python, number plate recognition using tensorflow, number plate recognition using python, number plate recognition system, number plate recognition using yolo, automatic number plate recognition, license plate recognition, license plate detection, license plate recognition tutorial, license plate detector, automatic number plate detection, number plate recognition",
    "scraped_at": 1685095307.559169,
    "genre": "Science",
    "views": "222739",
    "desc": "Want to be able to perform number plate recognition in real time?\\\\n\\\\nWell in this course you\\'ll learn how to do exactly that!\\\\n\\\\nIn this video, you\\'ll learn how to leverage Python Tensorflow Object Detection to be able to detect license plates using Kaggle Data. Once those plates have been detected you\\'ll then be able to apply OCR to extract the text from each and every plate using PyTorch and EachOCR. \\\\n\\\\nOn top of it all, you\\'ll be able to export your results. We\\'ll setup a saving function to output the regions of interest as well as the detected text. This could be used as part of a broader system or standalone. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Detect license plates from images and in real time from video\\\\n2. Apply a EasyOCR to license plates to extract the plate number\\\\n3. Save license plates detected for future analysis and searching\\\\n\\\\nLinks\\\\nFinal Notebook: https://github.com/nicknochnack/RealTimeAutomaticNumberPlateRecognition\\\\nBaseline Code: https://github.com/nicknochnack/TFODCourse\\\\nPyTorch: https://pytorch.org/\\\\nFull Tutorial: https://youtu.be/yqkISICHH-U\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n0:26 - Tutorial Start\\\\n1:11 - Gameplan\\\\n3:58 - PART 1 | Setup\\\\n7:13 - Cloning Baseline Code \\\\n10:42 - Creating a Virtual Environment\\\\n12:51 - Installing Dependencies\\\\n17:55 - Installing Tensorflow Object Detection\\\\n32:47 - Cloning Pre-Trained Models\\\\n34:21 - PART 2 | Data\\\\n34:44 - Cloning Images from Kaggle\\\\n35:52 - Creating a Training and Testing Partition\\\\n41:33 - PART 3 | Training\\\\n42:59 - Updating the LabelMap\\\\n44:37 -  Creating TF Records\\\\n49:30 - Updating Transfer Learning Config\\\\n51:51 - Training the Model\\\\n1:00:00 - PART 4 | Detecting Plates\\\\n1:01:00 -  Detecting Plates from an Image\\\\n1:03:45 - Detecting Plates from Video\\\\n1:05:01 - PART 5 | Applying OCR\\\\n1:06:29 - Splitting GPU\\\\n1:10:46 - Setup EasyOCR\\\\n1:13:46 - Applying Detection Thresholding\\\\n1:18:42 - Extract Image Width and Height\\\\n1:20:16 - Loop Through Detections and Apply OCR\\\\n1:25:40 - Filtering Algorithm\\\\n1:36:28 - Final OCR Function\\\\n1:42:15 - Applying ANPR in Real Time\\\\n1:45:38 - PART 6 | Saving Results\\\\n1:46:10 - Importing Dependencies\\\\n1:46:29 - Building a Save Function\\\\n1:52:06 - Saving Plates from. Video\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "6938",
    "uploadDate": "2021-05-03",
    "thumbnail_url": "https://i.ytimg.com/vi/0"
  },
  {
    "link": "watch?v=6MI0f6YjJIk",
    "title": "AI Text and Code Generation with GPT Neo and Python | GPT3 Clone",
    "tags": "gpt 3 tutorial, gpt 3, gpt 3 demo, gpt 3 alternative, gpt neo demo, gpt neo tutorial, gpt neo huggingface, gpt neo example, gpt neo api, gpt neo parameters",
    "scraped_at": 1685095305.1031964,
    "genre": "Science",
    "views": "64312",
    "desc": "Want to get your hands on GPT3 but cbbd waiting for access?\\\\n\\\\nNeed to kick off some AI powered text gen ASAP?\\\\n\\\\nWant to write a love song using AI?\\\\n\\\\nI got you!\\\\n\\\\nIn this video, you\\'ll learn how to leverage GPT Neo, a GPT3 architecture clone, which has been trained on 2.7 BILLION parameters to generate text and code. You\\'ll learn how to get setup and leverage the model for a whole range of use cases in just 4 lines of code!\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Install GPT Neo a 2.7B Parameter Language Model\\\\n2. Generate Python Code using GPT Neo \\\\n3. Generate text using GPT Neo and Hugging Face Transformers\\\\n\\\\nGET THE CODE FROM THE VIDEO: https://github.com/nicknochnack/GPTNeo\\\\n\\\\nCode from the previous tutorial: \\\\nhttps://github.com/nicknochnack/MediaPipeHandPose\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n1:15 - How it Works\\\\n2:45 - Install PyTorch and Transformers\\\\n5:08 - Setup GPT Neo Pipeline\\\\n8:08 - Generate Text from a Prompt\\\\n14:46 - Export Text to File\\\\n17:48 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1085",
    "uploadDate": "2021-04-28",
    "thumbnail_url": "https://i.ytimg.com/vi/6MI0f6YjJIk/maxresdefault.jpg"
  },
  {
    "link": "watch?v=EgjwKM3KzGU",
    "title": "AI Hand Pose Estimation with MediaPipe | Detect Left and Right Hand + Calculate Angles",
    "tags": "hand pose estimation, hand pose estimation python, mediapipe tutorial, mediapipe sign language, mediapipe python tutorial",
    "scraped_at": 1685095304.8031669,
    "genre": "Science",
    "views": "26908",
    "desc": "Want to do more with MediaPipe hand pose?\\\\n\\\\nWell you can!\\\\n\\\\nIn this video you\\'ll learn how to wield OpenCV and Python to get the most out of the Hand Pose estimation model from MediaPipe. You\\'ll be able to leverage the in built model to detect whether a hand is a left hand or a right hand as well as leveraging NumPy to calculate joint angles for kinematic analysis.\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Detect Left and Right hands from Hand Poses usingn Mediapipe\\\\n2. Calculating Angles for Hand Joints Using Numpy\\\\n3. Rendering Estimated Detections using OpenCV\\\\n\\\\nGET THE CODE FROM THE VIDEO: https://github.com/nicknochnack/AdvancedHandPoseWithMediaPipe\\\\n\\\\nCode from the previous tutorial: \\\\nhttps://github.com/nicknochnack/MediaPipeHandPose\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n0:12: - Introduction\\\\n0:33 - How it Works\\\\n1:51 - Tutorial Start\\\\n2:40 - Accessing Baseline Code\\\\n3:25 - Testing Real Time Detections\\\\n4:34 - Left and Right Hand Detection\\\\n6:19 - Extract Landmarks for a Specific Join\\\\n20:11 - Rendering Left and Right Hands using OpenCV\\\\n21:40 - Calculating Hand Kinematics\\\\n34:03 - Estimates Angles for an Image\\\\n36:47 - Estimating Angles in Real Time\\\\n37:40 - Calculating Different Angles\\\\n41:54 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2533",
    "uploadDate": "2021-04-24",
    "thumbnail_url": "https://i.ytimg.com/vi/EgjwKM3KzGU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=vQZ4IvB07ec",
    "title": "AI Hand Pose Estimation with MediaPipe and Python",
    "tags": "mediapipe tutorial, mediapipe hand tracking, mediapipe python tutorial, hand pose estimation, hand pose estimation python",
    "scraped_at": 1685095303.1442902,
    "genre": "Science",
    "views": "45668",
    "desc": "Short and simple hand detection and tracking using MediaPipe. I wanted to write more for this description but I\\'m hella tired. I\\'m not actually sure anyone actually reads these anyway. Anyway, here\\'s some keywords for the algorithm; AI, Machine Learning, Synergy, Efficiency, Python, Super Fast Amazing Biggest Tutorial ever. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Set up MediaPipe for Python \\\\n2. Estimate hand poses using MediaPipe Hands\\\\n3. Output images with detections using OpenCV\\\\n\\\\nGET THE CODE FROM THE VIDEO: https://github.com/nicknochnack/MediaPipeHandPose\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n0:11 - Introduction\\\\n0:27 - How it Works\\\\n1:53 - Tutorial Start\\\\n2:48 - Install and Import Dependencies\\\\n8:07 - Make Detections in Real Time\\\\n8:25 - Accessing a Real Time Webcam Feed Using OpenCV\\\\n12:34 - Applying MediaPipe Hand Pose\\\\n18:49 - Interpreting Hand Pose Results\\\\n19:54 - Rendering Using OpenCV\\\\n24:11 - Applying Styling to MediaPipe Detections\\\\n28:56 - Horizontally Flipping Images using OpenCV\\\\n30:11 - Save Images using OpenCV\\\\n35:41 - Ending\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2162",
    "uploadDate": "2021-04-21",
    "thumbnail_url": "https://i.ytimg.com/vi/vQZ4IvB07ec/maxresdefault.jpg"
  },
  {
    "link": "watch?v=We1uB79Ci-w",
    "title": "AI Body Language Decoder with MediaPipe and Python in 90 Minutes",
    "tags": "ai body language analysis, mediapipe tutorial, mediapipe python tutorial, mediapipe face mesh, mediapipe pose estimation, mediapipe pose detection, mediapipe pose python, pose classification",
    "scraped_at": 1685095306.7991674,
    "genre": "Science",
    "views": "54562",
    "desc": "Want to start decoding body language?\\\\n\\\\nNeed to see who\\xe2\\x80\\x99s really saying what in that interview?\\\\n\\\\nTrying to work out what\\xe2\\x80\\x99s the sign for Wakanda Forever? \\xf0\\x9f\\xa4\\xa3\\\\n\\\\nYou\\xe2\\x80\\x99ll learn how to do exactly that in this Python AI tutorial. In this video you\\xe2\\x80\\x99ll learn how to leverage Mediapipe to estimate both facial and body landmarks. With that data you\\xe2\\x80\\x99ll then be able to build custom pose classification models that allow you to decode what a person might be saying with their body language with fine grain accuracy. Best of all, you can customise this to suit your own needs. If you wanted to extend this to perform drowsiness detection or extended pose classification with hand models you could! \\\\n\\\\nYou\\xe2\\x80\\x99ll learn how to:\\\\n1. Set up MediaPipe for Python \\\\n2. Estimate Face and Body poses using your Webcam and OpenCV\\\\n3. Collect and process Joint Coordinates using Pandas\\\\n4. Train a custom Pose Classification model using Scikit-Learn\\\\n5. Decode Body Language in Real time\\\\n\\\\nGET THE CODE FROM THE VIDEO: https://github.com/nicknochnack/Body-Language-Decoder\\\\n\\\\nMediapipe Holistic Tutorial: https://youtu.be/pG4sUNDOZFg\\\\nMediapipe Holistic Baseline Code: https://github.com/nicknochnack/Full-Body-Estimation-using-Media-Pipe-Holistic\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n0:22 - Introduction\\\\n1:05 - How it Works\\\\n3:15 - Tutorial Start\\\\n5:09 - Installing Mediapipe and Dependencies\\\\n19:24 - Capture Landmarks using OpenCV and CSV\\\\n41:48 - Load Pose and Face Data using Pandas\\\\n49:08 - Train Sciki-Learn Pose Classification Model\\\\n57:04 - Evaluate Classification Model and Pickle\\\\n1:05:28 - Making Detections using the Model\\\\n1:19:09 - Decoded Body Language Demo\\\\n1:24:41 - Displaying Probabilities\\\\n1:26:00 - Adding in New Poses\\\\n1:32:16 - Wrap Up\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "5560",
    "uploadDate": "2021-04-19",
    "thumbnail_url": "https://i.ytimg.com/vi/We1uB79Ci"
  },
  {
    "link": "watch?v=06TE_U21FK4",
    "title": "AI Pose Estimation with Python and MediaPipe | Plus AI Gym Tracker Project",
    "tags": "mediapipe, mediapipe python tutorial, mediapipe python api, mediapipe python pose, pose estimation, pose estimation python, pose estimation deep learning, pose estimation computer vision, pose estimation using opencv",
    "scraped_at": 1685095307.7911665,
    "genre": "Science",
    "views": "123808",
    "desc": "Tired of stacking reps at the gym?\\\\n\\\\nBeen lifting heavy and just can\\'t seem to lift that pen? (actually lol\\'d)\\\\n\\\\nWell, have I got the app for you!\\\\n\\\\nIn this video you\\'ll learn how to build your very own AI powered gym tracker using AI Powered Pose estimation. You\\'ll leverage MediaPipe and Python to detect different posts from a webcam feed. Then render the results to the screen using OpenCV. As part of it you\\'ll also learn how to extract joint coordinates and calculate joint angles! \\\\n\\\\nYou\\xe2\\x80\\x99ll learn how to:\\\\n1. Set up MediaPipe for Python \\\\n2. Estimate poses using your Webcam and OpenCV\\\\n3. Extract join coordinates from the detected pose\\\\n4. Calculate angles between joints using Numpy and Trigonometry\\\\n5. Building an AI Powered Gym Tracker to count your reps\\\\n\\\\nGET THE CODE FROM THE VIDEO:\\\\nhttps://github.com/nicknochnack/MediaPipePoseEstimation\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n0:28 - Content\\\\n1:33 - How it Works\\\\n2:09 - Install and Setup\\\\n10:42 - Estimate Poses with Mediapipe and OpenCV\\\\n25:04 - Extract Joint Coordinates\\\\n32:47 - Calculate Joint Angles\\\\n51:18 - AI Powered Gym Tracker\\\\n1:03:49 - Ending\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "3857",
    "uploadDate": "2021-04-14",
    "thumbnail_url": "https://i.ytimg.com/vi/06TE_U21FK4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=yqkISICHH-U",
    "title": "Tensorflow Object Detection in 5 Hours with Python | Full Course with 3 Projects",
    "tags": "object detection, tensorflow object detection with python, tensorflow object detection, object detection tensorflow, object detection using tensorflow, object detection raspberry pi, object detection tutorial, object detection python, object detection tensorflow 2.0, tensorflow object detection api, tensorflow object detection tutorial, tensorflow object detection raspberry pi, tensorflow object detection tutorial for beginners, tensorflow object detection api google colab",
    "scraped_at": 1685095306.4781666,
    "genre": "Science",
    "views": "1059863",
    "desc": "Want to get up to speed on AI powered Object Detection but not sure where to start?\\\\n\\\\nWant to start building your own deep learning Object Detection models?\\\\n\\\\nNeed some help detecting stuff for your course, startup or business?\\\\n\\\\nThis is the course you need!\\\\n\\\\nIn this course, you\\xe2\\x80\\x99ll learn everything you need to know to go from beginner to practitioner when it comes to deep learning object detection with Tensorflow. This course mainly revolves around Python but there\\xe2\\x80\\x99s a little Javascript thrown in as well when it comes to building a web app in Project 2. But don\\xe2\\x80\\x99t fret we\\xe2\\x80\\x99ll take it step by step so you can take your time and work through it. All the code it made available through GitHub, links below.  \\\\n\\\\nAs part of this course you\\xe2\\x80\\x99ll build four different object detection models:\\\\nA. Gesture Detection - this is the first project where you\\xe2\\x80\\x99ll be able to build a model that detects four different gestures\\\\nB. Microscope Based Defect Detection - here we\\xe2\\x80\\x99ll leverage a USB microscope to detect defects in LEDs and PCBs using TFOD and Python\\\\nC. Web Direction Detection - in this model you\\xe2\\x80\\x99ll learn how to detect hand directions for integration in a React Js Web App with Tensorflow Js\\\\nD. Face Sentiment Detection - here you\\xe2\\x80\\x99ll learn how to estimate facial sentiment using Tensorflow Object Detection on a Raspberry Pi with TFLite\\\\n\\\\n\\\\nYou\\xe2\\x80\\x99ll learn how to:\\\\n1. Install Tensorflow Object Detection on a Local Machine and on Colab\\\\n2. Collect and Label images for Object Detection using LabelImg\\\\n3. Train Deep Learning powered Object Detection Models using Python and TFOD\\\\n4. Detect objects in real time using a webcam and using Images\\\\n5. Tune Object Detection models to improve Precision and Recall\\\\n6. Export your model to Tensorflow JS for integration in React JS web apps\\\\n7. Export your model to TFLite for use on a Raspberry Pi\\\\n\\\\nGet the code\\\\nTensorflow Object Detection Python Course Code: https://github.com/nicknochnack/TFODCourse\\\\nTensorflow Object Detection React App: https://github.com/nicknochnack/TFODApp\\\\nTensorflow Object Detection for Raspberry Pi: https://github.com/nicknochnack/TFODRPi\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n12:13 - SECTION 1: Installation and Setup\\\\n26:34 - Cloning the Baseline Code from GitHub\\\\n27:59 - Creating a Virtual Environment\\\\n39:57 - SECTION 2: Collecting Images and Labelling\\\\n44:48 - Collecting  Images Using Your Webcam\\\\n1:04:11 - Labelling Images for Object Detection using LabelImg\\\\n1:29:08 - SECTION 3: Training Tensorflow Object Detection Models\\\\n1:34:04 - Tensorflow Model Zoo\\\\n1:39:04 - Installing Tensorflow Object Detection for Python\\\\n1:56:41 - Installing CUDA and cuDNN\\\\n2:06:42 - Using Tensorflow Model Zoo models \\\\n2:09:21 - Creating and Updating a Label Map\\\\n2:10:09 - Creating TF Records\\\\n2:17:23 - Training Tensorflow Object Detection Models for Python\\\\n2:27:48 - Evaluating OD Models (Precision and Recall)\\\\n2:29:08 - Evaluating OD Models using Tensorboard\\\\n2:34:07 - SECTION 4: Detecting Objects from Images and Webcams\\\\n2:34:52 - Detecting Objects in Images\\\\n2:38:57 - Detecting Objects in Real Time using a Webcam\\\\n2:41:56 - SECTION 5: Freezing TFOD and Converting to TFJS and TFLite\\\\n2:42:25 - Freezing the Tensorflow Graph\\\\n2:44:17 - Converting Object Detection Models to Tensorflow Js\\\\n2:45:27 - Converting Object Detection Models to TFLite\\\\n2:47:45 - SECTION 6: Performance Tuning to Improve Precision and Recall\\\\n3:12:34 - SECTION 7: Training Object Detection Models on Colab\\\\n3:24:05 - SECTION 8: Object Detection Projects with Python\\\\n3:25:25 - Project 1: Detecting Object Defects with a Microscope\\\\n3:57:34 - Project 2: Web Direction Detection using Tensorflow JS \\\\n4:47:40 - Project 3: Sentiment Detection on a Raspberry Pi Using TFLite\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://bit.ly/324Epgo\\\\nFacebook: https://bit.ly/3mB1sZD\\\\nGitHub: https://bit.ly/3mDJllD\\\\nPatreon: https://bit.ly/2OCn3UW\\\\nJoin the Discussion on Discord: https://bit.ly/3dQiZsV\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "19541",
    "uploadDate": "2021-04-09",
    "thumbnail_url": "https://i.ytimg.com/vi/yqkISICHH"
  },
  {
    "link": "watch?v=pG4sUNDOZFg",
    "title": "AI Face Body and Hand Pose Detection with Python and Mediapipe",
    "tags": "python mediapipe tutorial, mediapipe tutorial, face detection python, pose detection python, hand pose detection, face detection, pose detection, facial landmark detection, facial landmark recognition, pose estimation",
    "scraped_at": 1685095305.030166,
    "genre": "Science",
    "views": "104311",
    "desc": "Want to start building body pose based apps?\\\\n\\\\nMaybe want to control your screen using nothing but gestures!\\\\n\\\\nWell, Mediapipe and Python are the answer! In fact, in this video you\\'ll learn the basics for getting started with Body pose detection, facial landmark estimation and hand pose detection using a single Mediapipe library and your webcam.\\\\n\\\\nBehind the scenes, Mediapipe Holistic, the model shown in this video, uses deep learning models to be able to accurately detect keypoints. Using this model you can begin to prototype a whole bunch of different use cases like touchless gesture control, human sentiment analysis and could even build your own exercise counter!\\\\n\\\\nIn this video, you\\'ll learn how to:\\\\n1. Install Mediapipe and setup Mediapipe Holistic for Python\\\\n2. Access a real time video feed from your webcam using OpenCV\\\\n3. Detect and visualise facial landmarks, body poses and hand poses \\\\n\\\\nGet the Code: https://github.com/nicknochnack/Full-Body-Estimation-using-Media-Pipe-Holistic\\\\n\\\\nChapters:\\\\n0:00\\xe2\\x80\\x8b - Start\\\\n2:49 - Installing Mediapipe and OpenCV\\\\n8:23 - Real Time Video Feed from Your Webcam using OpenCV\\\\n13:05 - Detecting Landmarks for Face, Body and Hand Poses\\\\n30:48 - Changing Landmark Colors and Styling\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\xe2\\x80\\x8b\\\\nFacebook: https://www.facebook.com/nickrenotte/\\xe2\\x80\\x8b\\\\nGitHub: https://github.com/nicknochnack\\xe2\\x80\\x8b\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\xe2\\x80\\x8b\\\\nJoin the Discussion on Discord: https://discord.gg/mtTTwYkB29\\xe2\\x80\\x8b\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2574",
    "uploadDate": "2021-03-28",
    "thumbnail_url": "https://i.ytimg.com/vi/pG4sUNDOZFg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=YCyuZM454_I",
    "title": "Live Speech to Text with Watson Speech to Text and Python | FREE Speech to Text API",
    "tags": "live speech to text, python speech recognition, python speech2text, live speech to, live speech to text python, live speech to text api",
    "scraped_at": 1685095303.9111927,
    "genre": "Science",
    "views": "38361",
    "desc": "Want to skip out on copying down lecture notes?\\\\n\\\\nMaybe you want a live transcript from a meeting?\\\\n\\\\nTo do that, you can use live speech to text transcription. In this video you\\'ll learn how to do exactly that. \\\\n\\\\nWe\\'ll use the FREE tier of the Watson Speech to Text service to transcribe audio from your microphone live. You\\'ll be able to see the transcription as it\\'s being spoke. And better yet, you can leverage the pre-written code to do it!\\\\n\\\\nIn this video, you\\'ll learn how to:\\\\n1. Setup Watson Speech to Text for FREE\\\\n2. Access the Live Speech to Text Code\\\\n3. Perform live Speech to Text Transcription using your Microphone\\\\n\\\\nGet the Code: https://github.com/nicknochnack/RealTimeSpeechToText\\\\n\\\\nChapters:\\\\n0:00\\xe2\\x80\\x8b - Start\\\\n2:38 - Setting up Watson Speech to Text \\\\n6:22 - Accessing the Streaming Speech to Text code from GitHub\\\\n8:34 - Installing dependencies\\\\n12:22 - Setting up Configuration \\\\n16:34 - Running Live Speech to Text\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\xe2\\x80\\x8b\\\\nFacebook: https://www.facebook.com/nickrenotte/\\xe2\\x80\\x8b\\\\nGitHub: https://github.com/nicknochnack\\xe2\\x80\\x8b\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\xe2\\x80\\x8b\\\\nJoin the Discussion on Discord: https://discord.gg/mtTTwYkB29\\xe2\\x80\\x8b\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1236",
    "uploadDate": "2021-03-25",
    "thumbnail_url": "https://i.ytimg.com/vi/YCyuZM454_I/maxresdefault.jpg"
  },
  {
    "link": "watch?v=YbKnsJQKazA",
    "title": "Automate Stocks and Crypto Research with Python and Deep Learning | Full Python Project",
    "tags": "python automation, python automation projects, python projects tutorial, python projects step by step, python projects for intermediate, stock research python, python stock analysis, stock sentiment analysis using news headlines, stock sentiment analysis using news headlines kaggle, stock sentiment analysis kaggle, stock sentiment analysis python, stock sentiment analysis, stock sentiment scraper, stock sentiment ai, stock market sentiment analysis python, stock market sentiment",
    "scraped_at": 1685095309.1521983,
    "genre": "Science",
    "views": "16117",
    "desc": "Tired of trying to monitor the stock or crypto markets?\\\\n\\\\nNot sure where to turn to get your new trading ideas?\\\\n\\\\nYahoo Finance news coming out of your ears?\\\\n\\\\nWant a new Python project to try?\\\\n\\\\nI hear you. \\\\n\\\\nThere\\xe2\\x80\\x99s so much news and research out there on financial markets that it can be hard to keep up. But what if you could automate some of that research using Python. \\\\n\\\\nThat\\xe2\\x80\\x99s exactly what you\\xe2\\x80\\x99ll learn how to do in this video. You\\xe2\\x80\\x99ll learn how to use Python to scrape finance news from the web, natural language processing via Hugging Face to automatically summarise that news and finally calculate sentiment related to each asset. The awesome thing is that you can do this for almost any financial asset as well. In the video we\\xe2\\x80\\x99ll run through the pipeline using Tesla, Bitcoin and Gamestop but you could plug in virtually any stock or crypto code and have this research done for you. In fact, at the end we\\xe2\\x80\\x99ll update the pipeline in two lines and run the same analysis for Ethereum as well. \\\\n\\\\nIn this video, you\\'ll learn how to:\\\\n1. Scrape stock and crypto news from the web using Python and BeautifulSoup\\\\n2. Automatically summarize financial news with Deep Learning using a fine-tuned Hugging Face Pegasus Transformers model\\\\n3. Calculate sentiment for Bitcoin, Ethereum, Tesla and Gamstop using a pre-trained Transformers deep learning pipeline\\\\nGet the Code: https://github.com/nicknochnack/Stock-and-Crypto-News-ScrapingSummarizationSentiment\\\\n\\\\nChapters:\\\\n0:00\\xe2\\x80\\x8b - Start\\\\n0:16 - Explainer\\\\n5:07 - Install and Import Baseline Dependencies\\\\n8:12 - Setup Summarization Model\\\\n11:29 - Auto Summarize a Single Article\\\\n12:39 - Scrape a Single Article from Yahoo Finance\\\\n16:49 - Cleaning Scraped Data using Text Processing\\\\n19:53 - Summarize a Single Article using Hugging Face Transformers\\\\n26:19- Building a News and Sentiment Pipeline for TSLA, BTC and GME\\\\n28:18 - Search for Stock News URLs using Google and Yahoo Finance\\\\n39:14 - Process and strip out unwanted URLs\\\\n49:17 - Scrape Cleaned Financial News Articles\\\\n56:17 - Summarize the News Pipeline\\\\n1:05:19 - Calculate Sentiment\\\\n1:13:16 - Export Results to CSV\\\\n1:23:18 - Running the Pipeline as a Script\\\\n1:24:37 - Running the Pipeline for Different Stocks and Cryptocurrencies\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\xe2\\x80\\x8b\\\\nFacebook: https://www.facebook.com/nickrenotte/\\xe2\\x80\\x8b\\\\nGitHub: https://github.com/nicknochnack\\xe2\\x80\\x8b\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\xe2\\x80\\x8b\\\\nJoin the Discussion on Discord: https://discord.gg/mtTTwYkB29\\xe2\\x80\\x8b\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "5422",
    "uploadDate": "2021-03-21",
    "thumbnail_url": "https://i.ytimg.com/vi/YbKnsJQKazA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=q-Uw9gC3D4o",
    "title": "Custom Indicators for Reinforcement Learning Trading Tutorial | $GME Python Trading PT2",
    "tags": "reinforcement learning, algorithmic trading, reinforcement learning trading bot, reinforcement learning trading python, reinforcement learning trading algorithm, reinforcement learning trading environment, reinforcement learning trading tutorial, deep reinforcement learning trading, deep reinforcement learning for algorithmic trading",
    "scraped_at": 1685095302.146167,
    "genre": "Science",
    "views": "30527",
    "desc": "So you watched the first tutorial....\\\\n\\\\nPerformance for our GME RL Bot was...meh\\\\n\\\\nYou\\'re probably thinking, \\\\\"",
    "lengthSeconds": "1735",
    "uploadDate": "2021-03-17",
    "thumbnail_url": "https://i.ytimg.com/vi/q"
  },
  {
    "link": "watch?v=D9sU1hLT0QY",
    "title": "Reinforcement Learning for Trading Tutorial | $GME RL Python Trading",
    "tags": "reinforcement learning, algorithmic trading, reinforcement learning trading bot, reinforcement learning trading python, reinforcement learning trading algorithm, reinforcement learning trading environment, reinforcement learning trading tutorial, deep reinforcement learning trading, deep reinforcement learning for algorithmic trading",
    "scraped_at": 1685095308.521167,
    "genre": "Science",
    "views": "90291",
    "desc": "Heard about RL?\\\\n\\\\nWhat about $GME?\\\\n\\\\nWell, they\\xe2\\x80\\x99re both in the news a helluva lot right now. \\\\n\\\\nSo why not bring them together. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to build the beginnings of a Python Trading Bot using Reinforcement Learning. And better yet you\\xe2\\x80\\x99ll be able to do it by bringing in your own securities, in this case you\\xe2\\x80\\x99ll be working with Gamestop stock prices from MarketWatch. \\\\n\\\\nThe video doesn\\xe2\\x80\\x99t go through advanced strategies but gives you an idea of what\\xe2\\x80\\x99s involved to begin to leverage RL in a Finance/Trading environment!\\\\n\\\\nIn this video, you\\'ll learn :\\\\n1. Working with the OpenAI Gym gym-Anytrading for Reinforcement Learning Trading\\\\n2. Training a Trading Bot with Python Reinforcement Learning using Stable Baselines\\\\n3. Loading in GME Trading data for training a custom RL Trading Bot\\\\n\\\\nGet the code: https://github.com/nicknochnack/Reinforcement-Learning-for-Trading\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n3:12 - Installing Gym-Anytrading and Dependencies\\\\n5:06 - Importing Dependencies\\\\n9:09 - Loading Gamestop Marketwatch data using Pandas\\\\n13:51 - Pushing Custom Data into the Gym-Anytrading Environment\\\\n18:11 - Testing the Trading Environment\\\\n24:18 - Training the Reinforcement Learning Agent\\\\n31:55 - Evaluating Model Performance\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\\\nJoin the Discussion on Discord: https://discord.gg/mtTTwYkB29\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2287",
    "uploadDate": "2021-03-15",
    "thumbnail_url": "https://i.ytimg.com/vi/D9sU1hLT0QY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=nRHjymV2PX8",
    "title": "Python Reinforcement Learning Tutorial for Beginners in 25 Minutes",
    "tags": "reinforcement learning, python reinforcement learning, python reinforcement learning tutorial, reinforcement learning tutorial, reinforcement learning example, reinforcement learning course",
    "scraped_at": 1685095308.597168,
    "genre": "Science",
    "views": "39227",
    "desc": "Want to break into Reinforcement Learning with Python?\\\\n\\\\nJust not too sure where or how to start?\\\\n\\\\nWell in this video you\\xe2\\x80\\x99ll learn the basics of creating an OpenAI gym environment in Python and training a reinforcement learning algorithm to solve the Lunar Lander problem. You\\xe2\\x80\\x99ll be able to leverage the stable_baselines algorithms to quickly and effectively train a deep reinforcement learning model in Python, the same pattern can be used over and again to train and solve multiple reinforcement learning problems.\\\\n\\\\nIn this video, you\\'ll learn : \\\\n1. Installing Stable Baselines for Reinforcement Learning with Python\\\\n2. Training a Reinforcement Learning model using the ACER\\xc2\\xa0Algorithm\\\\n3. Running and Evaluating a Stable Baselines RL Model on LunarLander-v2\\\\n\\\\nGet the code: https://github.com/nicknochnack/StableBaselinesRL\\\\n\\\\nReinforcement Learning Crash Course: https://youtu.be/cO5g5qLrLSo\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n1:55 - Reinforcement Learning Flow\\\\n4:09 - Installing Python Dependencies\\\\n6:10 - Importing RL Dependencies including stable_baselines\\\\n9:11 - Testing the LunarLander-v2 Environment\\\\n11:47 - Training an ACER Reinforcement Learning Model\\\\n17:52 - Evaluating the Model\\\\n20:30 - Saving and Reloading RL Model Weights\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\\\nJoin the Discussion on Discord: https://discord.gg/mtTTwYkB29\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1540",
    "uploadDate": "2021-03-10",
    "thumbnail_url": "https://i.ytimg.com/vi/nRHjymV2PX8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=oLpBGtY-_sI",
    "title": "How to Learn DATA SCIENCE Ridiculously FAST",
    "tags": "how to learn data science for free, how to learn data science in 2021, how to learn data science smartly, how to learn data science from scratch, how to learn data science on your own, how to learn data science with python, how to learn data science fast",
    "scraped_at": 1685095311.609167,
    "genre": "Science",
    "views": "43198",
    "desc": "Want to learn data science?\\\\n\\\\nBut not too sure where to start?\\\\n\\\\nI hear you\\\\n\\\\nWhen I first started on my journey to becoming a data scientist it was an absolute nightmare. There was so much conflicting information out there. \\\\n\\\\nLearn Python.\\\\nNo Learn R.\\\\nLearn Deep Learning. \\\\nNo focus on regression. \\\\n\\\\nThe jargon was hard enough, let alone having to try to navigate competing courses and tasks. Well for this reason I decided to share how I went about learning data science. This is the exact same process I used to go from being an accountant to becoming a data scientist at a large scale tech company. \\\\n\\\\nI go through all of the core concepts you need to get your head around in order to learn Data Science FAST. I focus only on the stuff that\\xe2\\x80\\x99s most important, to help keep you on track!\\\\n\\\\nIn this video, you\\'ll learn how to: \\\\n1. The 8 key steps to focus on when learning data science\\\\n2. The main programming language you should learn for data science...hint its Python\\\\n3. How to improving your chances of landing a job as a data scientist\\\\n\\\\nYou\\xe2\\x80\\x99ll also get access to a cheat sheet summary of everything shown in the video, which you can access here: https://github.com/nicknochnack/DataScienceCheatsheet\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n0:53 - Learn to Code in Python\\\\n1:56 - Identifying Data Science Tasks\\\\n3:15 - Understanding Different Types of Data\\\\n5:13 - Analyzing and Visualizaing Data\\\\n6:44 - Preprocessing and Feature Engineering\\\\n7:39 - Modelling + Algorithms and Evaluation\\\\n10:24 - Deployment and Integration\\\\n11:37 - Domain Expertise and Soft Skills\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\\\nJoin the Discussion on Discord: https://discord.gg/mtTTwYkB29\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "847",
    "uploadDate": "2021-03-07",
    "thumbnail_url": "https://i.ytimg.com/vi/oLpBGtY"
  },
  {
    "link": "watch?v=-HbCA0WGbBg",
    "title": "Calculating Tensorflow Object Detection Metrics with Python | Mean Average  Precision (mAP) & Recall",
    "tags": "python object detection, tensorflow object detection, mean average precision, average recall, object detection tensorflow, object detection",
    "scraped_at": 1685095311.5331666,
    "genre": "Science",
    "views": "22902",
    "desc": "Finished building your object detection model?\\\\n\\\\nWant to see how it stacks up against benchmarks?\\\\n\\\\nNeed to calculate precision and recall for your reporting?\\\\n\\\\nI got you!\\\\n\\\\nIn this video you\\'ll learn how to calculate both training and evaluation metrics for object detection models built using the Tensorflow Object Detection API with Python. You\\'ll learn how to evaluate your Python Object Detection model and calculate mean average precision (mAP) and average recall.  \\\\n\\\\nIn this video, you\\'ll learn how to: \\\\n1. Viewing Training Results and Loss inside of Tensorboard\\\\n2. Evaluating the Performance of Tensorflow Object Detection Models \\\\n3. Calculating Mean Average Precision (mAP) and Average Recall (AP) for Object Detection models \\\\n4. Viewing mAP and AR for Evaluation Data using Tensorboard\\\\n\\\\nGet the Tutorial Code: https://github.com/nicknochnack/TensorflowObjectDetectionMetrics\\\\n\\\\nReal Time Object Detection Code: https://github.com/nicknochnack/RealTimeObjectDetection\\\\n\\\\nFull Stack Object Detection Playlist: https://www.youtube.com/playlist?list=PLgNJO2hghbmhUeJuv7PyVYgzhlgt2TcSr\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n3:19 - Calculating Training Loss and Metrics\\\\n6:14 - Coding the Evaluation Script\\\\n9:08 - Calculating Mean Average Precision (mAP) and Average Recall (AP)\\\\n12:21 - Viewing mAP and AP in Tensorboard\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\\\nJoin the Discussion on Discord: https://discord.gg/mtTTwYkB29\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "899",
    "uploadDate": "2021-03-03",
    "thumbnail_url": "https://i.ytimg.com/vi/"
  },
  {
    "link": "watch?v=aJQAeMswAvg",
    "title": "5 FREE Machine Learning and Data Science Datasets for Your Next Experiment",
    "tags": "dataset for data science project, dataset for machine learning, machine learning dataset, ml dataset, dataset python",
    "scraped_at": 1685095309.227169,
    "genre": "Science",
    "views": "1834",
    "desc": "Finding data for a data science project can be hard...\\\\n\\\\nWHAT?!\\\\n\\\\nThere\\'s so much FREE and readily available data for data science and machine learning experimentation out there...\\\\n\\\\nyou just need to know where to look!\\\\n\\\\nIn this video we\\'ll go through 5 FREE and Easy To Access datasources that you can use for your next data science or machine learning project. These data sources have tens of thousands of different datasets that can be used in any language whether it be Python, Javascript, C++, Swift or Go. You name it, start here and you won\\'t be disappointed. \\\\n\\\\nDatasets\\\\n1. University Datasets\\\\nUCI ML Repository:  https://archive.ics.uci.edu/ml/index.php\\\\nStanford Medical Imaging Datasets: https://aimi.stanford.edu/research/public-datasets\\\\nStanford Large Network Datasets: https://snap.stanford.edu/data/ \\\\nKITTI: http://www.cvlibs.net/datasets/kitti/\\\\n\\\\n2. Kaggle\\\\nKaggle Datasets: https://www.kaggle.com/datasets \\\\nKaggle Twitter Customer Support Dataset: https://www.kaggle.com/thoughtvector/customer-support-on-twitter\\\\n\\\\n3. Webcam or Phone Image Collection Code\\\\nhttps://github.com/nicknochnack/RealTimeSignLanguageDetectionwithTFJS/blob/main/Image%20Collection.ipynb\\\\n\\\\n4. Web Scraping Code (Section 2) \\\\nhttps://github.com/nicknochnack/Longform-Summarization-with-Hugging-Face/blob/main/LongSummarization.ipynb\\\\n\\\\n5. Open Source and Company Datasets\\\\nTensorflow Datasets: https://www.tensorflow.org/datasets\\\\nTorchVision Datasets: https://pytorch.org/vision/0.8/datasets.html \\\\nGoogle Dataset Search: https://datasetsearch.research.google.com/\\\\nIBM Data Asset Exchange: https://developer.ibm.com/exchanges/data/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\\\nJoin the Discussion on Discord: https://discord.gg/mtTTwYkB29\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "262",
    "uploadDate": "2021-02-24",
    "thumbnail_url": "https://i.ytimg.com/vi/aJQAeMswAvg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=cHymMt1SQn8",
    "title": "Generate Blog Posts with GPT2 & Hugging Face Transformers | AI Text Generation GPT2-Large",
    "tags": "gpt",
    "scraped_at": 1685095309.310168,
    "genre": "Science",
    "views": "25943",
    "desc": "Writing blog posts and emails can be tough at the best of times.\\\\n\\\\nTBH, some days just writing anything can be a struggle\\\\n\\\\nI mean, right now, I\\'m struggling to write this description \\xf0\\x9f\\x98\\x85 \\\\n\\\\nThere\\'s got to be a better way right? \\\\n\\\\nWell, there is. Using the amazing AI power of GPT2 and Python you can generate your own blog posts using a technique called Text Generation. This can be extended out to a whole heap of different use cases, it could be used to write emails, poems, code. You name it, you could probably do it. \\\\n\\\\nIn this case, we\\'re focused on blog posts though. You\\'ll be able to pass through a simple sentence and have a whole chunk of text output that you can then use on your blog!\\\\n\\\\nIn this video, you\\'ll learn how to: \\\\n1. Setting up Hugging Face Transformers to use GPT2-Large \\\\n2. Loading the GPT2 Model and Tokenizer\\\\n3. Encoding text into token format\\\\n4. Generating text using the GPT2 Model \\\\n5. Decoding output to generate blog posts\\\\n\\\\nGet the code: https://github.com/nicknochnack/Generating-Blog-Posts-with-GPT-2-Large\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n3:34 - Installing Hugging Face Transformers with Python\\\\n4:03 - Importing GPT2 \\\\n5:23 - Loading the GPT2-Large Model and Tokenizer\\\\n8:39 - Tokenizing Sentences for AI Text Generation\\\\n10:57 - Generating Text using GPT2-Large\\\\n11:50 - Decoding Generated Text\\\\n14:13 - Outputting Results to .txt files\\\\n16:11 - Generating Longer Blog Posts\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\\\nJoin the Discussion on Discord: https://discord.gg/mtTTwYkB29\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1238",
    "uploadDate": "2021-02-20",
    "thumbnail_url": "https://i.ytimg.com/vi/cHymMt1SQn8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=JctmnczWg0U",
    "title": "AI Blog Post Summarization with Hugging Face Transformers & Beautiful Soup Web Scraping",
    "tags": "web scraping, python web scraping, web scraping with python, ai text summarization, ai text summary, huggingface transformers, huggingface text summarization",
    "scraped_at": 1685095311.680167,
    "genre": "Science",
    "views": "11657",
    "desc": "Millions of new blog posts are written each day. \\\\n\\\\nThousands of tweets are set free to the world each second. \\\\n\\\\nMillions of minutes of podcasts are published every. Single. Week.\\\\n\\\\nSo how do you keep up with all of it?\\\\n\\\\nI\\'ll tell you how, using AI Text Summarization. In this particular case we\\'re going to be running through how to perform long form summarization for blog posts. We\\'ll be able to scrape a website using Beautiful Soup. Bring the text into a Python Jupyter Notebook and have a pre-trained, AI powered summarization pipeline from Hugging Face do all the summarizing for us!\\\\n\\\\nIn this video, you\\'ll learn how to: \\\\n1. Setting up Hugging Face Summarization Pipelines\\\\n2. Scrape Blog Posts from the web using Beautiful Soup\\\\n3. Preprocess Blog Posts into Chunks \\\\n4. Perform long form summarization using Hugging Face AI Summarization Pipeline\\\\n\\\\nGet the code: https://github.com/nicknochnack/Longform-Summarization-with-Hugging-Face\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n4:17 - Installing and Importing Hugging Face Transformers\\\\n6:05 - Importing Hugging Fact AI Summarization Pipeline\\\\n7:30 - Scraping Blog Posts Using BeautifulSoup and Python\\\\n15:55 - Chunking Text for Parsing to Transformers\\\\n24:17 - Summarizing the Blog Post Using Transformers\\\\n29:19 - Outputting Summaries to Text\\\\n31:13 - Updating Summarization Flows\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\\\nJoin the Discussion on Discord: https://discord.gg/mtTTwYkB29\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1980",
    "uploadDate": "2021-02-17",
    "thumbnail_url": "https://i.ytimg.com/vi/JctmnczWg0U/maxresdefault.jpg"
  },
  {
    "link": "watch?v=5bnBE950SHQ",
    "title": "Voice Controlled React.JS Apps with Tensorflow.JS | Javascript AI",
    "tags": "voice recognition, voice assistant javascript, react js project, react js for beginners, react js full course, speech recognition javascript, tensorflow js web app, tensorflow js node",
    "scraped_at": 1685095309.3901675,
    "genre": "Science",
    "views": "4415",
    "desc": "Want to start using Voice Control in your Apps?\\\\n\\\\nWell, it\\'s not as hard as you might think!\\\\n\\\\nIn fact, using Tensorflow.JS you can amp up your existing web app with AI with not a whole lot of Javascript code. In fact, in this video I\\'ll show you how to use AI powered Speech Command Recognition to control on screen elements within your React.JS apps using nothing but your browser and microphone. \\\\n\\\\nWe\\'ll render canvas visualisations to move a component around the screen using nothing but our voice. VOICE CONTROL, sick right?!\\\\n\\\\nIn this video, you\\'ll learn how to: \\\\n1. Access a pre-built Speech Command Recognition App\\\\n2. Build real-time voice controlled interaction with React.JS App\\\\n3. Render canvas visualisations based on detected AI speech command\\\\n\\\\nGet the code: https://github.com/nicknochnack/Speech-Command-Recognition-Control-On-Screen-Elements\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n3:09 - Cloning the Pre-Build Speech Command Recognition App\\\\n4:15 - Installing Baseline Dependencies\\\\n8:01 - Setting Up a Visualisation Function\\\\n10:29 - Creating a Canvas\\\\n12:04 - Defining Canvas References and Application States\\\\n14:18 - Setting up Speech Command Action Handling\\\\n20:14 - Testing Out AI Speech Command Recognition\\\\n22:39 - Handling Consecutive Commands\\\\n25:49 - Final Code Test\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\\\nJoin the Discussion on Discord: https://discord.gg/mtTTwYkB29\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1663",
    "uploadDate": "2021-02-13",
    "thumbnail_url": "https://i.ytimg.com/vi/5bnBE950SHQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=wzWcaLkCy1w",
    "title": "Speech Command Recognition With Tensorflow.JS and React.JS | Javascript AI",
    "tags": "speech recognition, tensorflow js web app, tensorflow js node, voice assistant javascript, tensorflow js tutorial, speech command recognition",
    "scraped_at": 1685095309.4651663,
    "genre": "Science",
    "views": "14279",
    "desc": "Speech is a powerful medium. \\\\n\\\\nWords have shaped nations, built empires and rallied masses. \\\\n\\\\nSo, why not bring speech into your next React.JS app!?\\\\n\\\\nThis video shows you exactly how to do that. Using AI powered speech command recognition through Tensorflow.JS you\\'re able to detect speech commands through the browser using your microphone. The speech commands have been pre-trained using a deep neural network (AI) to be able to recognise a number of different commands like \\'up\\', \\'down\\', \\'left\\' and \\'right\\'. \\\\n\\\\nAnd what\\'s best? In just 26ish minutes you\\'ll be able to integrate into your existing React.JS app!\\\\n\\\\nIn this video, you\\'ll learn how to: \\\\n1. Install the Tensorflow.JS Speech Command Recognition \\\\n2. Build a React Web App that leverages the model\\\\n3. Displaying speech commands to the screen\\\\n\\\\nGet the code: https://github.com/nicknochnack/Speech-Command-Recognition-with-Tensorflow.JS\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n2:29 - Installing React.JS using Create React App\\\\n4:45 - Installing Tensorflow.JS \\\\u0026 Speech Command Recognition\\\\n6:03 - Importing Dependencies\\\\n7:02 - Setting Up Application States\\\\n10:07 - Creating a Speech Recognizer\\\\n14:49 - Activating Speech Recognizer\\\\n16:41 - Displaying Commands to the Screen\\\\n20:31 - Argmax for Javascript\\\\n21:32 - Getting the Highest Probability Detection\\\\n23:25 - Displaying Commands to the Screen\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\\\nJoin the Discussion on Discord: https://discord.gg/mtTTwYkB29\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1587",
    "uploadDate": "2021-02-10",
    "thumbnail_url": "https://i.ytimg.com/vi/wzWcaLkCy1w/maxresdefault.jpg"
  },
  {
    "link": "watch?v=UPS54i7Km30",
    "title": "Capturing Object Detection History with Tensorflow Object Detection and Python",
    "tags": "tensorflow object detection, object detection tutorial, python deep learning, detection history",
    "scraped_at": 1685095309.540168,
    "genre": "Science",
    "views": "5364",
    "desc": "Want to start capturing your detections?\\\\n\\\\nMaybe you have a deployed model and want to check what was detected and when?\\\\n\\\\nWell, in this video you\\'ll learn how to do just that. We\\'ll take a pre-trained deep learning Tensorflow Object Detection Model and store the detections that are made so they can be referenced in the future. You\\'ll be able to leverage previously written detection code and can begin to save the history with just a few Python tweaks. \\\\n\\\\nIn this video, you\\'ll learn : \\\\n1. Capture detection history from a real time object detection model \\\\n2. How Tensorflow Object Detection scores are captured and transformed \\\\n3. How to display detection history per frame to the screen\\\\n\\\\nGet the code: https://youtu.be/ZTSRZt04JkY\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n1:25 - Getting the Starter Code\\\\n2:45 - Testing Baseline Code Detections\\\\n3:38 - Importing New Dependencies\\\\n4:04 - Setting Up a History Array\\\\n4:35 - Understanding Detections\\\\n6:20 - Capturing Detection History\\\\n7:10 - Testing the Final Python Code\\\\n8:09 - Understanding Tensorflow Object Detection Scores \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\\\nJoin the Discussion on Discord: https://discord.gg/mtTTwYkB29\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "632",
    "uploadDate": "2021-02-03",
    "thumbnail_url": "https://i.ytimg.com/vi/UPS54i7Km30/maxresdefault.jpg"
  },
  {
    "link": "watch?v=IO1tjm9gcIs",
    "title": "NLP Powered Q&A with React.Js and Tensorflow.Js BERT",
    "tags": "react.js, react js ai, tensorflow.js react, tensorflow js nlp, bert nlp, bert nlp tutorial",
    "scraped_at": 1685095309.6211674,
    "genre": "Science",
    "views": "10625",
    "desc": "Want to extract deeper insights from text?\\\\n\\\\nNeed to start plugging in some NLP into your WebApps?\\\\n\\\\nReady to level up your startup with some next-gen Artificial Intelligence?\\\\n\\\\nThis just might be a great place to start. In this video you\\'ll learn how to get started with NLP powered Question Answering (Q\\\\u0026A) using the state of the art BERT model from Tensorflow.JS. In less than 30 minutes you can have your very own NLP web app ready to answer and uncover insights from a passage of text. \\\\n\\\\nGet the code: https://github.com/nicknochnack/QnA-Web-App-with-React-and-Tensorflow.JS\\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Install Tensorflow.JS and BERT\\\\n2. Develop an interface to capture a passage and  question\\\\n3. Perform real time BERT evaluation and scoring\\\\n\\\\nLinks Mentioned: \\\\nTensorflow.Js Models: https://www.tensorflow.org/js/models\\\\nCreate React App: https://reactjs.org/docs/create-a-new-react-app.html\\\\nReact Hooks: https://reactjs.org/docs/hooks-intro.html\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n3:45 - Installing Dependencies\\\\n5:32 - Importing Dependencies\\\\n8:21 - Setting up State and Reference Hooks\\\\n10:41 - Loading the BERT Model from Tensorflow.JS\\\\n15:25 - Handling Questions and Model Responses\\\\n17:59 - Coding the User Interface in JSX\\\\n23:14 - Testing the App with Results\\\\n26:14 - Applying Prediction Score Formatting\\\\n26:44 - Final App\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\nPatreon: https://www.patreon.com/nicholasrenotte\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1692",
    "uploadDate": "2021-01-30",
    "thumbnail_url": "https://i.ytimg.com/vi/IO1tjm9gcIs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=pvPc7tQkVA8",
    "title": "A.I. Learns to Play Space Invaders | Reinforcement Learning",
    "tags": "ai learns to play, ai learns, ai learns to, ai learns to play space invaders, reinforcement learning game, reinforcement learning, deep q learning",
    "scraped_at": 1685095309.9081674,
    "genre": "Science",
    "views": "6881",
    "desc": "Suck at games?\\\\n\\\\nKeep getting beaten?\\\\n\\\\nWant to absolutely smash everyone at Space Invaders?\\\\n\\\\nOh, have I got a solution for you! In this video you\\'ll see the journey to building an AI model that\\'s able to crush it at Space Invaders. We\\'ll use, Reinforcement Learning, a similar technique to what was used by DeepMind in their documentary on AlphaGo. \\\\n\\\\nThe model shown in the video was built using an ACER agent with OpenAI\\'s stable_baselines package and Python. After around 40m steps the model performance tailed off a bit so the final model shown was one that seemed to consistently perform reasonably well. \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "610",
    "uploadDate": "2021-01-28",
    "thumbnail_url": "https://i.ytimg.com/vi/pvPc7tQkVA8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=TsfLm5iiYb4",
    "title": "AI Text Summarization with Hugging Face Transformers in 4 Lines of Python",
    "tags": "film, udost",
    "scraped_at": 1685095313.1681664,
    "genre": "Science",
    "views": "30386",
    "desc": "There\\xe2\\x80\\x99s sooo much content to take in these days. \\\\n\\\\nBlog posts coming out left, right and centre. \\\\n\\\\nYouTube videos to watch\\\\n\\\\nPodcasts to listen to. \\\\n\\\\nDon\\xe2\\x80\\x99t you sometimes wish you could just get a summary of them all?\\\\n\\\\nWell, you can!\\\\n\\\\nUsing Hugging Face Transformers you can leverage a pre-trained summarisation pipeline to start summarising content. In fact in just 4 lines of Python code you can begin to summarise blog posts. It\\xe2\\x80\\x99s ridiculously easy to get started with and the fun just begins there, there\\xe2\\x80\\x99s so much more stuff you can do with the Hugging Face Transformers library!\\\\n\\\\nIn this video you\\'ll go through: \\\\n1. Installing Hugging Face Transformers\\\\n2. Building a summarization pipeline\\\\n3. Running an encoding decoding model for summarization\\\\n\\\\nGet the CODE: https://github.com/nicknochnack/Hugging-Face-Transformers-Summarization\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n1:09 - Installing Hugging Face Transformers\\\\n3:12 - Loading the Summarization Pipeline\\\\n4:20 - Generating a Summary\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "583",
    "uploadDate": "2021-01-23",
    "thumbnail_url": "https://i.ytimg.com/vi/TsfLm5iiYb4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Bpaa560qN9U",
    "title": "I Tried Teaching AI Sign Language",
    "tags": "AI, machine learning, deep learning, sign language detection, tensorflow, ai learns, teaching ai, artificial intelligence, artificial intelligence 2020, machine learning python",
    "scraped_at": 1685095309.6951663,
    "genre": "Science",
    "views": "4843",
    "desc": "I came up with an idea a little while ago. \\\\n\\\\nBuild code that helps the world out just a little bit!\\\\n\\\\nAnd you know what, that ended up manifesting itself as a real time sign language model. For this video I used Tensorflow Object Detection to train a real time deep learning model using Python that is able to predict basic sign language poses. This could then be further extended to be able to handle new gestures or use video as an input using Tiny Video Networks. \\\\n\\\\nIf you wanted to check out the full tutorial, check it out here: https://youtu.be/pDXdlXlaCco\\\\n\\\\nGrab the code: https://github.com/nicknochnack/RealTimeSignLanguageDetectionwithTFJS\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "374",
    "uploadDate": "2021-01-19",
    "thumbnail_url": "https://i.ytimg.com/vi/Bpaa560qN9U/maxresdefault.jpg"
  },
  {
    "link": "watch?v=mgX0Iz4q0bE",
    "title": "Forecasting Weather with Neural Prophet and Python",
    "tags": "neural prophet python, neural prophet tutorial, neural prophet install, neural prophet, ar net, ar network, forecasting weather",
    "scraped_at": 1685095312.6601655,
    "genre": "Science",
    "views": "25792",
    "desc": "Tired of sucky weather forecasts?\\\\n\\\\nWant to make the most of those sunny days when they come?\\\\n\\\\nYou\\'re probably better off forecasting the weather yourself instead of relying. on the weather channel. \\\\n\\\\nThe best thing is,  you can get started pretty easily using Neural Prophet. Neural Prophet is a relatively new library that uses Facebooks Prophet time series forecasting package and a Pytorch AR-Net model to produce highly accurate time series forecasts quickly. This makes it easy to build your own weather forecasts and forecast with any other time series style data. \\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Preprocess a weather dataset from Kaggle using Pandas\\\\n2. Train a time series forecasting model to predict temperature using Neural Prophet\\\\n3. Forecast temperature into the future using the trained  model\\\\n\\\\nGet the code: https://github.com/nicknochnack/Forecasting-Weather-with-Neural-Prophet\\\\n\\\\nChapters:\\\\n0:00 - Start\\\\n2:22 - Installing and Importing Neural Prophet \\\\n3:59 - Reading and Preprocessing Weather Data\\\\n14:19 - Training a Neural Prophet Model\\\\n16:33 - Generating Forecasts. with Neural Prophet\\\\n20:48 - Saving and Reloading Neural Prophet Models\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1426",
    "uploadDate": "2021-01-13",
    "thumbnail_url": "https://i.ytimg.com/vi/mgX0Iz4q0bE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=bD6V3rcr_54",
    "title": "Building a Custom Environment for Deep Reinforcement Learning with OpenAI Gym and Python",
    "tags": "custom environment openai gym, custom environment reinforcement learning, custom environment in gym, reinforcement learning, openai gym, neural network, dqn keras",
    "scraped_at": 1685095315.5544505,
    "genre": "Science",
    "views": "98700",
    "desc": "Tired of working with standard OpenAI Environments?\\\\n\\\\nWant to get started building your own custom Reinforcement Learning Environments?\\\\n\\\\nNeed a specific Python RL environment built for a project you\\xe2\\x80\\x99re working on in the field?\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to do exactly that in 25 minutes. In this video you\\xe2\\x80\\x99ll learn how to build a basic custom reinforcement learning environment to get started with reinforcement learning. We\\xe2\\x80\\x99ll go through how to build your own environment class, setting up the __init__, step and reset methods and then train a simple RL model to learn how to interact with it using Python, Keras-RL and OpenAI Gym. \\\\n\\\\nIn this video you\\'ll go through: \\\\n1. How to build a\\xc2\\xa0 custom environment with OpenAI\\xc2\\xa0 Gym\\\\n2. Training a DQN Agent on a Custom OpenAI Environment\\\\n3. Testing out a Reinforcement Learning agent on a Custom Environment\\\\n\\\\nGet the CODE: https://github.com/nicknochnack/OpenAI-Reinforcement-Learning-with-Custom-Environment\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:30 - Cloning Baseline Reinforcement Learning Code\\\\n3:12 - Custom Environment Blueprint and Scenario \\\\n5:22 - Installing and Importing Dependencies\\\\n7:44 - Creating a Custom Environment with OpenAI Gym\\\\n9:21 - Coding the __init__() method for a OpenAI Environment\\\\n12:26 - Coding the step() method for an OpenAI Environment\\\\n16:50 - Coding the reset() method for an OpenAI Environment\\\\n17:23 - Testing a Custom OpenAI Environment \\\\n20:29 - Training a DQN Agent with Keras-RL \\\\n23:48 - Running a DQN Agent on a Custom Environment using Keras-RL\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!Tired of working with standard OpenAI Environments?\"",
    "lengthSeconds": "1498",
    "uploadDate": "2021-01-09",
    "thumbnail_url": "https://i.ytimg.com/vi/bD6V3rcr_54/maxresdefault.jpg"
  },
  {
    "link": "watch?v=bFeltWvzZpQ",
    "title": "Neural Style Transfer Tutorial with Tensorflow and Python in 10 Minutes",
    "tags": "neural style transfer, deep learning tutorial, tensorflow neural style transfer, neural style transfer tensorflow 2, neural style transfer tutorial tensorflow, style transfer, neural style transfer gan",
    "scraped_at": 1685095309.771167,
    "genre": "Science",
    "views": "31790",
    "desc": "Getting started with generative AI?\\\\n\\\\nWant to learn how to make art with Tensorflow?\\\\n\\\\nMaybe, you just can\\'t be bothered with basic image filters?!\\\\n\\\\nYou need to check out Neural Style Transfer. Neural Style Transfer is a process that uses neural networks to apply the artistic style from one image to another. This means that you can take famous artworks and their styles and apply them to your own images. Even better yet, you can do it in just 10ish minutes using Python and Open Source tools like Tensorflow and Matplotlib. \\\\n\\\\nIn this video you\\'ll go through: \\\\n1. Downloading a model from Tensorflow Model Hub\\\\n2. Preprocessing images for neural style transfer\\\\n3. Applying and visualizing style transfer\\\\n\\\\nGet the CODE: https://github.com/nicknochnack/Python-Neural-Style-Transfer/\\\\n\\\\nChapters\\\\n0:00 - Start\\\\n0:30 - What is Neural Style Transfer\\\\n2:42 - Importing Dependencies for Neural Style Transfer with Python\\\\n3:33 - Loading a Neural Style Transfer model from Tensorflow Hub\\\\n5:10 - Preprocessing and Loading Images\\\\n8:38 - Visualising Images\\\\n9:34 - Running the Neural Style Transfer Algorithm\\\\n10:38 - Exporting Images\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "856",
    "uploadDate": "2021-01-07",
    "thumbnail_url": "https://i.ytimg.com/vi/bFeltWvzZpQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=sNNFEKZhOlA",
    "title": "Focus on These TOP 7 Data Science SKILLS in 2021",
    "tags": "data science, data science 2021, data science skills, data science skills 2021",
    "scraped_at": 1685095313.314191,
    "genre": "Science",
    "views": "8559",
    "desc": "Started on your data science journey but a little stuck?\\\\n\\\\nNot too sure what to you should be learning next?\\\\n\\\\nI hear you!\\\\n\\\\nIn this video I\\'ll share what are my 7 key data science skills to master for the upcoming year. These are all the things I\\'m going to be focusing on myself in order to stay abreast of upcoming innovation in the machine learning, deep learning and data science space!\\\\n\\\\nLeft any off the list? Let me know what you think should be added!\\\\nStart: 0:00\\\\n\\\\nResources Mentioned (in order of mention)\\\\nTransformers: 0:15\\\\nTransformers Basics with Tensorflow - https://www.tensorflow.org/tutorials/text/transformer\\\\n\\\\nAdvanced Natural Language Processing: 1:27\\\\nNatural Language Processing Playlist - https://www.youtube.com/watch?v=8k8S5ruFAUs\\\\u0026list=PLgNJO2hghbmjJv0tSpfiDGQhdLgKb-ZmU\\\\nTensorflow NLP Tutorial - https://www.tensorflow.org/tutorials/text/text_classification_rnn\\\\n\\\\nGANs: 2:29\\\\nTensorflow GAN Tutorial - https://www.tensorflow.org/tutorials/generative/dcgan\\\\n\\\\nReinforcement Learning: 3:35\\\\nSpace Invaders Reinforcement Learning Tutorial - https://www.youtube.com/watch?v=hCeJeq8U0lo\\\\u0026list=PLgNJO2hghbmjlE6cuKMws2ejC54BTAaWV\\\\u0026index=2\\\\nKeras-RL Documentation - https://keras-rl.readthedocs.io/en/latest/\\\\nTensorforce Documentation - https://tensorforce.readthedocs.io/en/latest/\\\\nReinforcement Learning Playlist - https://www.youtube.com/watch?v=cO5g5qLrLSo\\\\u0026list=PLgNJO2hghbmjlE6cuKMws2ejC54BTAaWV\\\\n\\\\nFull Stack Machine Learning: 5:00\\\\nFull Stack ML Playlist - https://www.youtube.com/watch?v=rr-KwIjinpM\\\\u0026list=PLgNJO2hghbmjNrHZqplNMEpsW-QLFdvJV\\\\nOpenAI Gym - https://gym.openai.com/envs/#classic_control\\\\n\\\\nMachine Learning Model Explainability: 6:09\\\\nAI Fairness 360 - https://aif360.mybluemix.net/\\\\nTensorflow CNN Activation Maps - https://jacobgil.github.io/deeplearning/class-activation-maps\\\\n\\\\nReproducing Research: 7:12\\\\nPapers with Code - https://paperswithcode.com/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "550",
    "uploadDate": "2021-01-02",
    "thumbnail_url": "https://i.ytimg.com/vi/sNNFEKZhOlA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=hCeJeq8U0lo",
    "title": "Deep Reinforcement Learning for Atari Games Python Tutorial | AI Plays Space Invaders",
    "tags": "reinforcement learning, reinforcement learning python, ai plays games, reinforcement learning game, reinforcement learning example, reinforcement learning tutorial",
    "scraped_at": 1685095312.4381683,
    "genre": "Science",
    "views": "42301",
    "desc": "Suck at playing games?\\\\n\\\\nNeed to start smashing your friends at retro Atari?\\\\n\\\\nWant to use AI to help you level up and start beating em?\\\\n\\\\nYou need to start with a little Reinforcement Learning. In this video you\\'ll learn how to use Python to build AI models to play Space Invaders. You\\'ll learn how to use an OpenAI gym environment and Tensorflow to train a model which can play autonomously! With a little training you can build a model that starts to beat your mates!\\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Create an Atari Environment from OpenAI\\\\n2. Build a deep learning model with Tensorflow for RL\\\\n3. Train and test a live Reinforcement Learning model using Keras-RL and Python\\\\n\\\\nGet the Code: https://github.com/nicknochnack/KerasRL-OpenAI-Atari-SpaceInvadersv0\\\\nGet the Trained Weights: https://drive.google.com/file/d/1TgfGittIQC2KhNbut2l4NSASUr0swe1u\\\\n\\\\nLinks Mentioned\\\\nKeras-RL: https://keras-rl.readthedocs.io/en/latest/\\\\nOpenAI Gym: https://gym.openai.com/envs/#classic_control\\\\n\\\\nChapters\\\\n00:00 - Start\\\\n00:18 - Introduction\\\\n01:21 - Installing Dependencies for Keras-RL and OpenAI Gym for Python\\\\n03:59 - Creating an OpenAI Gym Environment for Atari Space Invaders\\\\n07:11 - Applying Random Actions to RL OpenAI Environments \\\\n11:03 - Importing Tensorflow Deep Learning Dependencies\\\\n12:38 - Creating a Deep Learning Model Build Function\\\\n19:03 - Setting up a Deep Learning Model and Viewing the Architecture\\\\n21:11 - Importing Keras-RL Dependencies\\\\n22:54 - Setting up a Reinforcement Learning Agent with Keras-RL\\\\n25:54 - Training Reinforcement Learning Models to Play Space Invaders\\\\n31:55 - Testing the Model\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2294",
    "uploadDate": "2020-12-30",
    "thumbnail_url": "https://i.ytimg.com/vi/hCeJeq8U0lo/maxresdefault.jpg"
  },
  {
    "link": "watch?v=6_2hzRopPbQ",
    "title": "Tensorflow Tutorial for Python in 10 Minutes",
    "tags": "tensorflow tutorial, deep learning, introduction to tensorflow, tensorflow 2.0 tutorial, machine learning with tensorflow, tensorflow python",
    "scraped_at": 1685095312.736192,
    "genre": "Science",
    "views": "210340",
    "desc": "Want to build a deep learning model?\\\\n\\\\nStruggling to get your head around Tensorflow?\\\\n\\\\nJust want a clear walkthrough of which layer to use and why?\\\\n\\\\nI got you!\\\\n\\\\nBuilding neural networks with Tensorflow doesn\\xe2\\x80\\x99t need to be a nightmare. If you follow a couple of key steps you can be up and running and using Tensorflow to predict a whole bunch of stuff. In fact, you can learn how to do it with Python in just 10 minutes. By the end of this video you\\xe2\\x80\\x99ll have built your very own Tensorflow model to predict churn inside of a Jupyter Notebook. \\\\n\\\\nWhat you\\'ll learn: \\\\n1. Build a simple Tensorflow model to predict Churn\\\\n2. Training the model and make predictions on test data with Pandas\\\\n3. Save your model to disc and reload it to a Jupyter Notebook for reuse\\\\n\\\\nChapters\\\\n0:00 - Start  \\\\n0:18 - Introduction\\\\n0:26 - What is Tensorflow\\\\n1:03 - Start of Coding\\\\n2:47 - Importing Tensorflow into a Notebook\\\\n3:48 - Building a Deep Neural Network with Fully Connected Layers\\\\n7:13 - Training/Fitting a Tensorflow Network\\\\n8:24 - Making Predictions with Tensorflow\\\\n9:15 - Calculating Accuracy from Tensorflow Predictions\\\\n9:50 - Saving Tensorflow Models\\\\n10:09 - Loading Tensorflow Models \\\\n\\\\nGET THE CODE!\\\\nhttps://github.com/nicknochnack/Tensorflow-in-10-Minutes\\\\n\\\\nLinks Mentioned\\\\nTensorflow Documentation: https://www.tensorflow.org/api_docs/python/tf/all_symbols\\\\nPandas Crash Course: https://youtu.be/tRKeLrwfUgU\\\\n\\\\nIf you have any questions, please drop a comment below!\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "692",
    "uploadDate": "2020-12-23",
    "thumbnail_url": "https://i.ytimg.com/vi/6_2hzRopPbQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=tUHl5TiP_oA",
    "title": "Deploying Machine Learning Models Online with Watson Machine Learning | Python Scikit-Learn",
    "tags": "film, udost",
    "scraped_at": 1685095314.495438,
    "genre": "Science",
    "views": "13095",
    "desc": "You\\xe2\\x80\\x99ve scoured the web and collected a ton of data. \\\\n\\\\nYou\\xe2\\x80\\x99ve done a bunch of Exploratory Data Analysis. \\\\n\\\\nYou\\xe2\\x80\\x99ve trained a bunch of models. \\\\n\\\\nThey\\xe2\\x80\\x99re pretty accurate.\\\\n\\\\nNow what?\\\\n\\\\nNow, you deploy them! This is one of the final steps in the CRISP-DM lifecycle. Once you\\xe2\\x80\\x99ve evaluated your models and you\\xe2\\x80\\x99re happy to release them into the wild, this is generally the step you\\xe2\\x80\\x99re going to want to take. \\\\n\\\\nBut how?\\\\n\\\\nWell, in this video you\\xe2\\x80\\x99ll learn exactly how to do that. You\\xe2\\x80\\x99ll learn step by step how to take a trained Scikit-Learn model and deploy it to the Cloud using Watson Machine Learning. This model can then be used for a whole bunch of applications and can even be used in different languages like Javascript, Scala, Java and Go. And what\\xe2\\x80\\x99s best? You\\xe2\\x80\\x99ll do it all in less than half an hour. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to: \\\\n1. Saving models to Watson Machine Learning\\\\n2. Creating online\\xc2\\xa0 deployments with Python\\\\n3. Scoring your model using the Python API\\\\n\\\\nGET THE CODE!\\\\nhttps://github.com/nicknochnack/DeployingMachineLearningModels\\\\n\\\\nLinks Mentioned\\\\nIBM Cloud: https://cloud.ibm.com/login \\\\nWatson Machine Learning: https://cloud.ibm.com/catalog/services/machine-learning \\\\nWatson Studio: https://cloud.ibm.com/catalog/services/watson-studio \\\\nExample deploying with Cloud Pak for Data: https://github.com/IBM/watson-machine-learning-samples/tree/master/cpd3.5/notebooks/python_sdk/deployments/scikit-learn \\\\n\\\\nWatson Machine Learning Endpoint URLs\\\\n* Dallas:\\xc2\\xa0https://us-south.ml.cloud.ibm.com\\\\n* London -\\xc2\\xa0https://eu-gb.ml.cloud.ibm.com\\\\n* Frankfurt -\\xc2\\xa0https://eu-de.ml.cloud.ibm.com\\\\n* Tokyo -\\xc2\\xa0https://jp-tok.ml.cloud.ibm.com\\\\n\\\\nIf you have any questions, please drop a comment below!\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1756",
    "uploadDate": "2020-12-19",
    "thumbnail_url": "https://i.ytimg.com/vi/tUHl5TiP_oA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=KvLG1uTC-KU",
    "title": "Time Series Forecasting with Facebook Prophet and Python in 20 Minutes",
    "tags": "film, udost",
    "scraped_at": 1685095313.2371671,
    "genre": "Science",
    "views": "80371",
    "desc": "Trying to forecast the next best stock?\\\\n\\\\nWant to predict the weather?\\\\n\\\\nMaybe you\\xe2\\x80\\x99re just trying to get a better sales forecast for your small business!\\\\n\\\\nTime series forecasting can help!\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to QUICKLY use time series forecasting to produce a forecast. In just a couple of minutes you\\xe2\\x80\\x99ll be able to preprocess your dataset using Pandas and forecast over a number of time periods using Facebook Prophet. \\\\nIn this video you\\xe2\\x80\\x99ll learn how to: \\\\n1. Preparing Data for Time Series FC\\\\n2. Training Prophet Time Series Models\\\\n3. Making forecast predictions\\\\n\\\\nGET THE CODE!\\\\nhttps://github.com/nicknochnack/TimeSeriesForecastingProphet\\\\n\\\\nLinks Mentioned:\\\\nFacebook Prophet: https://facebook.github.io/prophet/docs/quick_start.html\\\\n\\\\nIf you have any questions, please drop a comment below!\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\n\\\\nSLIDES: https://docs.google.com/presentation/d/1DbBAKCcbYOjdxUtUD6aLpB_rbg3ikHzdPSnUztw2GqA/edit#slide=id.g9f34cc2927_0_0\"",
    "lengthSeconds": "1158",
    "uploadDate": "2020-12-16",
    "thumbnail_url": "https://i.ytimg.com/vi/KvLG1uTC"
  },
  {
    "link": "watch?v=NApYP_5wlKY",
    "title": "Python ANPR with OpenCV and EasyOCR in 25 Minutes | Automatic Number Plate Recognition Tutorial",
    "tags": "ANPR, Automatic Number Plate Recognition, ANPR Python Tutorial, anpr opencv python, opencv anpr, anpr using opencv python, detecting license plate, number plate detection using opencv python",
    "scraped_at": 1685095312.9611874,
    "genre": "Science",
    "views": "156345",
    "desc": "Tired of searching for your Uber?\\\\n\\\\nTrying to get a better idea of who\\xe2\\x80\\x99s stealing your car park?\\\\n\\\\nJust want an awesome Computer Vision project to try out using Python?\\\\n\\\\nWell, ANPR might just be the perfect thing for your to try out! In this video we\\xe2\\x80\\x99ll go through a full blown walkthrough of performing Automatic Number Plate Recognition (ANPR) using OpenCV and EasyOCR. We just edge detection and filtering techniques combined with deep learning powered optical character recognition to be able to extract number plate text from images in just 25 minutes. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to: \\\\n0:00 - Start\\\\n5:59 - Reading and visualising images using OpenCV with Python \\\\n7:37 - Applying color shifts and changes to images (e.g. grayscaling and BGR2RGB)\\\\n9:48 - Detecting contours using OpenCV findCountours\\\\n14:32 - Masking number plates to improve text extraction for OCR\\\\n18:40 - Extracting number plate text using EasyOCR\\\\n\\\\nGET THE CODE!\\\\nhttps://github.com/nicknochnack/ANPRwithPython\\\\n\\\\nLinks Mentioned:\\\\n\\\\nCircuit Digest Article: https://circuitdigest.com/microcontroller-projects/license-plate-recognition-using-raspberry-pi-and-opencv\\\\nOpenCV Documentation: https://docs.opencv.org/4.5.0/\\\\nEasyOCR: https://github.com/JaidedAI/EasyOCR\\\\nPyTorch: https://pytorch.org/get-started/locally/\\\\n\\\\nIf you have any questions, please drop a comment below!\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1503",
    "uploadDate": "2020-12-12",
    "thumbnail_url": "https://i.ytimg.com/vi/NApYP_5wlKY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=WajtPtLAg-o",
    "title": "Custom Handpose Gesture Detection with Tensorflow.Js and React.Js | Deep Learning Hand Tracking",
    "tags": "film, udost",
    "scraped_at": 1685095309.843166,
    "genre": "Science",
    "views": "8988",
    "desc": "Want to start detecting your own custom gestures?\\\\n\\\\nWant to leverage deep learning for hand tracking?\\\\n\\\\nWell, you\\'re about to do it all in just 15 minutes. In this video you\\'ll learn how to leverage Tensorflow.JS, Handpose and Fingerpose to be able to perform custom gesture recognition. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to: \\\\n0:00 - Start\\\\n3:12 - Accessing the Gesture Recognition app accelerator\\\\n6:34 - Defining custom hand gestures using fingerpose\\\\n14:25 - Detecting custom hand gestures from your webcam\\\\n\\\\nStarter App: https://github.com/nicknochnack/GestureRecognition\\\\nFinished App: https://github.com/nicknochnack/CustomGestureRecognition\\\\n\\\\nGesture Recognition Video: hhttps://youtu.be/9MTiQMxTXPE\\\\n\\\\nLinks Mentioned:\\\\nFingerpose: https://openbase.io/js/fingerpose/documentation\\\\nCustom Gestures: https://github.com/andypotato/fingerpose/tree/master/src/gestures \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "978",
    "uploadDate": "2020-12-09",
    "thumbnail_url": "https://i.ytimg.com/vi/WajtPtLAg"
  },
  {
    "link": "watch?v=dZh_ps8gKgs",
    "title": "Install Tensorflow Object Detection From Scratch in 5 Steps | Python Deep Learning",
    "tags": "tensorflow object detection, install tensorflow object detection, install cuda, install cudnn, install tensorflow",
    "scraped_at": 1685095312.359166,
    "genre": "Science",
    "views": "131675",
    "desc": "Running into errors?\\\\n\\\\nTired of seeing \\\\\"",
    "lengthSeconds": "1683",
    "uploadDate": "2020-12-06",
    "thumbnail_url": "https://i.ytimg.com/vi/dZh_ps8gKgs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=2dwSXXMFhPY",
    "title": "Deploy Tensorflow.Js Object Detection Apps in 20 Minutes | Computer Vision React.Js",
    "tags": "tensorflow js object detection, tensorflow js web app, deploy tensorflow model",
    "scraped_at": 1685095313.7361672,
    "genre": "Science",
    "views": "11587",
    "desc": "localhost:3000?\\\\n\\\\nMeh.\\\\n\\\\nYou want your app deployed right?\\\\n\\\\nRight!\\\\n\\\\nIn this video we\\'re going to do exactly that. You\\'ll learn how to deploy computer vision apps to production so that they can be released to the world in just 20 minutes. By the end you\\'ll be able to take a Tensorflow.Js and React.Js app and have it completely deployed to IBM Cloud. \\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Prepare a Computer Vision Tensorflow.JS / React.JS App for deployment\\\\n2. Deploying the app as a standalone website for public use\\\\n3. Setup environment variables on IBM Cloud Foundry\\\\n4. Develop deployment assets like the manifest.yml \\\\n5. Make real time detections with your app\\\\n\\\\nStarter App: https://github.com/nicknochnack/RealTimeSignLanguageDetectionwithTFJS\\\\n\\\\nCompleted App: https://github.com/nicknochnack/DeployableComputerVisionApp\\\\n\\\\nOther Links Mentioned\\\\nIBM Cloud: http://cloud.ibm.com/\\\\nIBM Cloud CLI Installation: https://cloud.ibm.com/docs/cli?topic=cli-install-ibmcloud-cli\\\\nCloud Foundry: https://github.com/cloudfoundry/cli/wiki/V6-CLI-Installation-Guide\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1306",
    "uploadDate": "2020-11-28",
    "thumbnail_url": "https://i.ytimg.com/vi/2dwSXXMFhPY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=B5emClQf_I4",
    "title": "5 THINGS I WISH I KNEW Before Starting Data Science",
    "tags": "things I wish I knew before starting data science, things i wish i knew, data science, data scientist, data science career, 5 things i wish i knew before becoming a data scientist",
    "scraped_at": 1685095313.8741674,
    "genre": "Science",
    "views": "41602",
    "desc": "So you\\'re trying to learn Data Science?\\\\n\\\\nBut maybe, just maybe, you want a kick start. \\\\n\\\\nWell, there\\'s no need to repeat the mistakes of others. \\\\n\\\\nGet up to speed a whole heap faster and leverage what\\'s done before. In this video I\\'m going to drop 5 THINGS I WISH I KNEW before starting in Data Science and what to to about it. I\\'ll cover things like how to stand out and what skills to focus on early on so that you can put your best foot forward!\\\\n\\\\nLinks Mentioned (all non-affiliate, I just like em):\\\\nPython Crash Course: https://nostarch.com/pythoncrashcourse2e\\\\nPandas: https://youtu.be/tRKeLrwfUgU\\\\nNumpy: https://youtu.be/uRsE5WGiKWo\\\\nReadme Example: https://github.com/nicknochnack/WatsonObjectDetectionTutorial\\\\nIBISWorld: https://www.ibisworld.com/\\\\nAtomic Habits: https://jamesclear.com/atomic-habits\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "452",
    "uploadDate": "2020-11-26",
    "thumbnail_url": "https://i.ytimg.com/vi/B5emClQf_I4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ZTSRZt04JkY",
    "title": "Building a Real Time Sign Language Detection App with React.JS and Tensorflow.JS | Deep Learning",
    "tags": "computer vision, deep learning, tensorflow, tensorflow js, tensorflow conversion, custom object detection",
    "scraped_at": 1685095312.815166,
    "genre": "Science",
    "views": "57595",
    "desc": "Tired of just using your Python Tensorflow Object Detection model in OpenCV?\\\\n\\\\nWant to showcase your work in a standalone app?\\\\n\\\\nMaybe, you want to do exactly this and help solve the sign language barrier!\\\\n\\\\nWell you can!\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to do exactly that in 45 minutes. You\\xe2\\x80\\x99ll convert an existing Python Tensorflow model and leverage it in a standalone app with real time detections. You\\xe2\\x80\\x99ll be able to see the results in real time! But what\\xe2\\x80\\x99s even better is that you can take this and apply to to your very own use cases, whatever they might be!\\\\n\\\\nThis video covers: \\\\n1. Converting a Tensorflow Object Detection API model to Tensorflow.JS Graph Model format\\\\n2. Hosting a trained Tensorflow deep learning model for applications\\\\n3. Downloading the React and Tensorflow.JS  Computer Vision Template\\\\n4. Making real time detections using a deployed Tensorflow.JS model\\\\n5. Visualising detections within the HTML canvas\\\\n\\\\nCompleted Code: \\\\nhttps://github.com/nicknochnack/RealTimeSignLanguageDetectionwithTFJS\\\\n\\\\nOther Links\\\\nTemplate Code: https://github.com/nicknochnack/ReactComputerVisionTemplate\\\\nSetting Up Cloud Object Storage on IBM Cloud: https://cloud.ibm.com/objectstorage/create\\\\nInstalling the Cloud Object Storage CLI: https://github.com/IBM-Cloud/ibm-cloud-cli-release/releases/\\\\nInstalling the Cloud Object Storage Plugin: https://github.com/IBM/ibmcloud-object-storage-plugin \\\\n\\\\nTensorflow.JS : https://www.tensorflow.org/js\\\\nReact: https://reactjs.org/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2814",
    "uploadDate": "2020-11-22",
    "thumbnail_url": "https://i.ytimg.com/vi/ZTSRZt04JkY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=uTdUUpfA83s",
    "title": "Building an Object Detection App with Tensorflow.JS and React.JS in 15 Minutes | COCO SSD",
    "tags": "object detection, tensorflow js object detection, tensorflow js image recognition tutorial, tensorflow js object detection tutorial",
    "scraped_at": 1685095313.033167,
    "genre": "Science",
    "views": "79390",
    "desc": "Want to build your very own object detection app?\\\\n\\\\nTried, but maybe it took a little too long?\\\\n\\\\nJust need a kickstart?\\\\n\\\\nWell, I hear you! In this video you\\'ll learn how to build your very own real-time object detection app with Tensorflow.JS and React.JS. In 15 minutes you\\'ll be able to have your app up and running and detecting objects using a pre-trained COCO SSD model. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Accessing the React.JS and Tensorflow.JS Computer Vision Template\\\\n2. Install Tensorflow.JS and setup the prebuilt models\\\\n3. Build a React.JS app that accesses your webcam\\\\n4. Make detections from your webcam in real time\\\\n5. Customise detection styling\\\\n\\\\nGithub Repo for the Project: https://github.com/nicknochnack/ReactComputerVisionTemplate\\\\n\\\\nCompleted Code: \\\\nhttps://github.com/nicknochnack/RealTimeObjectDetectionTFJSReact\\\\n\\\\nWant to learn more about it all:\\\\nTensorflow.JS : https://www.tensorflow.org/js\\\\nReact: https://reactjs.org/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "955",
    "uploadDate": "2020-11-18",
    "thumbnail_url": "https://i.ytimg.com/vi/uTdUUpfA83s/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ZVKaWPW9oQY",
    "title": "Optical Character Recognition with EasyOCR and Python | OCR PyTorch",
    "tags": "OCR, optical character recognition, optical character recognition using python",
    "scraped_at": 1685095313.1001678,
    "genre": "Science",
    "views": "98736",
    "desc": "Need to extract text from an image?\\\\n\\\\nTired of manually transcribing?\\\\n\\\\nYou need OCR!\\\\n\\\\nOCR, also known as Optical Character Recognition allows you to \\'recognise\\' text from within a document, whether it be an image, a PDF or a table. Leveraging OCR, you can easily extract this text to be able to use it for additional processing, NLP, or fit it into your regular workflow. \\\\n\\\\nThe great thing about EasyOCR (which is shown in the video) is that it works with Python and is quite accurate without any fine tuning, this means you can spend less time processing and more time doing the fun stuff. What\\'s even better is that in this video you\\'ll learn how to do it all in just 15 minutes. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Setup and install EasyOCR and Pytorch\\\\n2. Use EasyOCR to extract text from an Image with Python\\\\n3. Extract multiple lines of text with OCR and handle the results\\\\n4. Visualise the results from the image using OpenCV\\\\n\\\\nGet the training template here: https://github.com/nicknochnack/EasyOCR\\\\n\\\\nOther Links Mentioned in the Video \\\\nPyTorch Install: https://pytorch.org/get-started/locally/\\\\nEasyOCR Documentation: https://github.com/JaidedAI/EasyOCR\\\\nOpenCV Documentation: https://opencv.org/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "960",
    "uploadDate": "2020-11-07",
    "thumbnail_url": "https://i.ytimg.com/vi/ZVKaWPW9oQY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=pDXdlXlaCco",
    "title": "Real Time Sign Language Detection with Tensorflow Object Detection and Python | Deep Learning SSD",
    "tags": "tensorflow object detection api, sign language detection, python object detection, python deep learning",
    "scraped_at": 1685095312.5131657,
    "genre": "Science",
    "views": "414743",
    "desc": "Language barriers are very much still a real thing. \\\\n\\\\nWe can take baby steps to help close that.\\\\n\\\\nSpeech to text and translators have made it a heap easier.\\\\n\\\\nBut what about for those that maybe don\\'t speak or can\\'t hear? \\\\n\\\\nWhat about them? \\\\n\\\\nWell...you can begin to use Tensorflow Object Detection and Python to help close that gap. And in this video, you\\'ll learn how to take the first steps to doing just that! In this video, you\\'ll learn how to build an end-to-end custom object detection model that allows you to translate sign language in real time. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Collect images for deep learning using your webcam and OpenCV\\\\n2. Label images for sign language detection using LabelImg\\\\n3. Setup Tensorflow Object Detection pipeline configuration\\\\n4. Use transfer learning to train a deep learning model\\\\n5. Detect sign language in real time using OpenCV\\\\n\\\\nGet the training template here: https://github.com/nicknochnack/RealTimeObjectDetection\\\\n\\\\nOther Links Mentioned in the Video \\\\nFace Mask Detection Video: https://youtu.be/IOI0o3Cxv9Q\\\\nLabelImg: https://github.com/tzutalin/labelImg\\\\nInstalling the Tensorflow Object Detection API: https://tensorflow-object-detection-api-tutorial.readthedocs.io/en/latest/install.html\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1948",
    "uploadDate": "2020-11-05",
    "thumbnail_url": "https://i.ytimg.com/vi/pDXdlXlaCco/maxresdefault.jpg"
  },
  {
    "link": "watch?v=IOI0o3Cxv9Q",
    "title": "Real Time Face Mask Detection with Tensorflow and Python | Custom Object Detection w/ MobileNet SSD",
    "tags": "object detection, tensorflow object detection api, face mask detection, custom model, deep learning tutorial",
    "scraped_at": 1685095312.5911946,
    "genre": "Science",
    "views": "216558",
    "desc": "Ever wanted to build your very own custom object detector?\\\\n\\\\nGot lost with all the tutorials and installation?\\\\n\\\\nWell\\xe2\\x80\\xa6I hear you\\xe2\\x80\\xa6I went through the\\\\n\\\\nEXACT. SAME. THING.\\\\n\\\\nSo, let\\xe2\\x80\\x99s flip it up. In this video we\\xe2\\x80\\x99re going to go through how to build a custom object detection model that can be used to make detections in real time. Now whilst we\\xe2\\x80\\x99re using it for detecting face masks this can be easily repurposed to perform real-time detection for a whole range of use cases simply by updating the annotations and the label map. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Install labelImg and label images from scratch for object detection\\\\n2. Train and run a custom object detector for face mask detection\\\\n3. Use transfer learning to train on top of existing SOTA models\\\\n4. Setup a proper workflow and directory structure for training\\\\n5. Make detections in real time using the trained model\\\\n\\\\nGet the training template here: https://github.com/nicknochnack/RealTimeObjectDetection\\\\n\\\\nOther Links Mentioned in the Video \\\\nLabelImg: https://github.com/tzutalin/labelImg\\\\nKaggle Repo: https://www.kaggle.com/wobotintelligence/face-mask-detection-dataset\\\\nInstalling the Tensorflow Object Detection API: https://tensorflow-object-detection-api-tutorial.readthedocs.io/en/latest/install.html\\\\nTensorflow Models: https://github.com/tensorflow/models\\\\nTensorflow 2 Detection Model Zoo (for alternate pre-trained models): https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/tf2_detection_zoo.md\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "3522",
    "uploadDate": "2020-11-01",
    "thumbnail_url": "https://i.ytimg.com/vi/IOI0o3Cxv9Q/maxresdefault.jpg"
  },
  {
    "link": "watch?v=02ChRbyYQWg",
    "title": "Automated Time Series Forecasting in Planning Analytics (and more!)",
    "tags": "tm1, planning analytics, time series forecasting",
    "scraped_at": 1685095312.8861663,
    "genre": "Science",
    "views": "2809",
    "desc": "Want to amp up your forecast accuracy?\\\\n\\\\nReady to ramp up into rolling forecasts?\\\\n\\\\nLeveraging some of the new features inside of Planning Analytics can help a whole heap! In this video you\\'ll learn how to automate your forecasts with integrated time series forecasting. At the same time you\\'ll be able to build your own budget or forecast workflow and even leverage the fine grain visualisation engine.\\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Create Automated Forecasts with the Integrated Time Series Forecasting Tool\\\\n2. Build your own Budget, Forecast or Planning Workflow with Applications\\\\n3. Leverage the new Visualisation Engine to build Waterfall charts\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1021",
    "uploadDate": "2020-10-27",
    "thumbnail_url": "https://i.ytimg.com/vi/02ChRbyYQWg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=bVCrzoIVudU",
    "title": "Day in the Life of a DATA SCIENTIST *wfh edition*",
    "tags": "data scientist, day in the life, data science",
    "scraped_at": 1685095313.5941687,
    "genre": "Science",
    "views": "134785",
    "desc": "Ever wanted to know what a Data Scientist does in a day?\\\\n\\\\nWell I thought I\\xe2\\x80\\x99d share what a \\xe2\\x80\\x98typical day\\xe2\\x80\\x99 looks like for me.  \\\\n\\\\nWhilst there really isn\\xe2\\x80\\x99t a typical day, this is a tiny insight into what I get up on most days while working from home. \\\\n\\\\nI work alongside a number of different teams including Sales, Product Management and Marketing to help clients make the best of their data. On this day I was focused on building a few new models, one to show to a client in the afternoon followed by a second one that I was demonstrating as part of a webinar. \\\\n\\\\nIf you have any questions, please drop a comment below!\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Here are a few references I mentioned in the video\\\\n- Bulletproof coffee recipe: https://www.bulletproof.com/recipes/bulletproof-diet-recipes/bulletproof-coffee-recipe/\\\\n- Atomic Habits by James Clear: https://jamesclear.com/atomic-habits\"",
    "lengthSeconds": "431",
    "uploadDate": "2020-10-24",
    "thumbnail_url": "https://i.ytimg.com/vi/bVCrzoIVudU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ERWZhMZuJfs",
    "title": "Agile Project Management for Data Projects in 14 Minutes",
    "tags": "agile project management tutorial, data science project management",
    "scraped_at": 1685095309.9811661,
    "genre": "Science",
    "views": "12879",
    "desc": "Need a crash course on how to manage your next data project?\\\\n\\\\nWant to use Agile but not sure where to start?\\\\n\\\\nSay no more...\\\\n\\\\nIn just 14ish minutes you\\'ll learn the basics for managing ANY data project. Whether it\\'s building machine learning models, creating a new dashboard report or building a new application, these steps can be applied anywhere. In fact, I still use this exact process to this day. \\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Write data focused  User Stories\\\\n2. Set up a Trello board for Agile Data PM\\\\n3. Simplify tracking, training and traceability using self documentation\\\\n\\\\nLinks Mentioned\\\\nTrello: https://trello.com/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "841",
    "uploadDate": "2020-10-17",
    "thumbnail_url": "https://i.ytimg.com/vi/ERWZhMZuJfs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=WewKL2wSaxs",
    "title": "Python Voice Translation in 17 Minutes with Watson Speech to Text and Language Translator",
    "tags": "speech to text python, voice translator, speech to text python in hindi",
    "scraped_at": 1685095310.1961658,
    "genre": "Science",
    "views": "13282",
    "desc": "Watson NLP API\\'s on their own are pretty neat...but\\\\n\\\\n...by stacking multiple together you can unleash a heap of NLP prowess. \\\\n\\\\nIn this case, by stacking the Watson Speech to Text API and the Watson Language Translation API you\\'re able to convert audio in one language to text in another in 15\\'ish minutes (the actual process runs in seconds). But why stop there! You could even then take that text and using text to speech to read it out to a user!\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to: \\\\n1. Set up Watson Speech to Text and Language Translator\\\\n2. Convert baseline language from speech to text\\\\n3. Translate baseline language to another\\\\n\\\\nGitHub:\\\\nhttps://github.com/nicknochnack/SpeechToTranslation\\\\n\\\\nLinks Mentioned:\\\\nSpeech to Text: https://cloud.ibm.com/catalog/services/speech-to-text\\\\nLanguage Translator: https://cloud.ibm.com/catalog/services/language-translator\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1046",
    "uploadDate": "2020-10-15",
    "thumbnail_url": "https://i.ytimg.com/vi/WewKL2wSaxs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=9MTiQMxTXPE",
    "title": "Real Time AI GESTURE RECOGNITION with Tensorflow.JS + React.JS + Fingerpose",
    "tags": "gesture recognition, javascript, tensorflow js, react js",
    "scraped_at": 1685095313.6661925,
    "genre": "Science",
    "views": "53605",
    "desc": "Mouse? \\\\n\\\\nKeyboard?\\\\n\\\\nHow about controlling your computer with gestures?\\\\n\\\\nNo, I\\xe2\\x80\\x99m not talking about just swiping left or right to transition between screens. I\\xe2\\x80\\x99m talking deep learning powered computer vision based gesture recognition. Using Tensorflow.JS and fingerpose, you\\xe2\\x80\\x99re able to build gesture recognition models to control web applications. In this video you\\xe2\\x80\\x99ll learn how to leverage the fingerpose javascript library and React.JS to build a real time gesture recognition app. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to: \\\\n1. Install fingerpose\\\\n2. Detecting gestures from hand poses in real time\\\\n3. Controlling web application using detected gestures\\\\n\\\\nGitHub:\\\\nhttps://github.com/nicknochnack/GestureRecognition\\\\n\\\\nHandpose Video: https://youtu.be/f7uBsb-0sGQ\\\\n\\\\nLinks Mentioned:\\\\nFingerpose: https://openbase.io/js/fingerpose/documentation\\\\nCustom Gestures: https://github.com/andypotato/fingerpose/tree/master/src/gestures \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1444",
    "uploadDate": "2020-10-10",
    "thumbnail_url": "https://i.ytimg.com/vi/9MTiQMxTXPE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=sylpzyltetE",
    "title": "AI Resume Insights in 20 Minutes Using Personality Insights and Python",
    "tags": "python, personality insights",
    "scraped_at": 1685095310.4881668,
    "genre": "Science",
    "views": "9519",
    "desc": "HEADS UP EVERYONE, THIS API HAS NOW BEEN DEPRECATED!\\\\n\\\\nTired of going through resume\\xe2\\x80\\x99s one by one?\\\\n\\\\nApply for a new job and want to put your best foot forward?\\\\n\\\\nExtracting insights from your resume or cover letter can help you do just that!\\\\n\\\\nThe Watson Personality Insights service lets you take a piece of text and evaluate the writer\\xe2\\x80\\x99s needs, values and personality from it using AI powered natural language processing. Whilst it\\xe2\\x80\\x99s not the be all and end all when applying for a job or recruiting it can help you get a better feel for the person and shape your cover letter to stand out just that little bit. In this video you\\xe2\\x80\\x99ll learn how to do just that and by the end you\\xe2\\x80\\x99ll be able to extract insights from your own resume or cover letter\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Reading a Resume into Python\\\\n2. Generating a personality profile\\xc2\\xa0\\\\n3. Visualizing results using matplotlib\\\\n\\\\nGitHub: https://github.com/nicknochnack/ResumeInsights\\\\n\\\\nLinks Mentioned\\\\nPyPDF2: https://pypi.org/project/PyPDF2/\\\\nPersonality Insights Service: https://cloud.ibm.com/catalog/services/personality-insights\\\\nPersonality Insights Python Library: https://github.com/watson-developer-cloud/personality-insights-python\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1145",
    "uploadDate": "2020-10-08",
    "thumbnail_url": "https://i.ytimg.com/vi/sylpzyltetE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=_EgqxIoUE7U",
    "title": "Presidential Debate Twitter Sentiment Analysis using Python and NLTK",
    "tags": "sentiment analysis python, sentiment analysis python twitter, presidential debate",
    "scraped_at": 1685095313.3821917,
    "genre": "Science",
    "views": "15254",
    "desc": "Imagine you\\xe2\\x80\\x99ve got customer review. \\\\n\\\\nWorking out whether it\\xe2\\x80\\x99s a good or bad review is pretty easy right? \\\\n\\\\nYou, read it, then you get a \\xe2\\x80\\x98feel\\xe2\\x80\\x99 for whether it\\xe2\\x80\\x99s good or bad. \\\\n\\\\nWell, now imagine you have 500 review, or 5,000 or even 5 million. \\\\n\\\\nGetting through all of these and working out which of them is REALLY bad or REALLY good is a whole lotta work. This is where sentiment analysis comes in. It allows you to leverage natural language processing to help speed up this process and work out whether something is good or bad. And because you\\xe2\\x80\\x99re able to do it using code\\xe2\\x80\\xa6you can do it FAST. In this video you\\xe2\\x80\\x99ll get to do just that. You\\xe2\\x80\\x99ll learn how to apply sentiment analysis to the #PresidentialDebate Twitter feed in order to calculate overall sentiment (positive or negative) for each presidential candidate. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Setting up Twitter Dev\\\\n2. Querying #PresidentialDebate tweets from Twitter using Python\\\\n3. Using NLTK and TextBlob to calculate sentiment\\\\n\\\\nWhen using TextBlob for sentiment analysis, you\\xe2\\x80\\x99re able to extract polarity and subjectivity. Polarity refers to how positive or negative something is with the range extending from -1 (negative) to 1 (positive). Subjectivity refers to how much a piece of text is based on emotion with 0 being the least subjective and 1 being the most subjective. \\\\nSentiment Analysis can also (and is typically) used for:\\\\n* Market research\\\\n* Customer feedback\\\\n* Financial markets analysis\\\\n\\\\nNote: All content, ideas and opinions are my own!\\\\n\\\\nGitHub: \\\\nhttps://github.com/nicknochnack/TwitterPresidentialDebate\\\\n\\\\nResources Listed:\\\\nTwitter Developer: http://developer.twitter.com/en/apps\\\\nTwepy: https://www.tweepy.org/\\\\nNLTK: https://www.nltk.org/\\\\nPandas: https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.rolling.html\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nTechnology vector created by freepik - www.freepik.com\"",
    "lengthSeconds": "1948",
    "uploadDate": "2020-10-03",
    "thumbnail_url": "https://i.ytimg.com/vi/_EgqxIoUE7U/maxresdefault.jpg"
  },
  {
    "link": "watch?v=KAaXbGr9o0s",
    "title": "Real Time Body Segmentation Tutorial with Tensorflow.JS and React.JS",
    "tags": "javascript ai, javascript machine learning, tensorflow js",
    "scraped_at": 1685095310.3451664,
    "genre": "Science",
    "views": "12507",
    "desc": "Semantic segmentation means more than just detecting body parts\\xe2\\x80\\xa6\\\\n\\\\nIn fact, it\\xe2\\x80\\x99s leading to rapid improvements in medical diagnosis, autonomous vehicles and materials science. \\\\n\\\\nIn the industry the technique is being used for radiography to detect lesions from X Ray scans but conversely it\\xe2\\x80\\x99s being used to identify corrosion and surface defects in machinery and equipment. \\\\n\\\\nThis video is a bit of a teaser and shows how it can be leveraged in real time to detect different body parts with a pre-trained model from Tensorflow.JS\\xe2\\x80\\xa6all in sub 30 minutes. By the end you\\xe2\\x80\\x99ll have a fully operational application built with React.JS that allows you to segment body parts in real time using your webcam! \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Installing body pix\\\\n2. Building the body pix app\\\\n3. Detecting segments in real time\\\\n\\\\nGithub Repo for the Project: https://github.com/nicknochnack/RealTimeBodySegmentation\\\\n\\\\nWant to learn more about it all:\\\\nTensorflow.JS: https://www.tensorflow.org/js/models\\\\nReact Webcam: https://www.npmjs.com/package/react-webcam\\\\nCreate React App: https://reactjs.org/docs/create-a-new-react-app.html \\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1450",
    "uploadDate": "2020-10-01",
    "thumbnail_url": "https://i.ytimg.com/vi/KAaXbGr9o0s/maxresdefault.jpg"
  },
  {
    "link": "watch?v=f7uBsb-0sGQ",
    "title": "Real Time AI HAND POSE Estimation with Javascript, Tensorflow.JS and React.JS",
    "tags": "pose estimation tensorflow, handpose, tensorflow.js react",
    "scraped_at": 1685095310.054167,
    "genre": "Science",
    "views": "29831",
    "desc": "Want to get started with gesture detection?\\\\n\\\\nOr maybe you\\'re interested in sign language recognition?\\\\n\\\\nWell...hand pose recognition can help you along your way. Hand pose recognition uses deep learning to detect different landmarks in your hand. By joining these landmarks you\\'re able build a 3D mesh of your hand, and specifically the pose it\\'s in. In this video you\\'ll learn how to build your very own hand pose estimation app with Javascript, Tensorflow.JS and React.JS. \\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Setup a pre-trained hand pose deep learning model\\\\n2. Build a hand pose app using your webcam\\\\n3. Detect hand landmarks in real time\\\\n\\\\nGet the code (GitHub): https://github.com/nicknochnack/HandPoseDetection\\\\n\\\\nReferences Mentioned:\\\\nCreate React App: https://reactjs.org/docs/create-a-new-react-app.html\\\\nTensorflow.JS: https://www.tensorflow.org/js/models\\\\nReact Webcam: https://www.npmjs.com/package/react-webcam\\\\nHTML Canvas: https://www.w3schools.com/tags/canvas_arc.asp\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "2097",
    "uploadDate": "2020-09-27",
    "thumbnail_url": "https://i.ytimg.com/vi/f7uBsb"
  },
  {
    "link": "watch?v=ZUsaIOTJvM4",
    "title": "AI Speech to Text for LONG Files in 15 Minutes with Watson STT and Python",
    "tags": "speech to text, ibm watson",
    "scraped_at": 1685095313.449192,
    "genre": "Science",
    "views": "13395",
    "desc": "Bored of those dull lectures?\\\\n\\\\nTired of watching replays of tedious meetings?\\\\n\\\\nGet the cliff notes using Watson Speech to Text!\\\\n\\\\nTranscribing large files using Speech To Text can sometimes be a pain but it doesn\\xe2\\x80\\x99t need to be. You can easily compress and transcribe segments of speech and recompile it using Watson Speech to Text and Python.  \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Set up Watson Speech to Text\\\\n2. Compress and segment speech with Python\\\\n3. Transcribe large files and output them to text using Watson Speech to Text\\\\n\\\\nGithub Repo for the Project: https://github.com/nicknochnack/LongSpeechTranscription\\\\n\\\\nWant to learn more about it all:\\\\nSpeech to Text: https://cloud.ibm.com/catalog/services/speech-to-text\\\\nInstalling FFMPEG: https://github.com/fluent-ffmpeg/node-fluent-ffmpeg/wiki/Installing-ffmpeg-on-Mac-OS-X\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1059",
    "uploadDate": "2020-09-24",
    "thumbnail_url": "https://i.ytimg.com/vi/ZUsaIOTJvM4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=7lXYGDVHUNw",
    "title": "Real Time AI Face Landmark Detection in 20 Minutes with Tensorflow.JS and React",
    "tags": "face detection javascript, tensorflow js, real time face recognition, webcam face recognition",
    "scraped_at": 1685095313.519168,
    "genre": "Science",
    "views": "96716",
    "desc": "Ever wondered how snapchat filters work?\\\\n\\\\nThree words...facial landmark recognition!\\\\n\\\\nFacial landmark recognition allows you to detect a number of different points on your face that together make up your eyes, mouth, ears, nose and so on. From there you\\'re able to apply overlays aka filters to get your snap! But there\\'s so much more that it can be used for like emotion analysis and face tracking. \\\\n\\\\nSounds a little difficult though, right? Well, in this video you\\'ll learn how to build your own face landmark detector app in 20 minutes using Javascript and Tensorflow.JS. \\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Install the Tensorflow.JS facemesh model\\\\n2. Build a Javascript React.JS face landmark detection app\\\\n3. Detecting landmarks on your face in real time using your webcam\\\\n\\\\nResources:\\\\nTensorflow.Js models: https://www.tensorflow.org/js/models\\\\nHTML Canvas: https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API\\\\nCreate React App: https://reactjs.org/docs/create-a-new-react-app.html\\\\n\\\\nGitHub: https://github.com/nicknochnack/FacialLandmarkDetection\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Epidemic Sounds\"",
    "lengthSeconds": "1661",
    "uploadDate": "2020-09-20",
    "thumbnail_url": "https://i.ytimg.com/vi/7lXYGDVHUNw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=zUvnUQeBLb8",
    "title": "Building a AI Budget Bot for Planning Analytics with Watson Assistant in 20 Minutes",
    "tags": "watson assistant chatbot, watson assistant, planning analytics workspace",
    "scraped_at": 1685095314.5714386,
    "genre": "Science",
    "views": "1412",
    "desc": "Tired of the long hours?\\\\n\\\\nBudget commentary driving you up the wall?\\\\n\\\\nYou need a...\\\\n\\\\nBUDGET BOT!\\\\n\\\\nLeveraging NLP capabilities you can begin to capture commentary for Planning Analytics using Watson Assistant. This can help improve user experience and ensure that a user has a guided flow for entering commentary!\\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Load commentary to Planning Analytics using a Budget Bot \\\\n2. Setup Webhooks as Actions for Watson Assistant\\\\n3. Create and Train a Budget Bot\\\\n\\\\nGrab the Watson Assistant Skill here: https://github.com/nicknochnack/BudgetBot\\\\n\\\\nWant to learn more about it all:\\\\nWatson Assistant: https://cloud.ibm.com/catalog/services/watson-assistant\\\\nSetting Up Webhooks: https://youtu.be/LPhrWzlM_8w\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by  Lakey Inspired and Epidemic Sounds\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "1417",
    "uploadDate": "2020-09-17",
    "thumbnail_url": "https://i.ytimg.com/vi/zUvnUQeBLb8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=LPhrWzlM_8w",
    "title": "Serverless Functions for TM1/Planning Analytics in 20 Minutes",
    "tags": "ibm planning analytics, serverless tutorial, serverless functions, tm1",
    "scraped_at": 1685095315.6294372,
    "genre": "Science",
    "views": "1216",
    "desc": "Want to interact with your Planning Analytics environment\\xe2\\x80\\xa6from anywhere?\\\\n\\\\nSay hello to cloud functions!\\\\n\\\\n\\xe2\\x80\\x9cWhat\\xe2\\x80\\x99s a cloud function?\\xe2\\x80\\x9d\\\\n\\\\nCloud functions (aka server less functions) allow you to deploy and run your code as and when you need it without having a dedicated server. Using them, you can save a heap on server running costs but more excitingly\\xe2\\x80\\xa6you can begin to load data into Planning Analytics using Watson Assistant!!\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Create Python Virtual Environments\\\\n2. Load data into Planning Analytics from Python Functions\\\\n3. Setup Webhooks for Planning Analytics with Cloud Functions\\\\n\\\\nGithub Repo for the Project: https://github.com/nicknochnack/PlanningAnalyticsCloudFunctions\\\\n\\\\nWant to learn more about it all:\\\\nCloud Functions: https://cloud.ibm.com/functions/\\\\nTM1py: https://github.com/cubewise-code/tm1py\\\\nPlanning Analytics: https://www.ibm.com/au-en/products/planning-analytics\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "1206",
    "uploadDate": "2020-09-12",
    "thumbnail_url": "https://i.ytimg.com/vi/LPhrWzlM_8w/maxresdefault.jpg"
  },
  {
    "link": "watch?v=FM6kHcXpw98",
    "title": "Transcribe Video to Text with Python and Watson in 15 Minutes",
    "tags": "transcribe video to text, transcribe video, video transcription tutorial",
    "scraped_at": 1685095314.0184371,
    "genre": "Science",
    "views": "33939",
    "desc": "Tired of taking lecture notes?\\\\n\\\\nBored of writing down meeting minutes?\\\\n\\\\nWell, you can amp up your productivity a whole heap by transcribing recorded videos using Speech to Text. \\\\n\\\\n\\xe2\\x80\\x9cBut videos aren\\xe2\\x80\\x99t speech?\\xe2\\x80\\x9d\\\\n\\\\nUsing Python you can easily convert ANY video to text using the Watson STT service and FFMPEG by first extracting the video\\xe2\\x80\\xa6it takes seconds. In this video you\\xe2\\x80\\x99ll learn how to do exactly that plus how to download YouTube videos so you can transcribe them for your own study or knowledge base in under 20 minutes. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Preprocess Video to Audio\\\\n2. Convert Video to Text using Watson STT\\\\n3. Outputting results from Watson STT to .txt files \\\\n\\\\nYou\\'ll also learn how to download YouTube videos using Youtube-DL!\\\\n\\\\nGithub Repo for the Project: https://github.com/nicknochnack/VideoToText\\\\n\\\\nWant to learn more about it all:\\\\nWatson Speech to Text: https://cloud.ibm.com/catalog/services/speech-to-text\\\\nYouTube-DL: https://github.com/ytdl-org/youtube-dl/blob/master/README.md\\\\nFFMPEG: https://ffmpeg.org/download.html\\\\nLanguage Models: https://cloud.ibm.com/apidocs/speech-to-text#listmodels\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "911",
    "uploadDate": "2020-09-09",
    "thumbnail_url": "https://i.ytimg.com/vi/FM6kHcXpw98/maxresdefault.jpg"
  },
  {
    "link": "watch?v=PyxsziqatFE",
    "title": "Real Time Pose Estimation with Tensorflow.Js and Javascript",
    "tags": "pose estimation, tensorflow tutorial, deep learning",
    "scraped_at": 1685095314.0844631,
    "genre": "Science",
    "views": "32912",
    "desc": "Been trying to perfect your golf swing?\\\\n\\\\nMaybe, you\\'ve been working on the perfect salsa steps. \\\\n\\\\nWhat ever pose you\\'re trying to strike, real time pose estimation can help! Pose estimation uses deep learning to detect different joints within your body from an image and pieces them together to determine a human pose. This video walks through how to use Posenet with Tensorflow.Js and React.JS to exactly that in REAL TIME!\\\\n\\\\nIn this video you\\'ll learn how to:\\\\n1. Installing Posenet and Tensorflow.js\\\\n2. Setting up a real-time webcam feed using React-Webcam\\\\n3. And, last but not least display it all inside a web app using React\\\\n\\\\nGithub Repo for the Project: https://github.com/nicknochnack/PosenetRealtime\\\\n\\\\nWant to learn more about it all:\\\\nTensorFlow Js: https://www.tensorflow.org/js\\\\nDrawing Utilities: https://github.com/tensorflow/tfjs-models/blob/master/posenet/demos/demo_util.js\\\\nReact Webcam: https://www.npmjs.com/package/react-webcam\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "1228",
    "uploadDate": "2020-09-05",
    "thumbnail_url": "https://i.ytimg.com/vi/PyxsziqatFE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=uRsE5WGiKWo",
    "title": "NumPy for Beginners in 15 minutes | Python Crash Course",
    "tags": "numpy tutorial, python programming, data science tutorial, data science tutorial for beginners",
    "scraped_at": 1685095310.554166,
    "genre": "Science",
    "views": "19867",
    "desc": "Kick start your journey to data science with NumPy! \\\\n\\\\nIn just 15 minutes you\\'ll learn everything your need to know to get up and running with NumPy. This video goes through everything from installing all the way through to advanced manipulation of your data. \\\\n\\\\nYou\\'ll learn how to:\\\\n1. Install NumPy\\\\n2. Create and transform NumPy arrays\\\\n3. Apply mathematical functions and export data\\\\n\\\\nGithub Repo for the Project: https://github.com/nicknochnack/NumpyCrashCourse\\\\n\\\\nWant to learn more about it all:\\\\nNumpy Documentation: https://numpy.org/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "1043",
    "uploadDate": "2020-09-02",
    "thumbnail_url": "https://i.ytimg.com/vi/uRsE5WGiKWo/maxresdefault.jpg"
  },
  {
    "link": "watch?v=cO5g5qLrLSo",
    "title": "Deep Reinforcement Learning Tutorial for Python in 20 Minutes",
    "tags": "reinforcement learning, machine learning, deep learning",
    "scraped_at": 1685095314.7254376,
    "genre": "Science",
    "views": "139310",
    "desc": "Worked with supervised learning?\\\\n\\\\nMaybe you\\xe2\\x80\\x99ve dabbled with unsupervised learning. \\\\n\\\\nBut what about reinforcement learning?\\\\n\\\\nIt can be a little tricky to get all setup with RL. You need to manage environments, build your DL models and work out how to save your models down so you can reuse them. But that shouldn\\xe2\\x80\\x99t stop you! \\\\n\\\\nWhy?\\\\n\\\\nBecause they\\xe2\\x80\\x99re powering the next generation of advancements in IOT environments and even gaming and the use cases for RL are growing by the minute. That being said, getting started doesn\\xe2\\x80\\x99t need to be a pain, you can get up and running in just 20 minutes working with Keras-RL and OpenAI. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Create OpenAI Gym environments like CartPole\\\\n2. Build a Deep Learning model for Reinforcement Learning using Tensorflow and Keras\\\\n3. Train a Reinforcement Learning model using Deep Q Policy based learning using Keras-RL\\\\n\\\\nGithub Repo for the Project: https://github.com/nicknochnack/TensorflowKeras-ReinforcementLearning\\\\n\\\\nWant to learn more about it all:\\\\nOpen AI Gym: https://gym.openai.com/envs/\\\\nKeras RL: https://keras-rl.readthedocs.io/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "1255",
    "uploadDate": "2020-08-29",
    "thumbnail_url": "https://i.ytimg.com/vi/cO5g5qLrLSo/maxresdefault.jpg"
  },
  {
    "link": "watch?v=u7WXnFvX0d4",
    "title": "Analyse ANY Conversation in 10 Minutes with Python and Watson Tone Analyser",
    "tags": "python, watson, tone analysis",
    "scraped_at": 1685095310.1211674,
    "genre": "Science",
    "views": "5438",
    "desc": "Tone is important.\\\\n\\\\nConversational tone can positively (AND negatively) influence a lot of outcomes. \\\\n\\\\nThis is why it\\'s so important to understand your user\\'s tone, particularly so when working with conversational or virtual agents. But it can be tricky, especially when all you have to go off is some text. Well, Watson Tone Analyzer can make that a helluva lot easier...in just 10 minutes.\\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Setup Watson Tone Analyzer\\\\n2. Analyze Tone from a Sentence\\\\n3. Check Tone from a Conversation\\\\n\\\\nGithub Repo for the Project: \\\\nhttps://github.com/nicknochnack/ToneAnalysis\\\\n\\\\nWant to learn more about it all:\\\\nTone Analyzer Service: https://cloud.ibm.com/catalog/services/tone-analyzer\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "659",
    "uploadDate": "2020-08-26",
    "thumbnail_url": "https://i.ytimg.com/vi/u7WXnFvX0d4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=_jLRKUuBUtY",
    "title": "Language Translation and Identification in 10 Minutes with Python and Watson AI",
    "tags": "python, language translation, ai",
    "scraped_at": 1685095310.4181669,
    "genre": "Science",
    "views": "13020",
    "desc": "Language barriers are a thing of the past right?\\\\n\\\\nAhhh, not quite!\\\\n\\\\nBeing able to work with text in different languages helps boost access to information for all, but sometimes working with different languages can be a pain. But it doesn\\'t need to be. You can begin to translate and identify different languages in under 10 minutes. In this video you\\'ll learn how to do just that!\\\\n\\\\nIn this video you\\'ll learn how to: \\\\n1. Translate text to other languages\\\\n2. Detect different languages from a single line of text and\\\\n3. Build a AI Travel Assistant to convert text to speech in another language!\\\\n\\\\nGithub Repo for the Project: https://github.com/nicknochnack/LanguageTranslationandIdentification\\\\n\\\\nWant to learn more about it all:\\\\nTranslation Language Codes: https://cloud.ibm.com/docs/language-translator?topic=language-translator-translation-models\\\\nVoice Models: https://cloud.ibm.com/docs/text-to-speech?topic=text-to-speech-voices\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "1029",
    "uploadDate": "2020-08-22",
    "thumbnail_url": "https://i.ytimg.com/vi/_jLRKUuBUtY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=tRKeLrwfUgU",
    "title": "Pandas for Data Science in 20 Minutes | Python Crash Course",
    "tags": "pandas, python",
    "scraped_at": 1685095313.950167,
    "genre": "Science",
    "views": "70150",
    "desc": "Want to get up to speed with Pandas FAST?\\\\n\\\\n\\\\nTired of spending hours in data science courses?\\\\n\\\\n\\\\nI hear you!\\\\n\\\\n\\\\nI give you, Pandas in 20 minutes! In this crash course you\\'ll learn the 20% percent of Pandas you need to know to give you the 80% of results. You\\'ll learn everything you need to know to get up and running with your data science project super FAST. \\\\n\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Create data frames from a range of sources\\\\n2. Update, visualise and preprocess data in data frames\\\\n3. Output your preprocessed data frames to csv, JSON and HTML\\\\n\\\\n\\\\nGithub Repo for the Project: https://github.com/nicknochnack/Pandasin20Minutes\\\\n\\\\n\\\\nWant to learn more about it all:\\\\nPandas Documentation: https://pandas.pydata.org/docs/\\\\n\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "1386",
    "uploadDate": "2020-08-21",
    "thumbnail_url": "https://i.ytimg.com/vi/tRKeLrwfUgU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=8k8S5ruFAUs",
    "title": "AI Text to Speech in 10 Minutes with Python and Watson TTS",
    "tags": "python, tts, ai",
    "scraped_at": 1685095313.8041866,
    "genre": "Science",
    "views": "67999",
    "desc": "Tired of speaking on webex?\\\\n\\\\nNot so pumped to give that speech?\\\\n\\\\nJust plain can\\'t be bothered talking?\\\\n\\\\nForget it, just use text to speech to do it for you in 10ish minutes! You can speed up your ability to convert written text to AI powered neural network generated speech in minutes. Plus there\\'s support for a whole bucketload of different languages whether you\\'re speaking Dutch or Mandarin, it\\'s got you covered!\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Set up the Watson Text to Speech Service\\\\n2. Convert Text to Speech Using Python and Watson\\\\n3. Convert Text using different language models including French\\\\n\\\\nGithub Repo for the Project: \\\\nhttps://github.com/nicknochnack/TextToSpeech\\\\n\\\\nWant to learn more about it all:\\\\nText to Speech API API: https://cloud.ibm.com/catalog/services/text-to-speech\\\\nVoice Models:https://cloud.ibm.com/docs/text-to-speech?topic=text-to-speech-voices\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "837",
    "uploadDate": "2020-08-15",
    "thumbnail_url": "https://i.ytimg.com/vi/8k8S5ruFAUs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=T9KfYaS9hwQ",
    "title": "Build a Face Mask Detector in 20 Minutes with Watson and Python",
    "tags": "python, ai, watson, opencv",
    "scraped_at": 1685095314.373439,
    "genre": "Science",
    "views": "51892",
    "desc": "We\\xe2\\x80\\x99re living in strange times at the moment. \\\\n\\\\nAnd it seems like wearing masks in public are becoming the norm. \\\\n\\\\nSo\\xe2\\x80\\xa6maybe you\\xe2\\x80\\x99d like to detect who\\xe2\\x80\\x99s wearing one and possibly who\\xe2\\x80\\x99s not.\\\\n\\\\nThis is a perfect problem for deep learning and object detection. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to use Watson Visual Recognition, Python and OpenCV to build a face mask detector. By the end you\\xe2\\x80\\x99ll have all the code required to deploy your very own face mask detector with Python. In this video you\\xe2\\x80\\x99re detecting face masks but you could also use this to detect a whole bunch of other objects as well!\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Capturing Images with OpenCV\\\\n2. Visualising detections using Matplotlib\\\\n3. Training Custom Object Detection Models with Watson\\\\n\\\\nGithub Repo for the Project: https://github.com/nicknochnack/FaceMaskObjectDetection\\\\n\\\\nWant to learn more about it all:\\\\nOpenCV: https://opencv.org/\\\\nWatson Studio: https://cloud.ibm.com/catalog/services/watson-studio\\\\nWatson Visual Recognition: https://cloud.ibm.com/catalog/services/visual-recognition\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "1222",
    "uploadDate": "2020-08-13",
    "thumbnail_url": "https://i.ytimg.com/vi/T9KfYaS9hwQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=A9_0OgW1LZU",
    "title": "Converting Speech to Text in 10 Minutes with Python and Watson",
    "tags": "python, speech to text",
    "scraped_at": 1685095310.271168,
    "genre": "Science",
    "views": "39279",
    "desc": "Want to amp up your study notes?\\\\n\\\\nNeed to get started with NLP but only have audio files?\\\\n\\\\nMaybe...you can\\'t be bothered transcribing your meeting minutes.\\\\n\\\\nDon\\'t waste your time doing this by hand, you can speed up this process using Watson Speech to Text and Python. In just ten minutes you can have your own speech to text model converting audio files to text. That way you can get the boring stuff out of the way a whole lot faster. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n1. Set up the Watson Speech to Text Service\\\\n2. Convert Speech to Text using Python and the Watson API\\\\n3. Changing language models to suit your accent or language\\\\n\\\\nGithub Repo for the Project: \\\\nhttps://github.com/nicknochnack/WatsonSTT\\\\n\\\\nWant to learn more about it all:\\\\nSpeech to Text API: https://cloud.ibm.com/catalog/services/speech-to-text\\\\nLanguage Models:https://cloud.ibm.com/docs/speech-to-text?topic=speech-to-text-models\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "600",
    "uploadDate": "2020-08-07",
    "thumbnail_url": "https://i.ytimg.com/vi/A9_0OgW1LZU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Ee0kLCMhqeM",
    "title": "Analyzing Twitter Accounts with Python and Personality Insights",
    "tags": "python, twitter",
    "scraped_at": 1685095314.1584628,
    "genre": "Science",
    "views": "5485",
    "desc": "Ever wanted to get a better handle on Twitter feeds?\\\\n\\\\nKeen to know what makes celebs tick?\\\\n\\\\nWell, in this tutorial you\\'ll learn exactly how to do that using Twitter and Python. We\\'ll go through how to analyse and profile Twitter accounts using Watson Personality Insights and Tweepy. \\\\n\\\\nYou\\'ll learn how to:\\\\n1. Set up a Twitter Dev Account and Personality Insights\\\\n2. Query different Twitter handles using Python and Tweepy\\\\n2. Generate and visualise personalities using Seaborn and Matplotlib\\\\n\\\\nGet all the code from GitHub here: https://github.com/nicknochnack/TwitterPersonalityInsights\\\\n\\\\nWant to learn more about it all:\\\\nTweepy: https://www.tweepy.org/\\\\nPersonality Insights: https://www.ibm.com/au-en/cloud/watson-personality-insights\\\\nTwitter Dev Accounts: https://developer.twitter.com/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "1377",
    "uploadDate": "2020-08-06",
    "thumbnail_url": "https://i.ytimg.com/vi/Ee0kLCMhqeM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Oi1FyKbivdg",
    "title": "Build FAST Machine Learning Apps with Javascript React.Js and Watson || Python ML PT.6",
    "tags": "javascript, machine learning, reactjs",
    "scraped_at": 1685095314.3004658,
    "genre": "Science",
    "views": "17479",
    "desc": "Tired of showing your machine learning apps in a Jupyter Notebook?\\\\n\\\\nWant to show off all of your ML prowess in a slick app?\\\\n\\\\nSay no more!\\\\n\\\\nIn the final part of the machine learning app series you\\xe2\\x80\\x99ll place the final jewel in the crown! This video will walk you through how to build a great looking front-end app to showcase machine learning predictions to your users using Javascript and React.Js. With a couple of simple commands you\\xe2\\x80\\x99ll be able to spin up an app and visualise results. \\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to:\\\\n- Build a machine learning app with React.JS and Javascript\\\\n- Run Machine Learning Scoring with a Node.Js backend\\\\n- Setup a great looking UI with Carbon Design System\\\\n\\\\nGithub Repo for the Project: https://github.com/nicknochnack/RegressionMachineLearningApp\\\\n\\\\nWant to learn more about it all:\\\\nCarbon Design System: https://www.carbondesignsystem.com/\\\\nCreate React App: https://reactjs.org/docs/create-a-new-react-app.html\\\\nWatson Machine Learning: https://www.ibm.com/au-en/cloud/machine-learning\\\\n\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\"",
    "lengthSeconds": "1890",
    "uploadDate": "2020-07-31",
    "thumbnail_url": "https://i.ytimg.com/vi/Oi1FyKbivdg/maxresdefault.jpg"
  },
  {
    "link": "watch?v=2b_xDzrBv6c",
    "title": "Mind Blowing Machine Learning Apps with Node.JS and Watson Machine Learning || Python ML PT.5",
    "tags": "Watson machine learning, Node.JS, machine learning, javascript",
    "scraped_at": 1685095314.6474385,
    "genre": "Science",
    "views": "10063",
    "desc": "Want to know what the best part of machine learning is?!\\\\n\\\\nUsing it for stuff!!\\\\n\\\\nAnd by stuff\\xe2\\x80\\xa6I mean building apps with it. One of the best ways to build machine learning apps is with Node.Js and React. In Part 5 of the machine learning app series we\\xe2\\x80\\x99re finally going to start building an app! The first part involves building the Node.JS API backend that the React front end will be able to interact with. \\\\n\\\\nIn this video you\\'ll learn how to:\\\\n- Build application backends\\\\n- Set up Node.JS and Express for ML\\\\n- Make scoring requests with Javascript and Watson Machine Learning \\\\n\\\\nStuff mentioned in the video:\\\\n- Watson Machine Learning: https://www.ibm.com/cloud/machine-learning\\\\n- Postman: https://www.postman.com/\\\\n- JSON Formatter: https://jsonformatter.curiousconcept.com/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "2191",
    "uploadDate": "2020-07-16",
    "thumbnail_url": "https://i.ytimg.com/vi/2b_xDzrBv6c/maxresdefault.jpg"
  },
  {
    "link": "watch?v=_2gHffpM9Q8",
    "title": "Deploying Machine Learning Models with Watson Machine Learning || Python Machine Learning PT.4",
    "tags": "python, machine learning, watson",
    "scraped_at": 1685095315.7764595,
    "genre": "Science",
    "views": "4348",
    "desc": "So\\xe2\\x80\\xa6you\\xe2\\x80\\x99ve built a machine learning model.\\\\n\\\\nNow, how do you \\xe2\\x80\\x98get it\\xe2\\x80\\x99 into your app?\\\\n\\\\nThis is where deployment comes in. Deploying your machine learning model as a REST API allows you to use your model across different environments and for different applications regardless of language. Its language agnostic because virtually every language allows you to work with APIs. Watson Machine Learning helps you deploy your model as a REST API with only 9 lines of code. This means it\\xe2\\x80\\x99s quick and easy to start building up applications with your awesome ML models. \\\\n\\\\nWant to learn how?\\\\n\\\\nWell, in this video you\\'ll learn how to:\\\\n- Setup a Watson Machine Learning Service\\\\n- Deploy your machine learning model with only 9 lines of code\\\\n- Send scoring requests to your deployed machine learning model via REST API\\\\n\\\\nStuff mentioned in the video:\\\\n- IBM Cloud: https://cloud.ibm.com/\\\\n- Watson Machine Learning Python Client: https://wml-api-pyclient.mybluemix.net/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nChill Day - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "1138",
    "uploadDate": "2020-07-13",
    "thumbnail_url": "https://i.ytimg.com/vi/_2gHffpM9Q8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=LglAar_m5ZY",
    "title": "Python Machine Learning with Scikit Learn - Regression || Python Machine Learning PT.3",
    "tags": "Python, machine learning, scikit learn, regression",
    "scraped_at": 1685095314.231463,
    "genre": "Science",
    "views": "6384",
    "desc": "The modelling phase of the data science lifecycle is without a doubt the most fun part, it\\'s where you get to select a bunch of algorithms and train them to detect patterns within your data. \\\\n\\\\nIf you want, you can take it one step further and begin to automate some of the decisions that traditionally as a data scientist you\\'d have to make. In this video, we\\'ll go through how to you can take the guess work out of selecting the right machine learning algorithm using Python Scikit Learn. \\\\n\\\\nIn this video you\\'ll learn how to:\\\\n- Train Python machine learning models with Scikit Learn\\\\n- Perform automated hyperparameter tuning using GridSearchCV\\\\n- Evaluate model performance with sklearn.metrics \\\\n\\\\nGet the dataset in the GitHub repository: https://github.com/nicknochnack/ScikitLearnRegression\\\\n\\\\nStuff mentioned in the video:\\\\n- Ridge: https://scikit-learn.org/stable/modules/linear_model.html#ridge-regression-and-classification\\\\n- Lasso: https://scikit-learn.org/stable/modules/linear_model.html#lasso\\\\n- ElasticNet: https://scikit-learn.org/stable/modules/linear_model.html#elastic-net\\\\n- RandomForestRegressor: https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestRegressor.html\\\\n- GradientBoostingRegressor: https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.GradientBoostingRegressor.html\\\\n- GridSearchCV: https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nBetter Days - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "1095",
    "uploadDate": "2020-07-06",
    "thumbnail_url": "https://i.ytimg.com/vi/LglAar_m5ZY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=FFM8YUKzT8o",
    "title": "Preparing Pandas Dataframes for Machine Learning || Python Machine Learning PT.2",
    "tags": "python, pandas, data science",
    "scraped_at": 1685095310.689167,
    "genre": "Science",
    "views": "6052",
    "desc": "So before you jump right into the deep end with machine learning you need to work out what to do with your data. This is where data preparation comes in. It\\'s where you\\'ll probably spend 80% of your time when working on Data Science projects but it\\'s often also where you\\'re able to contribute the most value. \\\\n\\\\nData preparation is often where you fix data types, perform scaling, create new features and prepare your data for modelling. \\\\n\\\\nIn part two of the Python Machine Learning Regression series you\\'ll learn how to:\\\\n- Cast columns to new data stypes using  df[col].astype()\\\\n- Identify and drop unneeded columns with df.drop()\\\\n- One-hot encode data using pd.get_dumimes()\\\\n\\\\nOther Resources\\\\nPandas: https://pandas.pydata.org/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nBetter Days - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "696",
    "uploadDate": "2020-07-05",
    "thumbnail_url": "https://i.ytimg.com/vi/FFM8YUKzT8o/maxresdefault.jpg"
  },
  {
    "link": "watch?v=rr-KwIjinpM",
    "title": "Exploratory Data Analysis With Pandas || Python Machine Learning PT.1",
    "tags": "python, pandas, matplotlib",
    "scraped_at": 1685095314.8024373,
    "genre": "Science",
    "views": "21257",
    "desc": "Want to know what a modern day superpower looks like\\xe2\\x80\\xa6\\\\n\\\\nJust learn machine learning with Python!\\\\n\\\\nAlright, well maybe it\\xe2\\x80\\x99s not quite a super power but it sure does get close. Advancements in machine learning have meant that the world is becoming just a slightly better place. Machine learning is now used in drug discovery, predicting migration flows and for identifying disease. \\\\n\\\\nWant to start your journey? It all begins with exploratory data analysis with Python!\\\\n\\\\nIn part one of the Python Machine Learning series, you\\xe2\\x80\\x99ll learn\\\\n- How to work with data in Python\\\\n- Conduct exploratory analysis using the Pandas library\\\\n- Create stunning visualisations with Seaborn and Matplotlib\\\\n\\\\nOther Resources\\\\nPandas: https://pandas.pydata.org/\\\\nSeaborn: https://seaborn.pydata.org/\\\\nMatplotlib: https://matplotlib.org/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nBetter Days - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "1795",
    "uploadDate": "2020-07-02",
    "thumbnail_url": "https://i.ytimg.com/vi/rr"
  },
  {
    "link": "watch?v=EzhzJyu77y8",
    "title": "Optimizing Resource Allocation with Docplex and Planning Analytics || Marketing Opt PT.4",
    "tags": "python, linear programming, planning analytics, docplex",
    "scraped_at": 1685095315.7024367,
    "genre": "Science",
    "views": "1791",
    "desc": "Choose wisely you must\\xe2\\x80\\xa6\\\\n\\\\n\\xe2\\x80\\xa6or just have Decision Optimisation choose for you!\\\\n\\\\nDO helps make decisions for you so you don\\xe2\\x80\\x99t have to, in this video, DO works to help you allocate budget more effectively. \\\\n\\\\nIn the final part of the Marketing Optimization series you\\xe2\\x80\\x99ll learn:\\\\n- How to build optimization models with Docplex in Python\\\\n- Leverage data from Planning Analytics as part of the optimization model\\\\n- Pushing optimisation results back into Planning Analytics and visualising it in Workspace\\\\n\\\\nBackground\\\\nOptimization works hand in hand with machine learning to help you make better decisions. One of the fastest APIs for optimisation happens to be CPLEX. You can use it alongside Python by leveraging the Docplex library. \\\\n\\\\nOther Resources\\\\nTM1py: https://github.com/cubewise-code/tm1py-samples\\\\nIBM Decision Optimization: http://ibmdecisionoptimization.github.io/docplex-doc/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nBetter Days - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "855",
    "uploadDate": "2020-06-26",
    "thumbnail_url": "https://i.ytimg.com/vi/EzhzJyu77y8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=x-VQ0Nr-Pg0",
    "title": "Building Marketing Dashboards with Planning Analytics Workspace || Marketing Opt PT.3",
    "tags": "planning analytics, tm1",
    "scraped_at": 1685095310.6241925,
    "genre": "Science",
    "views": "851",
    "desc": "Alrighty, we\\xe2\\x80\\x99re onto part three of the marketing optimisation series!\\\\n\\\\nBy now, you\\xe2\\x80\\x99ve built a cube.\\\\n\\\\nYou\\xe2\\x80\\x99ve loaded some data.\\\\n\\\\nBut how to your visualise it?\\\\n\\\\nThis video has you covered. \\\\n\\\\nIn part three of the Marketing Optimization series we\\'re going to be covering:\\\\n- How to build a dashboard using Planning Analytics Workspace\\\\n- Adding navigation/workflow between sheets\\\\n- Attaching rules to a cube from PAW\\\\n\\\\nOther Resources\\\\nTM1py: https://github.com/cubewise-code/tm1py-samples\\\\nIBM Decision Optimization: http://ibmdecisionoptimization.github.io/docplex-doc/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nBetter Days - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "1167",
    "uploadDate": "2020-06-25",
    "thumbnail_url": "https://i.ytimg.com/vi/x"
  },
  {
    "link": "watch?v=Qg8DwCzXg24",
    "title": "Loading Data into Planning Analytics with Python || Marketing Opt PT.2",
    "tags": "python, planning analytics, tm1py",
    "scraped_at": 1685095310.758192,
    "genre": "Science",
    "views": "1950",
    "desc": "Not quite sure if you could be doing better with your marketing?\\\\n\\\\nWish you could eek out just a little more out of your spend?\\\\n\\\\nConfused about ROAS? A/B Testing? \\\\n\\\\nSay no more! In part two of the Marketing Optimization series we\\'re going to be covering:\\\\n- How to build new dimensions for a Marketing Opt Cube\\\\n- Creating a marketing Optimization Cube in Planning Analytics\\\\n- Loading data into the cube using Python and TM1py\\\\n\\\\nOther Resources\\\\nTM1py: https://github.com/cubewise-code/tm1py-samples\\\\nIBM Decision Optimization: http://ibmdecisionoptimization.github.io/docplex-doc/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nBetter Days - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "707",
    "uploadDate": "2020-06-19",
    "thumbnail_url": "https://i.ytimg.com/vi/Qg8DwCzXg24/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ufYtueq2DCw",
    "title": "Solving Optimization Problems with Python Linear Programming",
    "tags": "linear programming, python",
    "scraped_at": 1685095310.829169,
    "genre": "Science",
    "views": "61270",
    "desc": "Want to solve complex linear programming problems faster?\\\\n\\\\nThrow some Python at it!\\\\n\\\\nLinear programming is a part of the field of mathematical programming and is a powerful way of solving complex combinatorial problems. It\\'s used in manufacturing, resources, defence and transport quite extensively to improve outcomes and push performance.\\\\n\\\\nWant to learn more? Well in this video, you\\'ll learn:\\\\n- The three key parts to any linear programming problem\\\\n- How to formulate a manufacturing optimization problem\\\\n- To solve linear programming problems with docplex and Python!\\\\n\\\\nGet the code: https://github.com/nicknochnack/LinearProgrammingBasics\\\\n\\\\nOther Resources\\\\nDocplex Documentation: http://ibmdecisionoptimization.github.io/docplex-doc/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\"",
    "lengthSeconds": "589",
    "uploadDate": "2020-06-17",
    "thumbnail_url": "https://i.ytimg.com/vi/ufYtueq2DCw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=KE33E_Ilta4",
    "title": "Optimizing Marketing Spend using Linear Programming || Marketing Opt PT.1",
    "tags": "python, linear programming, optimization, marketing",
    "scraped_at": 1685095314.876438,
    "genre": "Science",
    "views": "4302",
    "desc": "Not quite sure if you could be doing better with your marketing?\\\\n\\\\nWish you could eek out just a little more out of your spend?\\\\n\\\\nConfused about ROAS? A/B Testing? \\\\n\\\\nSay no more!\\\\n\\\\nIn this video you\\'ll learn how to:\\\\n- Optimize marketing spend using Linear Programming\\\\n- Integrate Decision Optimization into Planning Analytics\\\\n- Model Profit and Income using Planning Analytics Workspace\\\\n\\\\nOther Resources\\\\nTM1py: https://github.com/cubewise-code/tm1py-samples\\\\nIBM Decision Optimization: http://ibmdecisionoptimization.github.io/docplex-doc/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nBetter Days - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "473",
    "uploadDate": "2020-06-06",
    "thumbnail_url": "https://i.ytimg.com/vi/KE33E_Ilta4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=iPUWwpocc1c",
    "title": "AI vs Machine Learning vs Deep Learning vs Data Science",
    "tags": "ai, machine learning, data science, python",
    "scraped_at": 1685095314.9484398,
    "genre": "Science",
    "views": "3964",
    "desc": "Not sure whether to use Deep Learning or Data Science?\\\\n\\\\nSomeone told you to use TensorFlow instead of PyTorch?\\\\n\\\\nPandas got you puzzled?\\\\n\\\\nI hear you, in this video you\\'re going to get the breakdown!\\\\n\\\\nYou\\'ll learn:\\\\n- The difference between Artificial Intelligence vs Machine Learning vs Deep Learning vs Data Science\\\\n- The core components within each of these fields\\\\n- Python package behind each one of them!\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nBetter Days - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "525",
    "uploadDate": "2020-06-03",
    "thumbnail_url": "https://i.ytimg.com/vi/iPUWwpocc1c/maxresdefault.jpg"
  },
  {
    "link": "watch?v=6iHFdS_PQjc",
    "title": "Automate Budgeting with Python and Planning Analytics",
    "tags": "python, finance automation, budgeting, machine learning",
    "scraped_at": 1685095315.031439,
    "genre": "Science",
    "views": "20437",
    "desc": "Copying and pasting last month\\'s budget?\\\\n\\\\nTired of the same \\'ol forecast?\\\\n\\\\nJust want to do stuff faster?\\\\n\\\\nI hear you, in this video you\\'re going to learn how to amp up your budgeting and forecasting process using Planning Analytics and AutoAI\\\\n\\\\nYou\\'ll learn how to\\\\n- Extract data from Planning Analytics using Python\\\\n- Generate a machine learning model to predict expenses using AutoAI\\\\n- Create new predictions for new periods and drive them back into Planning Analytics using TM1py\\\\n\\\\nOther Resources\\\\nTM1py: https://github.com/cubewise-code/tm1py-samples\\\\nInstalling Watson Machine Learning API Client: Watson Machine Learning API Client https://wml-api-pyclient.mybluemix.net/\\\\nWorking on Watson Studio: https://dataplatform.cloud.ibm.com/\\\\n\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nBetter Days - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "1842",
    "uploadDate": "2020-05-30",
    "thumbnail_url": "https://i.ytimg.com/vi/6iHFdS_PQjc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=pCuV_7H2vyQ",
    "title": "Sales Forecasting in Excel with Machine Learning and Python Automation",
    "tags": "python, machine learning, excel",
    "scraped_at": 1685095315.8454363,
    "genre": "Science",
    "views": "25345",
    "desc": "Tired of manually creating a sales forecast each month?\\\\n\\\\nOver copying and pasting last year\\'s estimate?\\\\n\\\\nJust want to do stuff faster?\\\\n\\\\nSay no more, in this video you\\'ll learn how to automate sales forecasting in Excel with AutoAI and python automation. \\\\n\\\\nYou\\'ll learn how to\\\\n- How to build a machine learning pipeline to forecast sales using Watson AutoAI\\\\n- Deploying the machine learning pipeline to integrate into other apps\\\\n- Write Python scripts to automate the forecasting process from your desktop!\\\\n\\\\nOther Resources\\\\nGitHub: https://github.com/nicknochnack/ExcelSalesForecast\\\\nInstalling Watson Machine Learning API Client: Watson Machine Learning API Client https://wml-api-pyclient.mybluemix.net/\\\\nWorking on Watson Studio: https://dataplatform.cloud.ibm.com/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nBetter Days - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "1219",
    "uploadDate": "2020-05-27",
    "thumbnail_url": "https://i.ytimg.com/vi/pCuV_7H2vyQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=TsK289LVlrY",
    "title": "Predicting Churn with Automated Python Machine Learning",
    "tags": "python, machine learning, artificial intelligence",
    "scraped_at": 1685095315.9134634,
    "genre": "Science",
    "views": "5568",
    "desc": "Churn is a destroyer of businesses....\\\\n\\\\nSo how do you get ahead of it, you learn how to predict it. \\\\n\\\\nIn this video you\\'ll learn everything that\\'s needed to get ahead of your churn rate. We\\'ll go through:\\\\n- How to build a machine learning pipeline to predict churn\\\\n- Deploying the machine learning pipeline and making predictions\\\\n- Generating a Python Jupyter Notebook from the automated pipeline\\\\n\\\\nDownload the dataset: https://www.kaggle.com/blastchar/telco-customer-churn/data#\\\\n\\\\nGet Watson Studio: https://dataplatform.cloud.ibm.com/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nBetter Days - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "1017",
    "uploadDate": "2020-05-24",
    "thumbnail_url": "https://i.ytimg.com/vi/TsK289LVlrY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=-rejmmjSnHM",
    "title": "Javascript Chatbot From Scratch with React.Js [Part 2]",
    "tags": "javascript, chatbot, reactjs",
    "scraped_at": 1685095315.9874396,
    "genre": "Science",
    "views": "19707",
    "desc": "Want to build your very own chatbot app?\\\\n\\\\nThis video runs through how to do just that. In the second part of this two part series we\\'ll go through:\\\\n- How to build a React.Js App\\\\n- Connecting your front-end to the back-end API\\\\n- Improving your app\\xe2\\x80\\x99s look and feel using CSS and dynamic scrolling\\\\n\\\\nWant to follow along with the code, this check out the github repository: https://github.com/nicknochnack/ReactChatBot\\\\n\\\\nWant to learn more about it all:\\\\nWatson Assistant: https://www.ibm.com/cloud/watson-assistant/\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte/\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nBetter Days - https://www.youtube.com/watch?v=vtHGESuQ22s\"",
    "lengthSeconds": "4036",
    "uploadDate": "2020-05-21",
    "thumbnail_url": "https://i.ytimg.com/vi/"
  },
  {
    "link": "watch?v=D_doogJln14",
    "title": "Chatbot App Tutorial with Javascript Node.js [Part 1]",
    "tags": "javascript, nodejs, chatbot",
    "scraped_at": 1685095315.1854386,
    "genre": "Science",
    "views": "22924",
    "desc": "Want to build your very own chatbot app?\\\\n\\\\nThis video runs through how to do just that. In part one of this two part series we\\'ll go through:\\\\n- How to build a Node.Js API with Express\\\\n- Parsing messages from the Watson Assistant API \\\\n- How to handle user sessions for chatbot conversations\\\\n\\\\nWant to learn more about it all:\\\\nWatson Assistant: https://www.ibm.com/cloud/watson-assi...\\\\n\\\\nGet FREE stuff!\\\\nFree Trials: https://cloud.ibm.com/catalog/service...\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic by Lakey Inspired\\\\nBetter Days - https://www.youtube.com/watch?v=vtHGESuQ22s\\\\nChill Day - https://www.youtube.com/watch?v=3HjG1Y4QpVA\\\\nMonroe - https://www.youtube.com/watch?v=zhoHfiLGbY4\"",
    "lengthSeconds": "627",
    "uploadDate": "2020-05-18",
    "thumbnail_url": "https://i.ytimg.com/vi/D_doogJln14/maxresdefault.jpg"
  },
  {
    "link": "watch?v=s6cw6R5hu5c",
    "title": "Building a Reddit Keyword Research Chatbot",
    "tags": "watson assistant, chatbot, reddit, web scraping, keyword research",
    "scraped_at": 1685095310.9051986,
    "genre": "Science",
    "views": "1157",
    "desc": "Working out what to write about can be a nightmare. \\\\n\\\\nThis applies if you\\'re creating YouTube videos, blogging, and creating just about any type of content. \\\\n\\\\nThis doesn\\'t need to be so hard. \\\\n\\\\nThis video runs through how to scrape data from Reddit to perform better keyword research. I\\'ll go through:\\\\n- How to use web scraping to get data from Reddit using Watson Discovery\\\\n- How to setup a basic chatbot that integrates to Watson Discovery\\\\n- How to use Watson Assistant to query your reddit data\\\\n\\\\nWant to learn more about it all:\\\\nWatson Assistant: https://www.ibm.com/cloud/watson-assistant/\\\\nWatson Discovery: https://www.ibm.com/cloud/watson-discovery\\\\n\\\\nGet FREE stuff!\\\\nFree Trials: https://cloud.ibm.com/catalog/services/watson-assistant\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic: Ark \\xc2\\xb7 Ship Wrek \\xc2\\xb7 Zookeepers (https://youtu.be/rgxfky2vqw4)\"",
    "lengthSeconds": "682",
    "uploadDate": "2020-05-13",
    "thumbnail_url": "https://i.ytimg.com/vi/s6cw6R5hu5c/maxresdefault.jpg"
  },
  {
    "link": "watch?v=xof1OgxcRhY",
    "title": "Shopify Customer Service Chatbot using Python Automation",
    "tags": "python automation, watson assistant, shopify, customer service",
    "scraped_at": 1685095315.2694368,
    "genre": "Science",
    "views": "5714",
    "desc": "Tired of the same ol\\' sucky customer service?\\\\n\\\\nYou\\'re not alone!\\\\n\\\\nThis video runs through how to boost your Shopify customer service game using Watson Assistant and Python Webhooks. I\\'ll go through:\\\\n- How to use Python Automation to get Shopify Order Status\\\\n- Handling customer enquiries using Watson Assistant\\\\n- How display a chatbot on your Shopify home page!\\\\n\\\\nWant to learn more about it all:\\\\nWatson Assistant: https://www.ibm.com/cloud/watson-assistant/\\\\nServerless Functions: https://cloud.ibm.com/docs/openwhisk?topic=cloud-functions-getting-started\\\\nPostman: https://www.postman.com/\\\\n\\\\nGet FREE stuff!\\\\nFree Trials: https://cloud.ibm.com/catalog/services/watson-assistant\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\\\\n\\\\nMusic: Ark \\xc2\\xb7 Ship Wrek \\xc2\\xb7 Zookeepers (https://youtu.be/rgxfky2vqw4)\"",
    "lengthSeconds": "1345",
    "uploadDate": "2020-05-11",
    "thumbnail_url": "https://i.ytimg.com/vi/xof1OgxcRhY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=CeId265HGnM",
    "title": "Chatbot Crash Course for Absolute Beginners - Full 20 Minute Tutorial",
    "tags": "chatbot, chatbots, chatbot tutorial, facebook chatbot",
    "scraped_at": 1685095316.057438,
    "genre": "Science",
    "views": "5645",
    "desc": "Let\\'s face it, everybody wants a chatbot...\\\\n\\\\nAnd ya know what? Everybody can have one!\\\\n\\\\nThis crash course runs through the everything you need to know to get up and running with your very own chatbot super fast! We\\'ll run through:\\\\n- How to build and deploy a Watson Assistant Bot\\\\n- Understanding Entities, Intents and Dialog\\\\n- How to handle online orders!\\\\n\\\\nHere\\'s a bunch of awesome resources on Watson Assistant \\\\nDocumentation: https://cloud.ibm.com/docs/assistant?topic=assistant-getting-started\\\\nFree Trials: https://cloud.ibm.com/catalog/services/watson-assistant\\\\n\\\\nOh, and don\\'t forget to connect with me!\\\\nLinkedIn: https://www.linkedin.com/in/nicholasr...\\\\nFacebook: https://www.facebook.com/nickrenotte/\\\\nGitHub: https://github.com/nicknochnack\\\\n\\\\nHappy coding!\\\\nNick\\\\n\\\\nP.s. Let me know how you go and drop a comment if you need a hand!\"",
    "lengthSeconds": "1275",
    "uploadDate": "2020-05-08",
    "thumbnail_url": "https://i.ytimg.com/vi/CeId265HGnM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=nxRRf0ebPxU",
    "title": "AI learns what to do next using Tensorflow and Python",
    "tags": "Python, tensorflow, machine learning, deep learning",
    "scraped_at": 1685095315.341437,
    "genre": "Science",
    "views": "1315",
    "desc": "What if you could predict what\\'s going to happen next? Maybe it\\'d make life just that little bit easier. In this post I run through how to predict the next most likely event using Python and TensorFlow 2. \\\\n\\\\nIt goes through how to....\\\\n- Preprocess your event data\\\\n- Structure an LSTM model to predict events\\\\n- Generate the next best action in order to drive progress\\\\n\\\\nBlog Post: https://www.nicholasrenotte.com/how-to-predict-the-next-best-action-to-progress-sales-with-tensorflow-2/\\\\n\\\\nGithub Repo with Data: https://github.com/nicknochnack/tensorflow-next-best-action\\\\n\\\\nHappy coding!\"",
    "lengthSeconds": "1737",
    "uploadDate": "2019-12-21",
    "thumbnail_url": "https://i.ytimg.com/vi/nxRRf0ebPxU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=AHc5ylZaiLY",
    "title": "How to Build a Watson Discovery Web Crawler - Part 2 - Stock News Crawler",
    "tags": "Watson discovery, ibm Watson discovery, natural language processing, web crawl",
    "scraped_at": 1685095311.757166,
    "genre": "Science",
    "views": "2307",
    "desc": "Tired of searching the web for stock data? Get yourself setup with Watson Discovery and build a stock news crawler in under an hour. \\\\n\\\\nWhat\\xe2\\x80\\x99s Watson Discovery?\\\\nIt\\xe2\\x80\\x99s your own personalised search engine built on top of IBM Watson. You can upload your own documents and search them using natural language queries and the IBM Discovery query language. \\\\n\\\\nHere\\xe2\\x80\\x99s what you\\xe2\\x80\\x99ll learn! \\\\n- How to connect to a data source\\\\n- How to setup a Watson Discovery Web Crawler\\\\n- How to customise your web crawl frequency\\\\n\\\\nRather read a blog post\\xe2\\x80\\xa6?\\\\nFollow along with the blog post? Check it out here: https://https://www.nicholasrenotte.com/how-to-build-a-stock-news-crawler-using-ibm-watson-discovery/\\\\n\\\\nWant more data and analytics goodness?!? \\\\nWant more awesome data and analytics stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "264",
    "uploadDate": "2019-03-13",
    "thumbnail_url": "https://i.ytimg.com/vi/AHc5ylZaiLY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=3jJcS7owO1U",
    "title": "How to Understand the Watson Discovery Data Schema  - Part 3 - Stock News Crawler",
    "tags": "Watson discovery, ibm Watson discovery, natural language processing",
    "scraped_at": 1685095310.977169,
    "genre": "Science",
    "views": "1222",
    "desc": "Tired of searching the web for stock data? Get yourself setup with Watson Discovery and build a stock news crawler in under an hour. \\\\n\\\\nWhat\\xe2\\x80\\x99s Watson Discovery?\\\\nIt\\xe2\\x80\\x99s your own personalised search engine built on top of IBM Watson. You can upload your own documents and search them using natural language queries and the IBM Discovery query language. \\\\n\\\\nHere\\xe2\\x80\\x99s what you\\xe2\\x80\\x99ll learn! \\\\n- Get an understanding of the Watson Discovery data schema\\\\n- Learn the difference between Concepts, Categories and Entities in WD\\\\n\\\\nRather read a blog post\\xe2\\x80\\xa6?\\\\nFollow along with the blog post? Check it out here: https://https://www.nicholasrenotte.com/how-to-build-a-stock-news-crawler-using-ibm-watson-discovery/\\\\n\\\\nWant more data and analytics goodness?!? \\\\nWant more awesome data and analytics stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "426",
    "uploadDate": "2019-03-13",
    "thumbnail_url": "https://i.ytimg.com/vi/3jJcS7owO1U/maxresdefault.jpg"
  },
  {
    "link": "watch?v=KewKapgrmrQ",
    "title": "How to Run Search Queries with IBM Watson Discovery - Part 4 - Stock News Crawler",
    "tags": "Watson discovery, ibm Watson discovery, natural language processing",
    "scraped_at": 1685095311.042196,
    "genre": "Science",
    "views": "1284",
    "desc": "Tired of searching the web for stock data? Get yourself setup with Watson Discovery and build a stock news crawler in under an hour. \\\\n\\\\nWhat\\xe2\\x80\\x99s Watson Discovery?\\\\nIt\\xe2\\x80\\x99s your own personalised search engine built on top of IBM Watson. You can upload your own documents and search them using natural language queries and the IBM Discovery query language. \\\\n\\\\nHere\\xe2\\x80\\x99s what you\\xe2\\x80\\x99ll learn! \\\\n- How to run queries using the query box builder\\\\n- How to run queries in natural language\\\\n- How to run queries using Watson Discovery query language\\\\n\\\\nRather read a blog post\\xe2\\x80\\xa6?\\\\nFollow along with the blog post? Check it out here: https://https://www.nicholasrenotte.com/how-to-build-a-stock-news-crawler-using-ibm-watson-discovery/\\\\n\\\\nWant more data and analytics goodness?!? \\\\nWant more awesome data and analytics stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "232",
    "uploadDate": "2019-03-13",
    "thumbnail_url": "https://i.ytimg.com/vi/KewKapgrmrQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=hEo_la9bT6Y",
    "title": "How to Run Advanced Queries with Watson Discovery - Part 5 - Stock News Crawler",
    "tags": "Watson discovery, ibm Watson discovery, natural language processing",
    "scraped_at": 1685095311.8191664,
    "genre": "Science",
    "views": "912",
    "desc": "Tired of searching the web for stock data? Get yourself setup with Watson Discovery and build a stock news crawler in under an hour. \\\\n\\\\nWhat\\xe2\\x80\\x99s Watson Discovery?\\\\nIt\\xe2\\x80\\x99s your own personalised search engine built on top of IBM Watson. You can upload your own documents and search them using natural language queries and the IBM Discovery query language. \\\\n\\\\nHere\\xe2\\x80\\x99s what you\\xe2\\x80\\x99ll learn! \\\\n- How to use aggregations to analyse your documents\\\\n- How to build sub aggregations to delve deeper\\\\n- How to use filters to improve the performance of your queries\\\\n\\\\nRather read a blog post\\xe2\\x80\\xa6?\\\\nFollow along with the blog post? Check it out here: https://https://www.nicholasrenotte.com/how-to-build-a-stock-news-crawler-using-ibm-watson-discovery/\\\\n\\\\nWant more data and analytics goodness?!? \\\\nWant more awesome data and analytics stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "163",
    "uploadDate": "2019-03-13",
    "thumbnail_url": "https://i.ytimg.com/vi/hEo_la9bT6Y/maxresdefault.jpg"
  },
  {
    "link": "watch?v=py8QwrIUynE",
    "title": "Getting Started With IBM Watson Discovery - Part 1 - Stock News Crawler",
    "tags": "Watson discovery, ibm Watson discovery, natural language processing",
    "scraped_at": 1685095311.8831685,
    "genre": "Science",
    "views": "2698",
    "desc": "Tired of searching the web for stock data? Get yourself setup with Watson Discovery and build a stock news crawler in under an hour. \\\\n\\\\nWhat\\xe2\\x80\\x99s Watson Discovery?\\\\nIt\\xe2\\x80\\x99s your own personalised search engine built on top of IBM Watson. You can upload your own documents and search them using natural language queries and the IBM Discovery query language. \\\\n\\\\nHere\\xe2\\x80\\x99s what you\\xe2\\x80\\x99ll learn! \\\\n- How to log into IBM Cloud\\\\n- How to Spin up a Watson Discovery service\\\\n- How to get to the Watson Discovery Dashboard\\\\n\\\\nRather read a blog post\\xe2\\x80\\xa6?\\\\nFollow along with the blog post? Check it out here: https://https://www.nicholasrenotte.com/how-to-build-a-stock-news-crawler-using-ibm-watson-discovery/\\\\n\\\\nWant more data and analytics goodness?!? \\\\nWant more awesome data and analytics stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "169",
    "uploadDate": "2019-03-12",
    "thumbnail_url": "https://i.ytimg.com/vi/py8QwrIUynE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=8StpGqv6_n0",
    "title": "Deploy and Make Predictions With Watson Studio - Part 5 - Predicting Used Car Prices",
    "tags": "ibm watson, REST API, regression prediction",
    "scraped_at": 1685095311.1121943,
    "genre": "Science",
    "views": "1142",
    "desc": "Build a predictive model in IBM Watson Studio? Learn how to deploy it via REST API and start making predictions using Python and Jupyter Notebooks. \\\\n\\\\nWant to follow along with the blog post? Check it out here: https://www.nicholasrenotte.com/how-to-predict-car-prices-using-watson-studio-machine-learning/\\\\n\\\\nWant more awesome data and analytics stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "795",
    "uploadDate": "2019-03-10",
    "thumbnail_url": "https://i.ytimg.com/vi/8StpGqv6_n0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=dWWlG5LPL6Y",
    "title": "Using Watson Model Builder to Predict Car Prices - Part 4 - Predicting Used Car Prices",
    "tags": "watson, watson model builder, ibm, regression",
    "scraped_at": 1685095311.9491947,
    "genre": "Science",
    "views": "1258",
    "desc": "Want to build a predictive model? How about building one with just a few clicks? \\\\n\\\\nWatson Model Builder allows you to do exactly that. Using the platform you can train and test classification and regression models with just a few clicks. In this video you\\xe2\\x80\\x99ll learn how to do that as well as learning how to evaluate the appropriate metrics and save your model for deployment.\\\\n\\\\nWant to follow along with the blog post? Check it out here: https://www.nicholasrenotte.com/how-to-predict-car-prices-using-watson-studio-machine-learning/\\\\n\\\\nWant more awesome data and analytics stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "524",
    "uploadDate": "2019-03-09",
    "thumbnail_url": "https://i.ytimg.com/vi/dWWlG5LPL6Y/maxresdefault.jpg"
  },
  {
    "link": "watch?v=iwX7pOgUHzs",
    "title": "Clean Data and Feature Engineer in IBM Watson Studio - Part  3 - Predict Used Car Prices",
    "tags": "data refinery, ibm watson, watson studio, data cleaning, feature engineering",
    "scraped_at": 1685095311.182194,
    "genre": "People",
    "views": "918",
    "desc": "Data prep and feature engineering are arguably some of the most important parts of the data science process.\\\\n\\\\nIn this video you\\xe2\\x80\\x99ll learn how to do exactly that using IBM Watson Studio and specifically using a service called Data Refinery. It allows you to click and clean without any fuss. Simply choose the operation and run the cleaning step. We\\xe2\\x80\\x99ll also cover how to use R functions to conduct more complex feature engineering.\\\\n\\\\nWant to follow along with the blog post? Check it out here: https://www.nicholasrenotte.com/how-to-predict-car-prices-using-watson-studio-machine-learning/\\\\n\\\\nWant more awesome data and analytics stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "670",
    "uploadDate": "2019-03-07",
    "thumbnail_url": "https://i.ytimg.com/vi/iwX7pOgUHzs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=52m8ozsv068",
    "title": "Upload and Visualize Data In IBM Watson Studio - Part 2 - Predicting Used Car Prices",
    "tags": "machine learning, python, seaborn, jupyter, ibm watson",
    "scraped_at": 1685095312.0141673,
    "genre": "People",
    "views": "3937",
    "desc": "Got your data, here\\xe2\\x80\\x99s how to upload and visualize it in Watson Studio. \\\\n\\\\nThere are a bunch of ways to visualise your data without writing code but with the click of a button you have have a Jupyter Notebook or R Studio running at once! In this walkthrough you\\xe2\\x80\\x99ll learn how to upload your data, create a data profile and visualize it using python and the seaborn library.\\\\n\\\\nWant to follow along with the blog post? Check it out here: https://www.nicholasrenotte.com/how-to-predict-car-prices-using-watson-studio-machine-learning/\\\\n\\\\nWant more awesome data and analytics stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "1059",
    "uploadDate": "2019-03-06",
    "thumbnail_url": "https://i.ytimg.com/vi/52m8ozsv068/maxresdefault.jpg"
  },
  {
    "link": "watch?v=wH3VPyb-LCE",
    "title": "Getting Started With IBM Watson Studio Machine Learning - Part 1 - Predicting Used Car Prices",
    "tags": "python, machine learning, ibm watson, watson studio, regression",
    "scraped_at": 1685095311.2501862,
    "genre": "People",
    "views": "6007",
    "desc": "Time to try your hand at machine learning!\\\\n\\\\nIBM Watson Studio has all the bells and whistles needed to get you started building, training and deploying production quality machine learning models. You can use all of your favourite coding languages including Python and R. Don\\xe2\\x80\\x99t like to code?  Watson Studio allows you to build models without writing a single line of code! \\\\n\\\\nWant to follow along with the blog post? Check it out here: https://www.nicholasrenotte.com/how-to-predict-car-prices-using-watson-studio-machine-learning/\\\\n\\\\nWant more awesome data and analytics stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "360",
    "uploadDate": "2019-03-05",
    "thumbnail_url": "https://i.ytimg.com/vi/wH3VPyb"
  },
  {
    "link": "watch?v=TkLMgTLuEKk",
    "title": "How to Plot Personality Insights Features at Lightspeed - Part 4  - IBM Watson Personality Insights",
    "tags": "IBM Watson, machine learning, python, personality insights",
    "scraped_at": 1685095312.078168,
    "genre": "People",
    "views": "666",
    "desc": "Tired of visualising each feature one by one?\\\\n\\\\nWe\\xe2\\x80\\x99ll run through how to create pipeline function to visualise faster, better and stronger (*daft punk reference intended*) from IBM Watson Personality Insights\\\\n\\\\nWant to follow along with the blog post? Check it out here: https://www.nicholasrenotte.com/how-to-develop-customer-profiles-using-ibm-watson-personality-insights/\\\\n\\\\nWant more awesome data and analytics stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "455",
    "uploadDate": "2019-02-11",
    "thumbnail_url": "https://i.ytimg.com/vi/TkLMgTLuEKk/maxresdefault.jpg"
  },
  {
    "link": "watch?v=3xukwXLDbbE",
    "title": "How to Setup a IBM Watson Personality Insights Service - Part 1 - Watson Personality Insights",
    "tags": "ibm watson, machine learning, personality insights, python",
    "scraped_at": 1685095312.1431682,
    "genre": "People",
    "views": "3898",
    "desc": "Want to get started with IBM Watson Personality Insights?\\\\n\\\\nThis tutorial gets you up and running with the Personality Insights API and Python step by step. We\\xe2\\x80\\x99ll go through how to create a service, how to generate API credentials and finally how to install the Watson Python SDK. \\\\n\\\\nWant to follow along with the blog post? Check it out here: https://www.nicholasrenotte.com/how-to-develop-customer-profiles-using-ibm-watson-personality-insights/\\\\n\\\\nWant more awesome data stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "339",
    "uploadDate": "2019-02-11",
    "thumbnail_url": "https://i.ytimg.com/vi/3xukwXLDbbE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Do5tCydKv8E",
    "title": "How to Create a Customer Profile with IBM Watson - Part 2 - Watson Personality Insights",
    "tags": "ibm watson, machine learning, personality insights, python",
    "scraped_at": 1685095311.3201864,
    "genre": "People",
    "views": "2093",
    "desc": "Setup is done and dusted. It\\xe2\\x80\\x99s time to generate some profiles!\\\\n\\\\nIn this video I\\xe2\\x80\\x99ll run through how to generate a customer (or any other human) profile from a block of text using IBM Watson Personality Insights. This whole tutorial will take you from blank slate to getting results that showcase the API\\xe2\\x80\\x99s awesome features. You\\xe2\\x80\\x99ll be able to analyse customer needs, values and their personality\\xe2\\x80\\xa6.all from a block of text. \\\\n\\\\nWant to follow along with the blog post? Check it out here: https://www.nicholasrenotte.com/how-to-develop-customer-profiles-using-ibm-watson-personality-insights/\\\\n\\\\nWant more awesome data and analytics stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "671",
    "uploadDate": "2019-02-11",
    "thumbnail_url": "https://i.ytimg.com/vi/Do5tCydKv8E/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ivhTe_b2aus",
    "title": "Visualising The Profile   Part 3   Watson Personality Insights",
    "tags": "ibm watson, machine learning, personality insights, python",
    "scraped_at": 1685095312.208186,
    "genre": "People",
    "views": "893",
    "desc": "Alright, so you\\xe2\\x80\\x99ve mastered the API\\xe2\\x80\\xa6.or have you?\\\\n\\\\nIn this tutorial we\\xe2\\x80\\x99ll run through how to visualise the results from IBM Watson Personality Insights so you can present them better! We\\xe2\\x80\\x99ll use Matplotlib and Seaborn to \\xe2\\x80\\x9ccreate some pretty charts\\xe2\\x80\\x9d so you can show them off to all your coworkers. \\\\n\\\\nWant to follow along with the blog post? Check it out here: https://www.nicholasrenotte.com/how-to-develop-customer-profiles-using-ibm-watson-personality-insights/\\\\n\\\\nWant more awesome data and analytics stuff?? Follow me on\\xe2\\x80\\xa6\\\\nBlog: www.nicholasrenotte.com \\\\nTwitter: https://twitter.com/nicholasrenotte\\\\nFacebook: https://www.facebook.com/nickrenotte\"",
    "lengthSeconds": "441",
    "uploadDate": "2019-02-11",
    "thumbnail_url": "https://i.ytimg.com/vi/ivhTe_b2aus/maxresdefault.jpg"
  },
  {
    "link": "watch?v=5ndLJp_pb2Q",
    "title": "How to Clean Text Based Data for NLP - Part 3 - Python Yelp Sentiment Analysis",
    "tags": "python, data cleaning, pandas",
    "scraped_at": 1685095311.3871675,
    "genre": "People",
    "views": "5479",
    "desc": "Working with huge reviews is draining!\\\\n\\\\nUsing a few quick lines of code you can begin to get meaningful insights from text. In this video you\\'ll learn how to clean your text data and reviews so that you can get ready for sentiment analysis and text mining using Pandas. \\\\n\\\\nWant to read the blog post: https://www.nicholasrenotte.com/how-to-build-a-sentiment-analyser-for-yelp-reviews-in-python/\"",
    "lengthSeconds": "731",
    "uploadDate": "2019-02-05",
    "thumbnail_url": "https://i.ytimg.com/vi/5ndLJp_pb2Q/maxresdefault.jpg"
  },
  {
    "link": "watch?v=9gjKx9Z9E9Y",
    "title": "How to Collect Business Reviews Using Python - Part 1 - Python Yelp Sentiment Analysis",
    "tags": "python, sentiment analysis, beautiful soup",
    "scraped_at": 1685095316.4894402,
    "genre": "People",
    "views": "8228",
    "desc": "Need your business review data from a business review site? \\\\n\\\\nLearn how to leverage BeautifulSoup and python to get that data. \\\\n\\\\nRead the blog post: https://www.nicholasrenotte.com/how-to-build-a-sentiment-analyser-for-yelp-reviews-in-python/\"",
    "lengthSeconds": "380",
    "uploadDate": "2019-02-04",
    "thumbnail_url": "https://i.ytimg.com/vi/9gjKx9Z9E9Y/maxresdefault.jpg"
  },
  {
    "link": "watch?v=0j3l5GciFIo",
    "title": "How to Analyse Review Data - Part 2 - Python Yelp Sentiment Analysis",
    "tags": "sentiment analysis, python, nltk",
    "scraped_at": 1685095311.454166,
    "genre": "People",
    "views": "5144",
    "desc": "Trying to get a handle on your reviews? \\\\n\\\\nSay no more, in this video we go through how to analyse your business reviews. We\\'ll run through how to calculate word counts, character counts as well as taking a look at stop words using the popular NLTK library. \\\\n\\\\nWant to read the blog post: https://www.nicholasrenotte.com/how-to-build-a-sentiment-analyser-for-yelp-reviews-in-python/\"",
    "lengthSeconds": "774",
    "uploadDate": "2019-02-04",
    "thumbnail_url": "https://i.ytimg.com/vi/0j3l5GciFIo/maxresdefault.jpg"
  },
  {
    "link": "watch?v=BpDXGB-U7VE",
    "title": "How to Lemmatize Text - Part 4 - Python Yelp Sentiment Analysis",
    "tags": "sentiment analysis, python, nltk, lemmatization",
    "scraped_at": 1685095312.2791677,
    "genre": "People",
    "views": "2405",
    "desc": "Too many words in your reviews? \\\\n\\\\nLemmatization is a quick way to strip out variations of words within a body of text. In this video you\\'ll learn how to process each word of a review and lemmatize it, bringing it back to its base format using the TextBlob module. \\\\n\\\\nWant to read the blog post: https://www.nicholasrenotte.com/how-to-build-a-sentiment-analyser-for-yelp-reviews-in-python/\"",
    "lengthSeconds": "295",
    "uploadDate": "2019-02-04",
    "thumbnail_url": "https://i.ytimg.com/vi/BpDXGB"
  },
  {
    "link": "watch?v=UmNplE591rc",
    "title": "How to Calculate Sentiment Using TextBlob - Part 5 - Python Yelp Sentiment Analysis",
    "tags": "sentiment analysis, nltk, python, polarity, subjectivity",
    "scraped_at": 1685095316.1244376,
    "genre": "People",
    "views": "3304",
    "desc": "Tired of trying to work out which reviews you should be paying attention to? \\\\n\\\\nSentiment analysis is a quick way to quickly understand how your customers or users are feeling. In this video we\\'ll run through how to calculate sentiment using TextBlob.sentiment(). \\\\n\\\\nWant to read the blog post: https://www.nicholasrenotte.com/how-to-build-a-sentiment-analyser-for-yelp-reviews-in-python/\"",
    "lengthSeconds": "415",
    "uploadDate": "2019-02-04",
    "thumbnail_url": "https://i.ytimg.com/vi/UmNplE591rc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=GFSelpjYc4g",
    "title": "Getting an IBMid - Build An Image Classifier with IBM Watson - Part 1",
    "tags": "image classification, python, visual recognition, watson, image recognition, ibm",
    "scraped_at": 1685095315.407438,
    "genre": "People",
    "views": "3254",
    "desc": "Tired of struggling to build an image classifier from scratch, this series goes through how to start, build and use an image classifier using IBM Watson from start to finish using Python. \\\\n\\\\nNeed help? Check out the blog post:https://www.nicholasrenotte.com/how-to-build-your-first-image-recognition-classifier-with-ibm-watson-visual-recognition/\"",
    "lengthSeconds": "84",
    "uploadDate": "2019-01-29",
    "thumbnail_url": "https://i.ytimg.com/vi/GFSelpjYc4g/maxresdefault.jpg"
  },
  {
    "link": "watch?v=KDI-dr1vyi4",
    "title": "Creating A Service - Build An Image Classifier with IBM Watson - Part 2",
    "tags": "ibm, watson, python, visual recognition, image classification",
    "scraped_at": 1685095316.189464,
    "genre": "People",
    "views": "1450",
    "desc": "Tired of struggling to build an image classifier from scratch, this series goes through how to start, build and use an image classifier using IBM Watson from start to finish using Python. \\\\n\\\\nNeed help? Check out the blog post:https://www.nicholasrenotte.com/how-to-build-your-first-image-recognition-classifier-with-ibm-watson-visual-recognition/\"",
    "lengthSeconds": "123",
    "uploadDate": "2019-01-29",
    "thumbnail_url": "https://i.ytimg.com/vi/KDI"
  },
  {
    "link": "watch?v=JjuCGJyZacE",
    "title": "Generating Credentials - Build An Image Classifier with IBM Watson - Part 3",
    "tags": "image classification, python, ibm, visual recognition, watson",
    "scraped_at": 1685095315.4724586,
    "genre": "People",
    "views": "1014",
    "desc": "Tired of struggling to build an image classifier from scratch, this series goes through how to start, build and use an image classifier using IBM Watson from start to finish using Python. \\\\n\\\\nNeed help? Check out the blog post:https://www.nicholasrenotte.com/how-to-build-your-first-image-recognition-classifier-with-ibm-watson-visual-recognition/\"",
    "lengthSeconds": "83",
    "uploadDate": "2019-01-29",
    "thumbnail_url": "https://i.ytimg.com/vi/JjuCGJyZacE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=PPq79Q51Ya4",
    "title": "Installing Watson Developer Cloud - Build An Image Classifier with IBM Watson - Part 4",
    "tags": "visual recognition, image classification, python, ibm, watson",
    "scraped_at": 1685095316.2524571,
    "genre": "People",
    "views": "991",
    "desc": "Tired of struggling to build an image classifier from scratch, this series goes through how to start, build and use an image classifier using IBM Watson from start to finish using Python. \\\\n\\\\nNeed help? Check out the blog post:https://www.nicholasrenotte.com/how-to-build-your-first-image-recognition-classifier-with-ibm-watson-visual-recognition/\"",
    "lengthSeconds": "57",
    "uploadDate": "2019-01-29",
    "thumbnail_url": "https://i.ytimg.com/vi/PPq79Q51Ya4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=oKDkwZkzX48",
    "title": "General Image Classification - Build An Image Classifier with IBM Watson - Part 5",
    "tags": "watson, ibm, visual recognition, image classification, python",
    "scraped_at": 1685095316.3904603,
    "genre": "People",
    "views": "1349",
    "desc": "Tired of struggling to build an image classifier from scratch, this series goes through how to start, build and use an image classifier using IBM Watson from start to finish using Python. \\\\n\\\\nNeed help? Check out the blog post:https://www.nicholasrenotte.com/how-to-build-your-first-image-recognition-classifier-with-ibm-watson-visual-recognition/\"",
    "lengthSeconds": "323",
    "uploadDate": "2019-01-29",
    "thumbnail_url": "https://i.ytimg.com/vi/oKDkwZkzX48/maxresdefault.jpg"
  },
  {
    "link": "watch?v=FgZsV09npbs",
    "title": "Food Image Classification - Build An Image Classifier with IBM Watson - Part 6",
    "tags": "python, image classification, watson, visual recognition, ibm",
    "scraped_at": 1685095316.321439,
    "genre": "People",
    "views": "2012",
    "desc": "Tired of struggling to build an image classifier from scratch, this series goes through how to start, build and use an image classifier using IBM Watson from start to finish using Python. \\\\n\\\\nNeed help? Check out the blog post:https://www.nicholasrenotte.com/how-to-build-your-first-image-recognition-classifier-with-ibm-watson-visual-recognition/\"",
    "lengthSeconds": "138",
    "uploadDate": "2019-01-29",
    "thumbnail_url": "https://i.ytimg.com/vi/FgZsV09npbs/maxresdefault.jpg"
  }
]