[
  {
    "link": "watch?v=p5tMaWsuGk0",
    "title": "The secrets of Apple Lightning - Part 1",
    "tags": "iPhone, jailbreak, jailbreaking, apple, lightning, embedded, sdq, idbus",
    "scraped_at": 1684583941.1441903,
    "genre": "Science",
    "views": "583801",
    "desc": "Apple\\'s proprietary Lightning connector is very well known. But do you know how it works? How is a cable authenticated? What can you do with Lightning? In this video we dive into the details of Apple\\'s Lightning protocol - also known as SDQ and IDBUS!\\\\n\\\\nLinks:\\\\n- Twitter: https://twitter.com/ghidraninja\\\\n- Patreon: https://patreon.com/stacksmashing\\\\n- Nyan Satan\\'s Lightning page: https://nyansatan.github.io/lightning/\\\\n- My DEF CON talk on Lightning: https://www.youtube.com/watch?v=8p3Oi4DL0eI\\\\n- Saleae Logic Analyzer Plugin: http://github.com/nezza/SDQAnalyzer\"",
    "lengthSeconds": "585",
    "uploadDate": "2023-02-11",
    "thumbnail_url": "https://i.ytimg.com/vi/p5tMaWsuGk0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=7p_njRMqzrY",
    "title": "The Hitchhacker\u2019s Guide to iPhone Lightning and JTAG Hacking (DEF CON 30 Presentation)",
    "tags": "stacksmashing, hacking, iphone, jailbreak, kanzi, bonobo, security",
    "scraped_at": 1684583941.6712134,
    "genre": "Science",
    "views": "40401",
    "desc": "At DEF CON 30 I talked about a project I\\'ve been working on with a couple of friends for the past few month: The Tamarin Cable! An open-source Kanzi Cable.\\\\n\\\\nThanks to DEF CON for having me!\\\\n\\\\nLinks:\\\\n- Tamarin Firmware: https://github.com/stacksmashing/tamarin-firmware\\\\n- OpenOCD fork with Tamarin support: https://github.com/stacksmashing/openocd\\\\n- Twitter: https://twitter.com/ghidraninja\\\\n- Patreon: https://patreon.com/stacksmashing\\\\n\\\\nOriginal DEF CON recording: https://www.youtube.com/watch?v=8p3Oi4DL0eI\"",
    "lengthSeconds": "1213",
    "uploadDate": "2022-10-28",
    "thumbnail_url": "https://i.ytimg.com/vi/7p_njRMqzrY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=z9E38sN5nRQ",
    "title": "Can an AI drive Mario Kart 64?",
    "tags": "Mario Kart, Mario Kart 64, Nintendo, Nintendo 64, N64, Machine Learning, AI, ML, Tensorflow, raspberry pi, pico, rpi, Artificial Intelligence",
    "scraped_at": 1684583940.20319,
    "genre": "Science",
    "views": "80218",
    "desc": "Can TensorFlow learn to control Mario Kart 64 running on a real, physical Nintendo 64? In this video we are going to find out! Starring the Raspberry Pi Pico as a USB to Nintendo 64 adapter!\\\\n\\\\nMany many thanks again to Kevin Hughes for this awesome TensorKart project!\\\\n\\\\nIf you want to learn more about artificial intelligence, machine learning \\\\u0026 co, checkout TensorFlow: https://tensorflow.org/\\\\n\\\\nLinks:\\\\n- Original TensorKart: https://github.com/kevinhughes27/TensorKart\\\\n- My fork: https://github.com/stacksmashing/TensorKartRealHW\\\\n- Twitter: https://twitter.com/ghidraninja\\\\n- Patreon: https://patreon.com/stacksmashing\\\\n\\\\nTimestamps:\\\\n \\\\n00:00 Intro\\\\n00:37 The setup\\\\n01:32 TensorKart\\\\n02:28 Training the model\\\\n03:09 Lag :(\\\\n04:50 Training loss\\\\n05:20 Testing on hardware \\\\n06:20 More training\\\\n06:36 Results!\\\\n07:22 Does it generalize?\\\\n07:40 Outro\"",
    "lengthSeconds": "490",
    "uploadDate": "2021-11-14",
    "thumbnail_url": "https://i.ytimg.com/vi/z9E38sN5nRQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=64FgfhfvJ4s",
    "title": "Hacking the Game Boy with a Silver Play Button",
    "tags": "stacksmashing, game boy, retro, hacking, reverse engineering, fault injection, ghidraninja, 100k, gameboy",
    "scraped_at": 1684583939.981188,
    "genre": "Science",
    "views": "31908",
    "desc": "Thank you all for supporting my channel! It\\'s been awesome!\\\\n\\\\nLinks:\\\\n- Gekkio\\'s Disobey 2018 talk: https://www.youtube.com/watch?v=GBYwjch6oEE\\\\n- BennVenn\\'s bootrom dump: https://web.archive.org/web/20150329083720/http://www.bennvenn.com/MGB.htm\\\\n- SGB attack: http://www.its.caltech.edu/~costis/sgb_hack/\\\\n- Decapped ROM extraction: http://dot-matrix-game.blogspot.com/2014/01/boot-roms.html\\\\n- My cartridge: https://github.com/stacksmashing/gb-bootrom-dumper\\\\n\\\\nMy links:\\\\n- Twitter: https://twitter.com/ghidraninja\\\\n- Patreon: https://patreon.com/stacksmashing\"",
    "lengthSeconds": "280",
    "uploadDate": "2021-07-03",
    "thumbnail_url": "https://i.ytimg.com/vi/64FgfhfvJ4s/maxresdefault.jpg"
  },
  {
    "link": "watch?v=_E0PWQvW-14",
    "title": "How the Apple AirTags were hacked",
    "tags": "Apple, AirTag, AirTags, Hacking, Reverse Engineering, Hardware Hacking, GhidraNinja, stacksmashing",
    "scraped_at": 1684583939.8931904,
    "genre": "Science",
    "views": "1406517",
    "desc": "On Saturday, I managed to dump the firmware of the newly released Apple AirTags - and in this video I\\'ll show how I did it.\\\\n\\\\nI won\\'t share firmware dumps or so, so please don\\'t ask :)\\\\n\\\\nLinks:\\\\n- Colin on Twitter: http://twitter.com/colinoflynn\\\\n- Colin on YouTube: https://www.youtube.com/channel/UCqc9MJwX_R1pQC6A353JmJg\\\\n- Colin\\'s company: https://www.newae.com\\\\n- LimitedResults Appprotect bypass: https://limitedresults.com/2020/06/nrf52-debug-resurrection-approtect-bypass/\\\\n- LimitedResults Pocketglitcher: https://limitedresults.com/2021/03/the-pocketglitcher/\\\\n\\\\nMy links:\\\\n- Twitter: https://twitter.com/ghidraninja\\\\n- Patreon: https://patreon.com/stacksmashing\\\\n- Pico Debug\\'n\\'Dump board: https://gum.co/picodnd\\\\n\\\\nTimestamps:\\\\n\\\\n00:00 Intro\\\\n00:10 AirTags hardware\\\\n01:40 Debugging interface\\\\n02:35 Fault-Injection\\\\n04:30 Glitching the AirTags\\\\n05:50 Hardware Setup\\\\n07:10 Lets Glitch\\\\n07:56 Firmware modification\"",
    "lengthSeconds": "518",
    "uploadDate": "2021-05-11",
    "thumbnail_url": "https://i.ytimg.com/vi/_E0PWQvW"
  },
  {
    "link": "watch?v=KtHu693wE9o",
    "title": "Online Multiplayer on the Game Boy",
    "tags": "ghidraninja, stacksmashing, nintendo, game boy, tetris, multiplayer, gaming",
    "scraped_at": 1684583941.7761908,
    "genre": "Science",
    "views": "196179",
    "desc": "In this video I will show you how I connected the Game Boy Tetris to the internet!\\\\n\\\\nLinks:\\\\n- Buy the adapter kit: http://gum.co/gb-link\\\\n- LiveOverflow: https://www.youtube.com/channel/UClcE-kVhqyiHCcjYwcpfj9w\\\\n- Patreon: https://patreon.com/stacksmashing\\\\n- Twitter: https://twitter.com/ghidraninja\\\\n- Discord: https://discord.gg/YASkVQY5Pr\\\\n\\\\n- Server: https://github.com/stacksmashing/gb-tetris-server\\\\n- Frontend: https://github.com/stacksmashing/gb-tetris-web\\\\n- Firmware: https://github.com/stacksmashing/gb-link-firmware\\\\n\\\\nTimestamps:\\\\n00:00\\xe2\\x80\\x8b - Intro\\\\n01:13\\xe2\\x80\\x8b - The Link Cable Protocol  \\\\n01:57\\xe2\\x80\\x8b - Architecture\\\\n02:39\\xe2\\x80\\x8b - Hardware setup\\\\n03:59 - WebUSB!\\\\n04:42 - The Frontend \\\\n05:27 - The Server\\\\n06:20 - A wild LiveOverflow appears!\\\\n07:19 - 3 Players!\"",
    "lengthSeconds": "491",
    "uploadDate": "2021-05-02",
    "thumbnail_url": "https://i.ytimg.com/vi/KtHu693wE9o/maxresdefault.jpg"
  },
  {
    "link": "watch?v=4ckjr9x214c",
    "title": "Mining Bitcoin on the Game Boy",
    "tags": "stacksmashing, ghidra ninja, bitcoin, game boy, hardware hacking, reverse engineering, ghidra, raspberry pi, pico, rp2040",
    "scraped_at": 1684583940.2831907,
    "genre": "Science",
    "views": "1251539",
    "desc": "In this video, we attempt to mine Bitcoin on the original Game Boy using the Raspberry Pi Pico as a link-cable to USB adapter!\\\\n\\\\nLinks:\\\\n- Breakout and ROM cart: https://gumroad.com/stacksmashing#wKdGY\\\\n- Patreon: https://www.patreon.com/stacksmashing\\\\n- Twitter: https://twitter.com/ghidraninja\\\\n\\\\nCode:\\\\n- Game Boy code: https://github.com/ghidraninja/game-boy-bitcoin-miner\\\\n- ntgbtminer for Game Boy: https://github.com/ghidraninja/game-boy-ntgbtminer\\\\n- Raspberry Pi Pico firmware: https://github.com/ghidraninja/game-boy-pico-link\\\\n- MVG\\'s Intro to Game Boy programming: https://www.youtube.com/watch?v=FzPTK91EJY8\\\\n\\\\nAlso check out the NES miner here: http://retrominer.com\\\\n\\\\nTimestamps:\\\\n00:00 - Intro\\\\n01:13 - Bitcoin mining explained\\\\n02:27 - Hardware setup\\\\n03:13 - Game Boy firmware\\\\n04:18 - Link Cable Protocol\\\\n05:45 - Raspberry Pi Firmware\\\\n06:10 - Host computer\\\\n07:00 - Let\\'s mine Bitcoin!\\\\n07:53 - Testchain\"",
    "lengthSeconds": "515",
    "uploadDate": "2021-03-27",
    "thumbnail_url": "https://i.ytimg.com/vi/4ckjr9x214c/maxresdefault.jpg"
  },
  {
    "link": "watch?v=yYnQYF_Xa8g",
    "title": "In-depth: Raspberry Pi Pico's PIO - programmable I/O!",
    "tags": "ghidraninja, stacksmashing, hacking, hardware hacking, raspberry pi, pico, making, electronics, RP2040",
    "scraped_at": 1684583941.231213,
    "genre": "Science",
    "views": "105201",
    "desc": "In this video we take an in-depth look into the new Raspberry Pi Pico/RP2040 high-speed programmable I/O system: PIO!\\\\n\\\\nFor a high level video check https://www.youtube.com/watch?v=o-tRJPCv0GA!\\\\n\\\\nI know this video is quite fast-paced and dense, but I\\'m trying to experiment with different formats for these in-depth videos :)\\\\n\\\\n\\\\nErrata:\\\\n- 8:20 - the register is always decremented, not only if the condition is met\\\\n- 9:01 - The pin will be OFF for one cycle and ON for 2 cycles - said it the other way around accidentally\\\\n\\\\n- Luke on Twitter: https://twitter.com/wren6991\\\\n- Pico PIO examples: https://github.com/raspberrypi/pico-examples/tree/master/pio\\\\n- C SDK Book: https://datasheets.raspberrypi.org/pico/raspberry-pi-pico-c-sdk.pdf\\\\n- BBC Micro Emu on the Pico: https://www.youtube.com/watch?v=WaPJmCgseQw\\\\n\\\\nLinks:\\\\n- Twitter: https://twitter.com/ghidraninja\\\\n- Patreon: https://patreon.com/stacksmashing\\\\n\\\\nTimestamps:\\\\n00:00:00\\xe2\\x80\\x8b - Intro\\\\n00:01:15\\xe2\\x80\\x8b - PIO architecture\\\\n00:02:30 - The state machine\\\\n00:05:30\\xe2\\x80\\x8b - IO Mapping\\\\n00:06:56\\xe2\\x80\\x8b - Set Instruction\\\\n00:07:47\\xe2\\x80\\x8b - Jump Instruction\\\\n00:09:08\\xe2\\x80\\x8b - Mov Instruction\\\\n00:10:23 - In/Out Instructions\\\\n00:10:53 - Push/Pull Instructions\\\\n00:11:43 - IRQ Instruction\\\\n00:12:47 - Wait Instruction\\\\n00:13:38 - Delay\\\\n00:14:45 - Side-Set\\\\n00:15:48 - Program Wrapping\"",
    "lengthSeconds": "1039",
    "uploadDate": "2021-03-09",
    "thumbnail_url": "https://i.ytimg.com/vi/yYnQYF_Xa8g/maxresdefault.jpg"
  },
  {
    "link": "watch?v=cwyH59nACzQ",
    "title": "Why 111-1111111 is a valid Windows 95 key",
    "tags": "ghidra, retro, windows 95, ghidraninja, reverse engineering",
    "scraped_at": 1684583940.6561894,
    "genre": "Science",
    "views": "1970636",
    "desc": "In this video, we take a look at why 111-1111111 is a valid Windows 95 key. \\\\n\\\\nLinks:\\\\n- Ghidra quickstart: https://www.youtube.com/watch?v=fTGTnrgjuGA\\\\n- Jon Sawyer on Twitter: https://twitter.com/jcase\\\\n- Patreon: https://patreon.com/stacksmashing\\\\n- Twitter: https://twitter.com/ghidraninja\\\\n- OEM Key Check: https://gist.github.com/nezza/a25bee13f25a1733a4c7a1d3d1cf5882\\\\n\\\\nErrata:\\\\n- In the beginning I say \\\\\"",
    "lengthSeconds": "386",
    "uploadDate": "2021-01-29",
    "thumbnail_url": "https://i.ytimg.com/vi/cwyH59nACzQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=sVkFGajsnW8",
    "title": "Hacking the \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u00ae \u2588\u2588\u2588\u2588 & \u2588\u2588\u2588\u2588\u2588\u2122",
    "tags": "nintendo, hacking, game and watch, retro, ghidraninja, ghidra",
    "scraped_at": 1684583941.6031897,
    "genre": "Science",
    "views": "176513",
    "desc": "The dispute was successful and the videos are back! Awesome!\\\\n\\\\n- https://gizmodo.com/nintendo-is-making-copyright-claims-on-videos-of-game-1846040532\\\\n- https://www.eff.org/wp/unfiltered-how-youtubes-content-id-discourages-fair-use-and-dictates-what-we-see-online\\\\n- https://www.youtube.com/watch?v=AKtaFU2ky9E\"",
    "lengthSeconds": "127",
    "uploadDate": "2021-01-15",
    "thumbnail_url": "https://i.ytimg.com/vi/sVkFGajsnW8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=rLT9c4Miesw",
    "title": "rC3 Talk: Hacking the Game & Watch",
    "tags": "film, udost",
    "scraped_at": 1684583940.5091898,
    "genre": "Science",
    "views": "70882",
    "desc": "At this year\\'s Chaos Computer Club congress, called the rC3, I gave a talk about the adventures of hacking the Game \\\\u0026 Watch. This is the recording of that talk, I hope you enjoy it!\\\\n\\\\nThe official recording, including Q\\\\u0026A can be found here: https://media.ccc.de/v/rc3-11527-hacking_the_nintendo_game_watch\\\\n\\\\nTimestamps:\\\\n00:00:00 - Intro\\\\n00:06:00 - The hardware\\\\n00:08:30 - Debugging port\\\\n00:11:10 - RAM dump analysis\\\\n00:12:35 - Dumping the flash\\\\n00:19:48 - Dumping the original firmware\\\\n00:24:40 - Getting Homebrew and DOOM onto the device\\\\n00:30:05 - Emulators\\\\n00:32:54 - The community\\\\n\\\\nLinks:\\\\n- Twitter: https://twitter.com/ghidraninja\"",
    "lengthSeconds": "2081",
    "uploadDate": "2020-12-27",
    "thumbnail_url": "https://i.ytimg.com/vi/rLT9c4Miesw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=9M2QogUE-R8",
    "title": "Game & Watch: How we dumped the firmware & community-updates",
    "tags": "game and watch, hacking, nintendo, emulation, retro gaming, ghidra, ghidraninja, stacksmashingm",
    "scraped_at": 1684583941.0721884,
    "genre": "Science",
    "views": "91426",
    "desc": "In this video we first take a look at what the Game \\\\u0026 Watch community has been up to, before then diving deep into how the original firmware was dumped!\\\\n\\\\nPatreon: https://www.patreon.com/stacksmashing\\\\n\\\\nFlash chip: MX25U12835F\\\\n\\\\nTimestamps:\\\\n00:00:00 - Hardware Community Update\\\\n00:02:28 - Software Community Hardware\\\\n00:04:20 - How we dumped the firmware\\\\n\\\\nLinks:\\\\n- Konrad Beckmann on Twitter: https://twitter.com/kbeckmann\\\\n- Konrad Beckmann on YouTube: https://www.youtube.com/channel/UCuDrgjmtMvmFo9BZc0e0GNQ\\\\n- Upcycle-Electronic\\'s repository https://github.com/Upcycle-Electronics/game-and-watch-hardware\\\\n- Daniel Padilla\\'s X-Rays: https://twitter.com/dproldan/status/1334091883585396736\\\\n- Daniel Cuthbert\\'s X-Rays: https://twitter.com/dcuthbert/status/1334119847941300224\\\\n- Datasheets: https://github.com/ghidraninja/game-and-watch-hacking/wiki/Datasheets\\\\n- Back-cover: https://www.thingiverse.com/thing:4681663\\\\n- Mathis (PCB designer): https://twitter.com/DB9MAT\\\\n- Cyanic\\'s Patch: https://twitter.com/GMMan_BZFlag/status/1338249930259849217\\\\n- Tim\\'s YouTube channel: https://www.youtube.com/channel/UCT0vVH_aI2TmA4NeRxL-rnw\\\\n- Chaos Computer Club\\'s rC3: https://rc3.world\\\\n- A novice guide to hacking the Game \\\\u0026 Watch: https://docs.google.com/document/d/1-x6tibLxtOPf6ZbQL0ZM48XGe1-LLEfl8HpBg8gBu_M/edit\\\\n- Me on Twitter: https://twitter.com/ghidraninja\"",
    "lengthSeconds": "485",
    "uploadDate": "2020-12-16",
    "thumbnail_url": "https://i.ytimg.com/vi/9M2QogUE"
  },
  {
    "link": "watch?v=-MzmoEFs0bQ",
    "title": "Bringing homebrew to the Game & Watch",
    "tags": "nintendo, game and watch, homebrew, NES, Emulation, hacking",
    "scraped_at": 1684583940.9181905,
    "genre": "Science",
    "views": "253728",
    "desc": "In this video we take a look at how to backup the original firmware, and how to install homebrew on the Game \\\\u0026 Watch! Currently it\\'s mainly targeted at developers, but great progress is being made!\\\\n\\\\nLinks:\\\\n- Game and Watch Backup Repository with pin connections etc: https://github.com/ghidraninja/game-and-watch-backup\\\\n- Game and Watch Base Project: https://github.com/ghidraninja/game-and-watch-base\\\\n- NES emulator: https://github.com/kbeckmann/game-and-watch-retro-go\\\\n- Konrad on Twitter: https://twitter.com/kbeckmann\\\\n- Konrad on YouTube: https://www.youtube.com/watch?v=LayKjnP7HvY\\\\n- Me on Twitter: https://twitter.com/ghidraninja\"",
    "lengthSeconds": "372",
    "uploadDate": "2020-11-29",
    "thumbnail_url": "https://i.ytimg.com/vi/"
  },
  {
    "link": "watch?v=sNg_S9UM5ps",
    "title": "DOOM on the Game and Watch",
    "tags": "doom, nintendo, game and watch, hacking, homebrew",
    "scraped_at": 1684583940.829189,
    "genre": "Science",
    "views": "393534",
    "desc": "A lot of people asked for it - and so here it is: DOOM running on the Nintendo Game and Watch.\\\\nThis took far more effort than I expected, but I hope you enjoy it.\\\\n\\\\nLinks:\\\\n- Twitter: https://twitter.com/ghidraninja\\\\n- Konrad Beckmann: https://twitter.com/kbeckmann\\\\n- Game and Watch DOOM source: https://github.com/ghidraninja/game-and-watch-doom\\\\n- miniwad: https://github.com/fragglet/miniwad\\\\n- wadptr: https://soulsphere.org/projects/wadptr/\\\\n- Wiki with hardware details: https://github.com/ghidraninja/game-and-watch-hacking/wiki/\"",
    "lengthSeconds": "359",
    "uploadDate": "2020-11-22",
    "thumbnail_url": "https://i.ytimg.com/vi/sNg_S9UM5ps/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Rsi8p5gbaps",
    "title": "Hacking the Nintendo Game and Watch",
    "tags": "nintendo, game and watch, ghidra, ghidraninja, super mario bros., mario, hacking, reverse engineering, security",
    "scraped_at": 1684583941.448192,
    "genre": "Science",
    "views": "657838",
    "desc": "Why is this censored: Got copyright claims on it otherwise.\\\\n\\\\nI got lucky and received my Game and Watch Super Mario Bros. one day early - and immediately started hacking it! In this video we will teardown the device, take a look inside, and find how we can put our own, customized ROM onto it!\\\\n\\\\n\\\\nResources:\\\\n- Twitter: https://twitter.com/ghidraninja\\\\n- Twitter thread: https://twitter.com/ghidraninja/status/1326855097083686917\\\\n- Game and watch scripts: \\\\nhttps://github.com/ghidraninja/game-and-watch-hacking\\\\n- STM32H7B0 Reference manual: https://www.st.com/resource/en/reference_manual/dm00463927-stm32h7a3b3-and-stm32h7b0-value-line-advanced-armbased-32bit-mcus-stmicroelectronics.pdf\\\\n\\\\nAlso many thanks to SciresM ( https://twitter.com/SciresM ) on Twitter from telling me that ... basically exclusively uses AES-CTR!\"",
    "lengthSeconds": "596",
    "uploadDate": "2020-11-14",
    "thumbnail_url": "https://i.ytimg.com/vi/Rsi8p5gbaps/maxresdefault.jpg"
  },
  {
    "link": "watch?v=nC1U1LJQL8o",
    "title": "In-depth: ELF - The Extensible & Linkable Format",
    "tags": "ELF, Hacking, Reverse Engineering, Ghidra, Extensible ",
    "scraped_at": 1684583941.5261903,
    "genre": "Science",
    "views": "152210",
    "desc": "ELF files are everywhere: From your PS4, to the Wii, to any Linux device out there. In this video we explore the Extensible \\\\u0026 Linkable Format, and understand how it works - on the byte level!\\\\n\\\\nErrata:\\\\n- At the beginning I say extensible while displaying executable and linkable file format - Extensible is the old name, nowadays ist called Executable. Must\\xe2\\x80\\x99ve gotten confused :)\\\\n\\\\nFurther reading:\\\\n- The ELF specification: https://refspecs.linuxfoundation.org/elf/elf.pdf\\\\n- elf.h from the Linux kernel: https://elixir.bootlin.com/linux/latest/source/include/uapi/linux/elf.h\\\\n- How programs get run: https://lwn.net/Articles/631631/\\\\n- TLS: https://docs.oracle.com/cd/E19120-01/open.solaris/819-0690/chapter8-5/index.html\\\\n- Relocation: https://refspecs.linuxbase.org/elf/gabi4+/ch4.reloc.html\\\\n- sstrip: https://github.com/BR903/ELFkickers/\\\\n\\\\nTimestamps:\\\\n0:00 Intro\\\\n0:47 segment and section differentiation\\\\n2:05 ELF structure\\\\n3:39 ELF header data structure\\\\n9:34 Program header data structure\\\\n13:54 Section header data structure\"",
    "lengthSeconds": "1142",
    "uploadDate": "2020-10-27",
    "thumbnail_url": "https://i.ytimg.com/vi/nC1U1LJQL8o/maxresdefault.jpg"
  },
  {
    "link": "watch?v=U8fWTDUdWGA",
    "title": "Exploring the Mew Glitch",
    "tags": "retro, reverse engineering, hacking, GameBoy, nintendo, ghidra, reversing, Retrogaming, Gaming, Consoles, FPGA, Security, game boy, ROM, ROM Hacking, ROM hacks, Patching, pokemon, pokemon red, mew, glitch, mew glitch, long range trainer, trainer fly glitch",
    "scraped_at": 1684583940.0522132,
    "genre": "Science",
    "views": "161045",
    "desc": "In this video we explore the long range trainer glitch, or,  as it\\'s more widely known, the Mew glitch! This glitch allows us to catch mew on the original Pokemon Generation 1 games for the Game Boy. \\\\n\\\\nFyi, this is not the quickest way to catch mew - the trainer to the west of the nugget bridge can be access much earlier in the game and is the easiest \\\\u0026 quickest way! I used this specific trainer because it was (as far as I can tell) the \\\\\"",
    "lengthSeconds": "630",
    "uploadDate": "2020-05-03",
    "thumbnail_url": "https://i.ytimg.com/vi/U8fWTDUdWGA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=dQLp5i8oS3Y",
    "title": "How to reverse engineer & patch a Game Boy ROM",
    "tags": "retro, reverse engineering, hacking, GameBoy, nintendo, ghidra, reversing, Retrogaming, Gaming, Consoles, FPGA, Security, game boy, ROM, ROM Hacking, ROM hacks, Patching, pokemon, pokemon red",
    "scraped_at": 1684583940.3551898,
    "genre": "Science",
    "views": "130287",
    "desc": "In this video, we patch a Game Boy ROM using Ghidra!\\\\n\\\\nThe first two parts: https://www.youtube.com/watch?v=ix5yZm4fwFQ\\\\u0026list=PLniOzp3l9V82onKsktyyKlIenAAUj45Mk\\\\n\\\\n\\\\nLinks from the Video:\\\\n- My ghidra scripts: https://github.com/ghidraninja/ghidra_scripts\\\\n- GhidraBoy: https://github.com/Gekkio/GhidraBoy/\\\\n- Gekkio @ Disobey 2018: https://www.youtube.com/watch?v=GBYwjch6oEE\\\\n- Pokered: https://github.com/pret/pokered\\\\n\\\\nErrata:\\\\n- It\\'s DISOBEY, not Obey\\\\n\\\\nYou can also find me on Twitter: https://twitter.com/ghidraninja\"",
    "lengthSeconds": "754",
    "uploadDate": "2020-04-19",
    "thumbnail_url": "https://i.ytimg.com/vi/dQLp5i8oS3Y/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ru5VzUigKqw",
    "title": "Reversing WannaCry Part 3 - The encryption component",
    "tags": "IDA Pro, Hacking, Reverse Engineering, Ghidra, Radare2, Malware, WannaCry, Security, Virus, Ransomware, Reversing, Computersecurity, Computer",
    "scraped_at": 1684583941.3771899,
    "genre": "Science",
    "views": "88464",
    "desc": "In this video we take a quick look at the encryption component of WannaCry! We also check out how the \\'decrypt\\' functionality of the WannaDecryptor probably is implemented.\\\\n\\\\nPlaylist: https://www.youtube.com/watch?v=Sv8yu12y5zM\\\\u0026list=PLniOzp3l9V83Yf52IXJTvW9rjstdqkduP\\\\n- Part 1: https://www.youtube.com/watch?v=Sv8yu12y5zM\\\\n- Part 2: https://www.youtube.com/watch?v=Q90uZS3taG0\\\\n\\\\nThe scripts and Ghidra projects can be found here: https://github.com/ghidraninja/ReversingWannacry\\\\n\\\\nTwitter: https://twitter.com/ghidraninja\\\\n\\\\nAdvertising/Werbung: You can use YOUTUBE to get 10% off all trainings at Advanced Security Training! https://advancedsecurity.training/\"",
    "lengthSeconds": "851",
    "uploadDate": "2020-04-11",
    "thumbnail_url": "https://i.ytimg.com/vi/ru5VzUigKqw/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ix5yZm4fwFQ",
    "title": "Hacking the Game Boy cartridge protection",
    "tags": "retro, reverse engineering, hacking, GameBoy, nintendo, ghidra, reversing, Retrogaming, Gaming, Consoles, FPGA, Security, game boy",
    "scraped_at": 1684583941.3041902,
    "genre": "Science",
    "views": "538908",
    "desc": "In this video we hack the GameBoy cartridge protection by building our own GameBoy cartridge using an FPGA!\\\\n\\\\nYou can find the FPGA source-code on my Github here: https://github.com/ghidraninja/gameboy-fpga-cartridge/\\\\n\\\\n- ModernVintageGame on the CIC chips: https://www.youtube.com/watch?v=x8PYE8A-WEw\\\\n- The Gbdev wiki: https://gbdev.gg8.se/wiki/articles/Main_Page\\\\n\\\\nEquipment used in the video:\\\\n- FPGA Board: Digilent Arty 7\\\\n- Level shifters: TXS0108E\\\\n- A GameBoy...\\\\n\\\\nErrata:\\\\n- I messed up the resolution - the logo is 48px by 8px, not 96px by 16px!\\\\n\\\\nYou can also find me on Twitter: https://twitter.com/ghidraninja\"",
    "lengthSeconds": "600",
    "uploadDate": "2020-03-28",
    "thumbnail_url": "https://i.ytimg.com/vi/ix5yZm4fwFQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=q4CxE5P6RUE",
    "title": "Bare-metal ARM firmware reverse engineering with Ghidra and SVD-Loader",
    "tags": "IDA Pro, Hacking, Reverse Engineering, Ghidra, Radare2, Malware, WannaCry, Security, Virus, Ransomware, Reversing, Computersecurity, Computer, Embedded Security, IoT, Bare metal, ARM, Cortex",
    "scraped_at": 1684583939.8041892,
    "genre": "Science",
    "views": "118768",
    "desc": "In this video we look at reverse engineering a bare metal ARM firmware using Ghidra and SVD-Loader!\\\\n\\\\n- SVD-Loader: https://github.com/leveldown-security/SVD-Loader-Ghidra\\\\n- Crackmes from the video: https://github.com/ghidraninja/arm-bare-metal-1\\\\n- SVD Files: https://github.com/posborne/cmsis-svd/tree/master/data/STMicro\\\\n\\\\nChip details:\\\\n- STM32F446RE: https://www.st.com/en/microcontrollers-microprocessors/stm32f446re.html\\\\n- Datasheet: https://www.st.com/resource/en/datasheet/stm32f446mc.pdf\\\\n- Reference manual: https://www.st.com/content/ccc/resource/technical/document/reference_manual/4d/ed/bc/89/b5/70/40/dc/DM00135183.pdf/files/DM00135183.pdf/jcr:content/translations/en.DM00135183.pdf\\\\n- Nucleo-F446RE: https://www.st.com/en/evaluation-tools/nucleo-f446re.html\\\\n\\\\nMore resources:\\\\n- Pull-Ups \\\\u0026 Pull-Downs: https://www.youtube.com/watch?v=BxA7qwmY9mg\\\\n- STM32 GPIOs: https://www.youtube.com/watch?v=jZ6J8oITgK8\"",
    "lengthSeconds": "879",
    "uploadDate": "2020-02-27",
    "thumbnail_url": "https://i.ytimg.com/vi/q4CxE5P6RUE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Q90uZS3taG0",
    "title": "Reversing WannaCry Part 2 - Diving into the malware with #Ghidra",
    "tags": "IDA Pro, Hacking, Reverse Engineering, Ghidra, Radare2, Malware, WannaCry, Security, Virus, Ransomware, Reversing, Computersecurity, Computer",
    "scraped_at": 1684583940.1251898,
    "genre": "Science",
    "views": "188559",
    "desc": "In the second video of the \\\\\"",
    "lengthSeconds": "947",
    "uploadDate": "2020-02-02",
    "thumbnail_url": "https://i.ytimg.com/vi/Q90uZS3taG0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=8RI60aRyhoE",
    "title": "CVE-2020-0601 aka Curveball: A technical look inside the critical Microsoft CryptoAPI vulnerability",
    "tags": "cve",
    "scraped_at": 1684583940.991189,
    "genre": "Science",
    "views": "37859",
    "desc": "On Tueday, a critical vulnerability in Microsoft\\'s CryptoAPI was patched - it can allow an attacker to generate a CA that is considered trusted by the system, allowing attacks on TLS, code signing and co.\\\\n\\\\nIn this video, we look at how exactly that vulnerably works, and how we can attack it using Oliver Lyak\\'s proof-of-concept!\\\\n\\\\nIf you don\\'t know public key cryptography or want to learn more about EC, check the ArsTechnica EC primer: https://arstechnica.com/information-technology/2013/10/a-relatively-easy-to-understand-primer-on-elliptic-curve-cryptography/3/\\\\n\\\\nThe awesome PoC: https://github.com/ollypwn/CVE-2020-0601\\\\nThomas Ptacek\\'s explanation: https://news.ycombinator.com/item?id=22048619\\\\nThe NSA advisory: https://media.defense.gov/2020/Jan/14/2002234275/-1/-1/0/CSA-WINDOWS-10-CRYPT-LIB-20190114.PDF\\\\nKudelski Blogpost: https://research.kudelskisecurity.com/2020/01/15/cve-2020-0601-the-chainoffools-attack-explained-with-poc/\\\\nArsTechnica Article: https://arstechnica.com/information-technology/2020/01/researcher-develops-working-exploit-for-critical-windows-10-vulnerability/\"",
    "lengthSeconds": "601",
    "uploadDate": "2020-01-17",
    "thumbnail_url": "https://i.ytimg.com/vi/8RI60aRyhoE/maxresdefault.jpg"
  },
  {
    "link": "watch?v=hV8W4o-Mu2o",
    "title": "IoT Security: Backdooring a smart camera by creating a malicious firmware upgrade",
    "tags": "Security, IoT security, IoT, Embedded, Embedded Security, Hacking, Reverse Engineering, Firmware, Firmware security, Ghidra, IDA Pro, binwalk, binary",
    "scraped_at": 1684583940.7401912,
    "genre": "Science",
    "views": "246181",
    "desc": "In this video we look at reverse engineering a basic firmware format of a commonly found IoT camera - and then creating a backdoored firmware that calls back to our command \\\\u0026 control server and allows us to remotely control it!\\\\n\\\\nCamera in the video: Wyze Cam v2\\\\nScripts from the video:  https://github.com/ghidraninja/wyze_scripts/tree/master\\\\n\\\\nA lot more information on the hardware and software, as well as an awesome custom firmware can be found here: https://github.com/EliasKotlyar/Xiaomi-Dafang-Hacks\"",
    "lengthSeconds": "788",
    "uploadDate": "2020-01-13",
    "thumbnail_url": "https://i.ytimg.com/vi/hV8W4o"
  },
  {
    "link": "watch?v=Sv8yu12y5zM",
    "title": "Reversing WannaCry Part 1 - Finding the killswitch and unpacking the malware in #Ghidra",
    "tags": "IDA Pro, Hacking, Reverse Engineering, Ghidra, Radare2, Malware, WannaCry, Security, Virus, Ransomware, Reversing, Computersecurity, Computer",
    "scraped_at": 1684583940.431188,
    "genre": "Science",
    "views": "958236",
    "desc": "Part 2 is out! https://www.youtube.com/watch?v=Q90uZS3taG0\\\\n\\\\nIn this first video of the \\\\\"",
    "lengthSeconds": "1350",
    "uploadDate": "2019-03-27",
    "thumbnail_url": "https://i.ytimg.com/vi/Sv8yu12y5zM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=4urMITJKQQs",
    "title": "Reverse engineering with #Ghidra: Breaking an embedded firmware encryption scheme",
    "tags": "Reverse Engineering, Ghidra, Hacking, Security, Embedded Security, Cryptography, Radare2, IDA Pro",
    "scraped_at": 1684583940.5871882,
    "genre": "People",
    "views": "99459",
    "desc": "In this video we will look at reverse engineering and hacking the firmware encryption used on Moxa industrial control gateways using Ghidra.\\\\n\\\\nLinks:\\\\nTwitter: https://twitter.com/ghidraninja\\\\nMoxa W2150A: https://www.moxa.com/en/products/industrial-edge-connectivity/serial-device-servers/wireless-device-servers/nport-w2150a-w2250a-series\\\\nAES ECB: https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Electronic_Codebook_(ECB)\"",
    "lengthSeconds": "808",
    "uploadDate": "2019-03-14",
    "thumbnail_url": "https://i.ytimg.com/vi/4urMITJKQQs/maxresdefault.jpg"
  }
]