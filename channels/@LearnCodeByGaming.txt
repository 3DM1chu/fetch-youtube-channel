[
  {
    "link": "watch?v=J3fatZ2OVIU",
    "title": "How To Send Inputs to Multiple Windows / Minimized Windows with Python. Or Die Trying",
    "tags": "python automation background, pyautogui minimized window, bot in background, run bot in background, mouse and keyboard work in the minimized game window, minimized game, multiboxing, multiple game windows, bot multi gaming, bot multiple games at once, background botting, sendmessage, postmessage, sendmessagea, sendmessagew, pywin32, SetForegroundWindow, WM_KEYDOWN, WM_KEYUP, WM_CHAR, win32api, pydirectinput, dual boxing, hwnd, sched",
    "scraped_at": 1684583382.1009924,
    "genre": "Education",
    "views": "48452",
    "desc": "Let\\'s explore using SendMessage to send automated inputs to multiple windows at once, or to windows that are minimized or in the background. I\\'ll share my progress and discuss the suitability of using this method for botting.\\\\n\\\\nView this code on GitHub: https://github.com/learncodebygaming/multiple-minimized-windows\\\\nJoin us on Discord: https://discord.gg/3fmKUAxNDv\\\\n\\\\nToday I want to answer the most asked question on my channel: \\\\n- How do I send mouse and keyboard inputs to multiple windows at once\\\\n- How do I send inputs to a minimized window or background window\\\\n- How can I keep using my mouse and keyboard while also sending automated inputs?\\\\n\\\\nI\\'m guessing most of you want to know how to do this because you\\'ve written a bot, and you want to run multiple bots at once, or you want your bot to run in the background while you continue using your computer.\\\\n\\\\nAnd my initial reaction when I started getting this question was: just use virtual machines. You could have multiple VM\\'s running in the background and those would be isolated from whatever you\\'re doing on your main desktop. I\\'ve confirmed that this does work, but the problem is the performance of virtual machines is typically not very good. At least with Hyper-V, even basic games show considerable lag. You might be able to find better performance by setting up hardware graphics acceleration for your VM, but that\\'s not the route I decided to explore today.\\\\n\\\\nSo what other options do we have?\\\\n\\\\nAbout a year ago now, as I was working on my OpenCV series, I got a tip from a viewer telling me about this SendMessage() function he was using to send inputs to a window in the background. It\\'s a Windows API function he was calling via pywin32, and it allows you to send messages, including mouse and keyboard inputs, to a specific window. And there\\'s a couple StackOverflow discussions about SendMessage(), but other than that, there really isn\\'t a whole lot I could find about working with this. So let\\'s try it out and see what we can do with it.\\\\n\\\\nI first tested a simple example with Notepad, and this gave me more problems than I was expecting.\\\\n\\\\nThe Notepad window has an inner window called \\'Edit\\' that you need to target if you want to send inputs to the main text area. Even after I solved that, I wasn\\'t able to get any results using WM_KEYDOWN and WM_KEYUP. Only by using WM_CHAR with ord() was I able to get text to appear in Notepad. Both SendMessage() and PostMessage() work this way.\\\\n\\\\nNext I decided to take this to a simple browser game. I found that WM_KEYDOWN and WM_KEYUP did work in Chrome, and there weren\\'t any inner windows to worry about either.\\\\n\\\\nThe first challenge I faced here was how to press down multiple keys at the same time. If you sleep() between WM_KEYDOWN and WM_KEYUP that\\'s blocking, so other code can\\'t execute at the same time. You could solve this by using threading, but this time I decided to use sched to schedule each command in queue, and then run that queue once it\\'s been built. This worked really well for one game, so now I wanted to scale it up to play games in multiple windows.\\\\n\\\\nUnfortunately in Chrome, I couldn\\'t get SendMessage to work when the window wasn\\'t focused. So I ended up using SetForegroundWindow() to quickly bring focus to the window that I\\'m sending the next command to. This does work, but because setting the foreground window takes a little bit of time you have to be careful to not have two commands run at the same time. I wasn\\'t very careful about how I avoided those collisions here, so that\\'s something you\\'ll want to develop if you plan on using this method of quickly swapping between windows. The more copies of the game you\\'re running, the more likely you are to run into these conflicts.\\\\n\\\\nAs a side note, if you\\'re going to be swapping window focus anyway, you might find better performance using SendInput(), or even just PyAutoGUI or PyDirectInput as you normally would. The only benefit that SendMessage() or PostMessage() give us is that we can target a specific window handle with them.\\\\n\\\\nSo now I kinda have a solution for botting in multiple windows at once, but we still have the issue of wanting to send inputs to minimized or unfocused windows so that we can run our bots in the background.\\\\n\\\\nI found that how SendMessage and PostMessage behave are very dependent on what program you\\'re trying to automate. For example with Firefox, I was able to send inputs to Mario even when the browser was minimized or in the background. But this wasn\\'t quite a perfect solution because Firefox was laggy compared to Chrome, and I couldn\\'t get SendMessage to work with multiple tabs or multiple windows in Firefox unless I resorted back to our SetForegroundWindow method.\\\\n\\\\nContinue reading here: https://learncodebygaming.com/blog/how-to-send-inputs-to-multiple-windows-and-minimized-windows-with-python\\\\n\\\\n#programming #python\"",
    "lengthSeconds": "1531",
    "uploadDate": "2021-05-04",
    "thumbnail_url": "https://i.ytimg.com/vi/J3fatZ2OVIU/maxresdefault.jpg"
  },
  {
    "link": "watch?v=fj4Zey52Vc8",
    "title": "AP Computer Science A | Study Session",
    "tags": "ap computer science study guide, ap comp sci a, ap computer science a, ap computer science sample questions, ap csa, java, computer science tutorial, ap computer science test, ap computer science exam, ap comp sci, high school computer science, java programming test, ap computer science project, computer science, ap computer science, advanced placement, ap exams, exam prep, cram session, study session, college board ap computer science a, exam description, study guide",
    "scraped_at": 1684583383.0089922,
    "genre": "Education",
    "views": "5028",
    "desc": "Get prepared for the AP Computer Science A exam! I\\'ll let you know what to expect and go through some example questions from the official 2021 College Board AP Comp Sci exam guide. Should be a good supplement to the rest of your studying!\\\\n\\\\nI\\'ll explain what you need to focus on, give you tips for test day, and work through some sample questions with you. This study guide should also be beneficial for any beginner Java programmer, even if you\\'re not taking the AP Comp Sci test.\\\\n\\\\nOfficial AP Comp Sci A Course and Exam description PDF: https://apcentral.collegeboard.org/pdf/ap-computer-science-a-course-and-exam-description.pdf?course=ap-computer-science-a\\\\n\\\\n\\xf0\\x9f\\x9a\\x80\\xf0\\x9f\\x9a\\x80\\xf0\\x9f\\x9a\\x80 Write your own Java game \\xf0\\x9f\\x9a\\x80\\xf0\\x9f\\x9a\\x80\\xf0\\x9f\\x9a\\x80: https://youtu.be/PJLLDpaLjds\\\\n\\\\nJoin me on Discord: https://discord.gg/3fmKUAxNDv\\\\n\\\\n0:09 What to expect on the AP Comp Sci Test\\\\n2:24 Example multiple choice questions\\\\n13:55 Example free response question\\\\n18:45 Study by working on a video game\\\\n\\\\nThe AP Computer Science test is coming up for all you high school students in the US. But don\\'t worry, I\\xe2\\x80\\x99m gonna help you prepare by giving you the secret, never-before-seen source of all answers on the test that no student has ever seen before. That\\'s right, I have the official AP Computer Science A course and exam description pdf from the Advanced Placement website.\\\\n\\\\nAnd as someone who has taken this test, I should be well equipped to let you know what to expect, give you some tips, and I\\'ll even embarrass myself by going through some example questions with you.\\\\n\\\\nSo the first thing you should know is: what\\'s on the test. And here it is [pg. 188], all the topics and what percentage of multiple choice questions come from each topic. And the first thing that should jump out at you is *bam* 17.5% on \\\\\"",
    "lengthSeconds": "1294",
    "uploadDate": "2021-03-26",
    "thumbnail_url": "https://i.ytimg.com/vi/fj4Zey52Vc8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=PJLLDpaLjds",
    "title": "How to make a Video Game in Java (2D Basics)",
    "tags": "java, java beginner project, java video game tutorial, how to code a game in java, learn java by building games, learn java game development, java game development 2021, java gaming projects, how to make a game in java, beginner video game programming, java projects with source code, intro to video game development, java 2d game tutorial, java 2d graphics, simple game development using java, java game programming, basic java projects for students, fun java project",
    "scraped_at": 1684583384.4279923,
    "genre": "Education",
    "views": "21849",
    "desc": "This project will get you making your first game in Java! Take my starter code (I explain how it works) and build your own game! Whether your a beginner or intermediate programmer, I layout some ideas for you on what to build next to progress your skills. This is a great project for all Java students, and might even look good on that portfolio for your resume. Have fun developing your first video game!\\\\n\\\\n\\xf0\\x9f\\x9a\\x80\\xf0\\x9f\\x9a\\x80\\xf0\\x9f\\x9a\\x80 Download the project code from GitHub \\xf0\\x9f\\x9a\\x80\\xf0\\x9f\\x9a\\x80\\xf0\\x9f\\x9a\\x80: https://github.com/learncodebygaming/java_2d_game\\\\n\\\\nNeed help getting set up for Java development? https://www.youtube.com/watch?v=U3UV8c8TFG4\\\\nMissed the Joy of Coding 2D Graphics project? https://www.youtube.com/watch?v=IyBsWymfqms\\\\n\\\\n1:50 Starter code overview\\\\n12:04 Game demonstration\\\\n12:50 Beginner project ideas\\\\n13:52 Intermediate project ideas\\\\n16:02 Advanced project ideas\\\\n19:08 Expert level ideas and what to do next\\\\n\\\\nFull written tutorial: https://learncodebygaming.com/blog/how-to-make-a-video-game-in-java-2d-basics\\\\n\\\\nWhat\\'s up guys? Today I wanna show you how to make a video game in Java. If you\\'re in that beginner-to-intermediate range of learning how to program, and you\\'re looking for a project that isn\\'t super boring, you\\'re in the right place. Or even if you need a project to add to your resume: this is something that\\'s really visual, that can be really impressive looking.\\\\n\\\\nThis is an active tutorial. I\\'ve designed this project specifically for you to write your own code, and to make a video game that\\'s all your own.\\\\n\\\\nWe\\'ll be making a 2D game, using the Java Swing library, and this project builds off of the work we did in the Bob Ross \\\\\"",
    "lengthSeconds": "1242",
    "uploadDate": "2021-02-04",
    "thumbnail_url": "https://i.ytimg.com/vi/PJLLDpaLjds/maxresdefault.jpg"
  },
  {
    "link": "watch?v=IyBsWymfqms",
    "title": "The Joy of Coding",
    "tags": "java projects for beginners, java projects step by step, java projects for beginners step by step, java projects with source code, java graphics tutorial, java 2d graphics tutorial, java graphics 2d, java swing tutorial, java swing tutorial for beginners, javax swing, bob ross, java, java paint, java interesting projects, code along java, joy of painting, java programming projects, java project ideas, java for game dev, java painting, java full painting, java drawing",
    "scraped_at": 1684583382.3779922,
    "genre": "Education",
    "views": "8618",
    "desc": "In this beginner friendly Java project, we create a simple Bob Ross inspired painting using the Java Swing Graphics library. I go step-by-step through each line of code so that anyone can follow along. Understanding how to work with 2D graphics like this is a crucial step for learning video game development.\\\\n\\\\nBob Ross is a Twitch and gaming icon at this point, and I thought \\xe2\\x80\\x9cwouldn\\xe2\\x80\\x99t it be cool to do a beginner programming tutorial in his style!?\\xe2\\x80\\x9d Turns out my acting is cringe, but I hope you can still learn a lot from following along with this project!\\\\n\\\\nNeed help getting set up for Java development? https://www.youtube.com/watch?v=U3UV8c8TFG4\\\\n\\\\nGet all the code for this project on GitHub: https://github.com/learncodebygaming/thejoyofcoding\\\\n\\\\nRemember to share your finished painting on Twitter using #joyofcoding\\\\nhttps://twitter.com/hashtag/joyofcoding\\\\n\\\\n0:40 Setting up JFrame window\\\\n5:09 Adding a JPanel canvas\\\\n12:24 Setting the background color\\\\n13:43 Adding graphics with paintComponent()\\\\n21:22 Creating a custom Paintbrush class\\\\n27:50 Mixing paint colors\\\\n29:25 Using a for loop to draw a tree\\\\n37:00 RIP devil\\\\n38:20 Making a color gradient\\\\n41:17 The finished painting\\\\n41:24 Drawing image files\\\\n44:17 The finishing touches result\\\\n\\\\nFull written tutorial: https://learncodebygaming.com/blog/the-joy-of-coding\\\\n\\\\nI thought today we\\'d do a fantastic little Java project. Just a simple little painting exercise that I think you\\'ll really, really enjoy doing. If this is your first time with us, let me extend a personal invitation for you to drag out VSCode, or your favorite Java editor, and code along with us. And if this is your first time coding in Java, I\\'ve got a handy little guide that will get you all set up in less than 10 minutes (linked above).\\\\n\\\\nTell you what, let\\'s get right to it. Today we\\'re going to be using the Java Swing library to make ourselves a little painting. I\\'ve already primed our project with an empty class and a simple main() method.\\\\n\\\\nAnd the first thing we need to do is create a window for our canvas to live in. With the Java Swing library, we can do that using JFrame.\\\\n\\\\nSo here\\'s your bravery test, right at the start. Ready? Time to write your first line of code.\\\\n\\\\nWe\\'re going to create a variable that represents our window. The data type of this variable is going to be JFrame, and then you can name your variable whatever you like. I\\'m going to call mine \\\\\"",
    "lengthSeconds": "2703",
    "uploadDate": "2021-01-25",
    "thumbnail_url": "https://i.ytimg.com/vi/IyBsWymfqms/maxresdefault.jpg"
  },
  {
    "link": "watch?v=U3UV8c8TFG4",
    "title": "How To Get Started with Java Development using VS Code on Windows (2021)",
    "tags": "java setup tutorial, vs code, visual studio code java, java setup windows, visual studio code, java, vscode, java setup windows 10, vscode java setup windows, how to setup java path in windows 10, java_home, java_home environment variable windows 10, java quick start, java getting started tutorial, java vscode windows, java vscode setup, java extension pack, coding pack for java, java development windows, beginner java programming, java ide for windows, java windows 10 install",
    "scraped_at": 1684583382.442993,
    "genre": "Education",
    "views": "6596",
    "desc": "A quick tutorial on how to get started with Java development on Windows using Visual Studio Code. I go through all the installation and setup steps to get you ready to work on your Java projects.\\\\n\\\\nOfficial VS Code tutorial: https://code.visualstudio.com/docs/java/java-tutorial\\\\n\\\\nIf you don\\'t already have VSCode installed, you can save yourself a lot of time by downloading the Coding Pack for Java, which contains Visual Studio Code, the Java JDK, and all the essential Java extensions for VSCode. You can find this in the link above.\\\\n\\\\nIf you do already have VSCode installed, that\\'s not a problem either. The first step is to go to your extensions and find the \\\\\"",
    "lengthSeconds": "401",
    "uploadDate": "2021-01-01",
    "thumbnail_url": "https://i.ytimg.com/vi/U3UV8c8TFG4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=MeABVPTjih8",
    "title": "Staying Motivated and the Cycle of Programmer Burnout",
    "tags": "how to deal with programmer burnout, I want to quit programming, no motivation programming, software project burnout, should i quit programming, programmer motivation, tired of programming, losing hope programming, getting back into programming, self",
    "scraped_at": 1684583382.5770195,
    "genre": "Education",
    "views": "8494",
    "desc": "It seems every programmer faces burnout eventually. But as a new programmer, this sudden exhaustion can be confusing and very discouraging. Maybe programming is just too hard for me? Maybe I should just quit? Coding is incredibly taxing, and we all need to rest and recharge sometimes. Here I want to talk about some healthy ways to approach this cycle of burnout that you may not have considered before.\"",
    "lengthSeconds": "285",
    "uploadDate": "2020-12-24",
    "thumbnail_url": "https://i.ytimg.com/vi/MeABVPTjih8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=FylRUEEWhCo",
    "title": "How To Bot with OpenCV - OpenCV Object Detection in Games #9",
    "tags": "opencv, python, bot opencv, opencv bot game, opencv game, opencv game control, pyautogui, pydirectinput, pyautogui image recognition, pyautogui game bot, python multithreading, python threading, python threading tutorial for beginners, python thread, mouse click automatically, mouse click automation, python threads shared variable, computer vision projects, python automation projects, how to write a bot in python, python game bot, opencv full tutorial, opencv projects",
    "scraped_at": 1684583383.0829926,
    "genre": "Education",
    "views": "126138",
    "desc": "Learn how to combine OpenCV object detection with PyAutoGUI and Threading to build a custom Python video game bot. Using the OpenCV image recognition techniques discussed earlier in this tutorial, we can now use that data to perform mouse clicks automatically. We\\'ll use Python threads so that our bot actions can happen independently of our object detection.\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKtkKq2lK5xko4X-8EZzFPI\\\\n\\\\nGrab the code on GitHub: https://github.com/learncodebygaming/opencv_tutorials\\\\nPyAutoGUI: https://pyautogui.readthedocs.io/en/latest/\\\\nPyDirectInput: https://github.com/learncodebygaming/pydirectinput\\\\n\\\\n0:40 Automating mouse clicks\\\\n4:58 Basic threading\\\\n10:47 Advanced threading\\\\n18:44 Botting logic\\\\n22:10 Enum data structure\\\\n32:40 Stack data structure\\\\n36:22 Bot demo\\\\n\\\\nEmail me: ben@learncodebygaming.com\\\\nFull written tutorial: https://learncodebygaming.com/blog/how-to-build-a-bot-with-opencv\\\\nMy gear: https://learncodebygaming.com/gear\\\\n\\\\nBuilding a bot with OpenCV is a matter of combining the object detection techniques that we\\'ve discussed (in the last 8 parts of this tutorial series) with some GUI automation. Now that you know how to find an object using OpenCV, you just need to use something like PyAutoGUI or PyDirectInput to click on the objects you find. But there are a few architectural decisions that can make it kind of difficult to know where to get started. So I\\'ll walk you through one way to approach this that should be pretty flexible and act as a good foundation for building a more capable bot.\\\\n\\\\nThe most straightforward way to add automated mouse clicks to our bot script is to do it inline. By that I mean we can take a screenshot, process it to find the objects we want, and then perform any actions we want our bot to take. So we can do that sequentially, and just loop back around when our bot is done with its actions. So let me show you what that would look like, and then I\\'ll point out some of the limitations with that method.\\\\n\\\\n[see the code samples on learncodebygaming.com]\\\\n\\\\nIn this code, once we have the detected objects in the form of a list of rectangles, we first convert those into click positions using the get_click_points() and get_screen_position() functions we wrote previously. Then it\\'s taking the very first screen position in that list, moves the mouse to that position using pyautogui.moveTo(), and then we use PyAutoGUI again to do the mouse click. Hopefully this has resulted in clicking on our target (a limestone deposit in Albion Online), and we pause our script for 5 seconds using sleep() to give our character time to do that mining.\\\\n\\\\nSo one of the problems this code has is it\\'s going to take at least 5 seconds between each update of our debug output. That isn\\'t great for seeing how well our object detection is working, compared to the continuous video stream we had before. But writing a bot this way will still work, and it keeps things simple if you don\\'t mind doing the object detection only when you need it.\\\\n\\\\nIf you want to get more advanced, you can fix this problem by using threading.\\\\n\\\\nThreading, or multithreading, is the ability that all modern computers have to run multiple processes or threads in parallel at the same time. This is what allows you to have multiple programs running at once. Right now our bot script runs as just a single thread, but by using the Python threading library we can make it branch out and do multiple things at once (run in multiple threads).\\\\n\\\\nIn our case, what it\\'d be great to do, is to have our main script running in the main thread, and then branch off our bot actions into a separate thread. That way the bot can go off and do the things it needs to do without blocking the execution of our main thread where the object detection is happening.\\\\n\\\\nIn the main loop we call Thread() to create a new thread object in our program. We tell it what code to execute by giving it a function name as the target, and then passing in the parameters needed by the function as a tuple. We can then run that function in a separate thread by calling start() on that thread objects.\\\\n\\\\nIn this example, I\\'m using a global variable to make sure only one bot action thread is running at a time. This is a simple way to pass information between threads. This can be fine for smaller scripts, but using global variables is generally discouraged and can make code difficult to maintain. So let me show you a better way to do this without using global variables.\\\\n\\\\nLet\\'s put everything into threads. So we\\'ll have one thread for capturing our screenshots, another for doing the object detection, another for the bot actions, and then our main thread coordinating all this.\\\\n\\\\nWe\\'ll start with the object detection. Let\\'s pull this out of the main script and put it into its own class.\\\\n\\\\nContinue with the written tutorial here: https://learncodebygaming.com/blog/how-to-build-a-bot-with-opencv\\\\n\\\\n#programming #python\"",
    "lengthSeconds": "2492",
    "uploadDate": "2020-09-12",
    "thumbnail_url": "https://i.ytimg.com/vi/FylRUEEWhCo/maxresdefault.jpg"
  },
  {
    "link": "watch?v=XrCAvs9AePM",
    "title": "Training a Cascade Classifier - OpenCV Object Detection in Games #8",
    "tags": "opencv, python, cascade classifier, train cascade classifier opencv python, haar cascade explained, opencv machine learning, train opencv model, opencv windows tutorial, opencv object detection, windows haar, haar training, machine learning project in python step",
    "scraped_at": 1684583384.6859934,
    "genre": "Education",
    "views": "114680",
    "desc": "In this tutorial, we train an OpenCV Cascade Classifier entirely on Windows to detect objects in a video game in real-time. Making your own Haar Cascade isn\\'t complicated, but it can be a lot of work. This project is a great intro for beginners to Machine Learning. In this video I explain the Machine Learning basics, and walk you through the implementation of training and using your own model for computer vision in Python.\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKtkKq2lK5xko4X-8EZzFPI\\\\n\\\\nGrab the code on GitHub: https://github.com/learncodebygaming/opencv_tutorials\\\\nOfficial tutorial on training a Cascade Classifier: https://docs.opencv.org/4.2.0/dc/d88/tutorial_traincascade.html\\\\nOfficial tutorial on using a Cascade Classifier: https://docs.opencv.org/4.2.0/db/d28/tutorial_cascade_classifier.html\\\\nInstalling OpenCV 3.4 on Windows: https://docs.opencv.org/3.4.11/d3/d52/tutorial_windows_install.html\\\\n\\\\n0:42 Machine Learning basics\\\\n2:28 Haar Cascade Classifier explained\\\\n4:04 Gathering the positive and negative images\\\\n7:06 Creating the negative description file\\\\n8:59 The positive description file\\\\n9:41 Installing opencv_annotation, opencv_createsamples, and opencv_traincascade on Windows\\\\n12:19 How to use opencv_annotation\\\\n15:17 Fixing Error: Assertion failed...\\\\n15:45 How to use opencv_createsamples\\\\n18:06 How to train a model with opencv_traincascade\\\\n22:24 How machine learning training works for image classifiers\\\\n23:06 How to use a trained model for object detection\\\\n25:59 How to train a better cascade classifier\\\\n29:00 What is overfitting?\\\\n30:27 Arguments used for my best Haar Cascade Classifier model\\\\n\\\\nFull written tutorial: https://learncodebygaming.com/blog/training-a-cascade-classifier\\\\nMy gear: https://learncodebygaming.com/gear\\\\n\\\\nNormally when we program something, like when we write a function (for example), we expect certain inputs (like the parameters in our function). And then at the end we\\'ll end up with some output (like the return part of a function). And in the middle, to get from the input to the output, we write some logic (if statements, loops, all that stuff).\\\\n\\\\nWith Machine Learning it\\'s exactly the same, except that middle part is replaced by a Machine Learning model. So with Machine Learning you\\'re not writing any of your own logic anymore, instead you\\'re trusting this mysterious dark jumble of multi-dimensional calculus to transform your inputs into your desired output.\\\\n\\\\nAnd at first your model won\\'t know how to do... what you want it to do. Its output will be no better than random guesses. To get the output we want, we must first train our model. We do that by showing it lots of input examples, and for each example we tell the model what we want the output to be. Once it has seen enough examples, a well trained model will be able to accurately predict what the output should be given some new set of inputs.\\\\n\\\\nThat\\'s the super summarized version of how all Machine Learning works.\\\\n\\\\nIn our case, our input is going to be screenshot images from the video game we\\'re playing. And the output we want is a list of rectangles that identify the objects we\\'re trying to detect. And fortunately for us, OpenCV\\'s Cascade Classifiers are designed to do exactly that.\\\\n\\\\nThe way a Haar classifier works is it looks for features in an image, very much like the ORB feature detection we talked about in the last video. And it looks for these features in different layers. So at the top layer it will be looking at large features that span nearly the whole image window, down to the bottom layer where it\\xe2\\x80\\x99s looking for very fine details. This makes the end model fast enough to detect objects in real-time, because it can quickly reject areas of the image that fail to match the features in the top-most layers. And it can spend more time analyzing areas of the image that are good candidates, by studying those finer details.\\\\n\\\\nHopefully you have a general understanding now of how Machine Learning works and what makes a Haar Cascade Classifier unique. The great part is, the code for all of this is very straight forward.\\\\n\\\\nThe art of doing this well actually isn\\'t so much in the code, it\\'s more in gathering the data to train your model with. To get good results, you need quality data, and you need lots of it.\\\\n\\\\nNow we need two types of data: We need the positive images - which are images that contain the object we\\'re trying to detect... and we need negative images - which will be screenshots from the game that don\\'t contain our object at all. The Machine Learning algorithm needs to see both what is and what is not the object in order for it to learn.\\\\n\\\\nContinue with the written tutorial here: https://learncodebygaming.com/blog/training-a-cascade-classifier\"",
    "lengthSeconds": "1949",
    "uploadDate": "2020-08-22",
    "thumbnail_url": "https://i.ytimg.com/vi/XrCAvs9AePM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=PcOAB6lZ5l0",
    "title": "Canny Edge Detection? ORB Feature Matching? - OpenCV Object Detection in Games #7",
    "tags": "opencv, python, opencv canny edge detection, opencv orb feature matching, opencv feature detection, opencv feature matching, feature matching, object detection, image processing, edge detection, opencv tutorial, feature detection, computer vision, python object detection, open cv, object detection python, opencv orb, opencv canny, opencv canny python parameters, canny edge, canny edge detector, opencv keypoint matching, opencv erode dilate, opencv erosion and dilation",
    "scraped_at": 1684583383.2269921,
    "genre": "Education",
    "views": "27594",
    "desc": "Learn from my experience with using Canny Edge Detection and ORB Feature Matching to detect objects in video games in real-time.\\\\n\\\\nFull OpenCV tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKtkKq2lK5xko4X-8EZzFPI\\\\n\\\\nGrab the code on GitHub: https://github.com/learncodebygaming/opencv_tutorials\\\\n\\\\nOfficial Canny Edge tutorial: https://docs.opencv.org/4.2.0/da/d22/tutorial_py_canny.html\\\\nErode and Dilate tutorial: https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_imgproc/py_morphological_ops/py_morphological_ops.html\\\\nGood discussion of scaling canny results, plus keypoint matching with ORB: https://stackoverflow.com/a/50660014/4655368\\\\nOfficial Feature Detection ORB tutorials: https://docs.opencv.org/4.2.0/db/d27/tutorial_py_table_of_contents_feature2d.html\\\\n\\\\n1:10 Adding more trackbars to the GUI\\\\n2:14 OpenCV Erode and Dilate\\\\n5:08 Canny Edge Detection\\\\n7:45 Why cv.Canny() doesn\\'t work with cv.matchTemplate()\\\\n10:49 ORB Feature Detection\\\\n14:23 Debugging with cv.drawMatches()\\\\n\\\\nRead the full written tutorial with code samples here: https://learncodebygaming.com/blog/canny-edge-detection-orb-feature-matching\\\\n\\\\nMy original plan was to simply apply Canny edge detection to our processed images, and then send those through matchTemplate() like we have been doing. Because the edges around our target objects do not change much with lighting or color changes, the idea was we could use this to get around the problems with detecting limestone deposits in Albion Online due to the presence of a day/night cycle. But as you\\'ll see, this didn\\'t work out very well.\\\\n\\\\nThe code to apply a Canny edge filter is very similar to the last tutorial in this series. We\\'ll add some new trackbars to our GUI, create a data structure to hold the values of these trackbars, and write a method to get an object with the current values from the GUI.\\\\n\\\\nThe Canny edge filter takes two threshold parameters that determine the fineness of the edge detection. In addition, I\\'ll include an erode and dilate filter that will give us even greater control over the edge detection results. The method I came up with to apply these filters, similar to apply_hsv_filter() from the previous tutorial, is this:\\\\n\\\\ndef apply_edge_filter(self, original_image, edge_filter=None):\\\\n    # if we haven\\'t been given a defined filter, use the filter values from the GUI\\\\n    if not edge_filter:\\\\n        edge_filter = self.get_edge_filter_from_controls()\\\\n\\\\n    kernel = np.ones((edge_filter.kernelSize, edge_filter.kernelSize), np.uint8)\\\\n    eroded_image = cv.erode(original_image, kernel, iterations=edge_filter.erodeIter)\\\\n    dilated_image = cv.dilate(eroded_image, kernel, iterations=edge_filter.dilateIter)\\\\n\\\\n    # canny edge detection\\\\n    result = cv.Canny(dilated_image, edge_filter.canny1, edge_filter.canny2)\\\\n\\\\n    # convert single channel image back to BGR\\\\n    img = cv.cvtColor(result, cv.COLOR_GRAY2BGR)\\\\n\\\\n    return img\\\\n\\\\nThe result of cv.Canny() is a black and white image, where the white pixels are places where an edge was detected, and the black pixels are where there was none. I convert that image back into BGR format so that the result will continue to work with our other image processing filters applied after it.\\\\n\\\\nIn main.py, remember to import the new EdgeFilter class, make a call to apply_edge_filter() in the main loop, and output the results to a new OpenCV window using imshow(). Try playing around with the new trackbars to see what kind of results you can get.\\\\n\\\\nNow the next step would be to crop out an image of your target object from the edges processed image, and like before use that as a needle and the Canny edge image as the haystack when you call find() on the vision object. If you try that, you\\'ll find that it does a terrible job at matching your target as soon as you move your character even slightly. This is the case even if you turn your match threshold way down.\\\\n\\\\nThe reason we have such poor results is because of how matchTemplate() works. Remember this comparison method simply overlays the needle image on top of the haystack image, at every possible location, and gives a score for how well the pixels in the two layers match. When dealing with black and white images with thin lines like this, those pixels will never match up unless you\\'re in the exact initial position that you took the screen capture from. Any other place where a white pixel is overlaid on a black pixel, in this algorithm, will be considered a terrible match.\\\\n\\\\nTo salvage this attempt at using Canny edge images for object detection, I decided to try introducing ORB feature detection. OpenCV\\'s feature detection algorithms have the same goal as matchTemplate(), but rather than naively comparing pixel values, they attempt to identify features that are common in both the needle and haystack images. So it\\'s a more sophisticated matching technique.\\\\n\\\\nContinue with the written tutorial here: https://learncodebygaming.com/blog/canny-edge-detection-orb-feature-matching\"",
    "lengthSeconds": "1248",
    "uploadDate": "2020-07-30",
    "thumbnail_url": "https://i.ytimg.com/vi/PcOAB6lZ5l0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=0tKzqsRtmyY",
    "title": "HSV Color Range Thresholding - OpenCV Object Detection in Games #6",
    "tags": "opencv, python, object detection, opencv hsv color detection, opencv hsv color range, hsv opencv python, hsv threshold, hsv thresholding, hsv filter, hsv filtering, opencv inrange, opencv gui, opencv trackbar, hue saturation value, computer vision tutorial, python custom data structure, color channels, opencv color detection, opencv color tracking, hsvfilter, python opencv game, opencv projects python, opencv image preprocessing, image processing using python, inrange, open cv",
    "scraped_at": 1684583383.7589927,
    "genre": "Education",
    "views": "37081",
    "desc": "Improve your object detection by using the HSV Thresholding technique in OpenCV. I\\'ll also show you how to use the OpenCV GUI builder to adjust your image processing in real-time. This is a Python tutorial.\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKtkKq2lK5xko4X-8EZzFPI\\\\n\\\\nGrab the code on GitHub: https://github.com/learncodebygaming/opencv_tutorials\\\\n\\\\n0:58 Refactoring find()\\\\n4:08 HSV thresholding theory\\\\n5:34 Building an OpenCV GUI for filter controls\\\\n7:30 Creating a custom data structure in Python\\\\n8:49 Applying an HSV color filter\\\\n11:02 Increasing saturation and brightness of an image\\\\n12:43 Color filter demonstration\\\\n16:36 Combining HSV filtering with object detection\\\\n20:33 Few more tweaks for find()\\\\n\\\\nRead the full written tutorial with code samples here: https://learncodebygaming.com/blog/hsv-color-range-thresholding\\\\n\\\\nIn the previous steps, we learned how to apply OpenCV\\'s matchTemplate() to a video game in real-time. This code achieves object detection, but in many situations it\\'s not working as well as we\\'d like. We can get better results by first processing our images before sending them through to matchTemplate().\\\\n\\\\nIn this article, we\\'ll discuss one such method for pre-processing: Hue-Saturation-Value filtering (HSV range thresholding).\\\\n\\\\nIn preparation to potentially apply multiple types of filters in the future, let\\'s begin by refactoring our find() method in the Vision class. We\\'ll break this up into different methods for greater flexibility. Let\\'s make find() simply return the rectangle results from match templates. I\\'ve added additional code here to limit the maximum number of results returned, as well as to return an empty list that can easily be joined with result lists from other find() calls.\\\\n\\\\nNext we\\'ll write get_click_points(self, rectangles), which will return a list of [x, y] coordinates at the midpoint of each rectangle. This is the same code we had in find() before, but now it\\'s untangled from the debug output.\\\\n\\\\nFinally, let\\'s write separate methods for draw_rectangles() and draw_crosshairs(). These will replace our debug output from before. And instead of having these methods be responsible for calling cv.imshow(), let\\'s instead simply return the output images and move the cv.imshow() responsibility to our main file.\\\\n\\\\nIn our main loop, we can now call find() to get the rectangle results from matchTemplate(), call draw_rectangles() to get the screenshot image with those rectangles drawn on it, and then give that processed image to cv.imshow().\\\\n\\\\nNow\\'s a good time to test and confirm everything is still working as before.\\\\n\\\\nWith our vision code set up like this, we now have the flexibility to mix and match what sort of processing we do on each image before ultimately displaying it. And we can do that processing either before or after calling find() to search for our needle image.\\\\n\\\\nOur goal in the rest of this series is to use additional processing to make our object detection targets easier for matchTemplate() to recognize. We\\'ll begin this exploration with HSV color filtering.\\\\n\\\\nUp to this point, we\\'ve been working with images in BGR format (Blue-Green-Red). In this format, each of these three color channels is represented by a number from 0 to 255, where 0 is the complete lack of this color and 255 is the complete presence of this color. If the object we are looking to detect is blue, we might try ignoring the green and red channels and just focus on the blue, where our object really pops out. This could be done by changing the green and red value on every pixel in our image to 0, so that only the blue values remain. This would eliminate any non-blue objects from possibly causing a false detection.\\\\n\\\\nWe could go one step further if our object was always bright blue, and we wanted to ignore dark blue objects. In that case, we could look at the blue value of every pixel and if it\\'s below a certain value (say 150) change that value to 0. This would effectively eliminate all dark blue objects.\\\\n\\\\nThe technique we\\'ve just described is called color filtering, or range thresholding (in this context they mean the same thing). By pre-processing an image in this way, it reduces the chance of false-positives, which in turn allows us to lower the match threshold we give matchTemplate. The net result is we can detect a wider variety of objects from a single template image, without also exploding our rate of incorrect detections.\\\\n\\\\nContinue with the written tutorial here: https://learncodebygaming.com/blog/hsv-color-range-thresholding\"",
    "lengthSeconds": "1368",
    "uploadDate": "2020-07-14",
    "thumbnail_url": "https://i.ytimg.com/vi/0tKzqsRtmyY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=7k4j-uL8WSQ",
    "title": "Real-time Object Detection - OpenCV Object Detection in Games #5",
    "tags": "opencv, python, object detection, opencv tutorial, opencv object detection, opencv python tutorial, using opencv to detect objects, opencv projects, computer vision tutorial, real time object detection, real time object detection opencv python, real time object tracking, realtime, real",
    "scraped_at": 1684583382.5150185,
    "genre": "Education",
    "views": "69661",
    "desc": "Learn how to detect objects inside a game window in real-time using OpenCV.\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKtkKq2lK5xko4X-8EZzFPI\\\\n\\\\nGrab the code on GitHub: https://github.com/learncodebygaming/opencv_tutorials\\\\n\\\\n0:37 WindowCapture updates\\\\n3:28 Integrating findClickPositions()\\\\n5:18 Updating main\\\\n7:20 Demonstration of real-time detection working!\\\\n7:59 Creating a Vision class\\\\n14:12 Browser game demonstration\\\\n15:56 Shortcomings of this object detection\\\\n\\\\nRead the full written tutorial with code samples here: https://learncodebygaming.com/blog/real-time-object-detection\\\\n\\\\nIn the first three parts of this tutorial series, we learned how to use OpenCV\\'s matchTemplate() to detect objects inside an image. Then in part #4, we learned how to quickly capture screenshots and display them as a video stream inside of an OpenCV window. Now we\\'re ready to combine together everything we\\'ve learned so far in order to detect objects in real-time.\\\\n\\\\nWe could reuse our WindowCapture class completely unchanged from the last tutorial, but I want to make a few improvements to it. First let\\'s save this class to its own file if you haven\\'t done so already: windowcapture.py.\\\\n\\\\nI\\'d like to convert the list_window_names() member function into a static method. This is done by adding the @staticmethod decorator above the method definition, and removing self from the parameters. The reason you might want to do this is that it allows us to call this function at any time without first instantiating an object, like this: WindowCapture.list_window_names(). You\\'ll find this to be more convenient. Note that we can only do this because list_window_names() does not reference any class properties.\\\\n\\\\nI\\'ve also changed the constructor to accept None for the window_name. When given no window name, we\\'ll have WindowCapture just capture the entire screen. I\\'ve found that certain applications return a black screen (Chrome), or do not update after the initial image capture (Firefox), and capturing the entire screen can be a suitable fallback plan in those cases.\\\\n\\\\nLet\\'s also save our findClickPositions() function to its own file. I\\'ve called mine vision.py.\\\\n\\\\nA few alterations need to be made to findClickPositions(). This function will now be processing an OpenCV image returned by WindowCapture instead of reading an image from a file. To account for this, we\\'ll change the second parameter from haystack_img_path to just haystack_img, and we\\'ll remove the cv.imread() call. In the debugger portion of this function, we\\'ll also want to remove cv.waitKey(), as this is now handled in our main loop (as covered in part #4). That same block of code should also no longer fall under the if needle found conditional, because we want to update the image stream with cv.imshow() even when no matches are found.\\\\n\\\\nOur main.py file will also pick up from where we left off in part #4. We simply need to swap out our cv.imshow() call with a call to findClickPositions() instead.\\\\n\\\\nThe first parameter in findClickPositions() is the needle image we want to search for. You\\'ll want to manually take a screenshot and crop out the item you want to match (like we did in part #1). For the second parameter we\\'ll pass in the screenshot returned by WindowCapture\\'s get_screenshot(). Then set your threshold, and enable one of the debug modes.\\\\n\\\\nNow when you run main.py with your game client open, you can see your object being detected in the OpenCV window in real-time! Move your character around a bit to test the effectiveness of this detection.\\\\n\\\\nBefore we discuss some of the limitations and shortfalls of our object detection, let\\'s first make some improvements to our vision.py code. I want to convert this into a class, to keep everything more organized as we improve upon what we have.\\\\n\\\\nWe\\'ll call our new class Vision, and let\\'s read in the needle image in the constructor so that we don\\'t need to repeat that step during every iteration of our main loop. We can also assign our matchTemplate() comparison method here. This will allow us to use different methods for different visions.\\\\n\\\\nWe\\'ll want to make findClickPositions() a method inside of the Vision class. To do that, get your tabs right, and remember to add self as the first parameter. We also no longer need the needle_img_path parameter in this function, nor the other steps that are now handled by the construtor. Remember to update all usages of those variables that are now class properties to use self.. I\\'m also going to take this opportunity to change this function name to simply find().\\\\n\\\\nNow we need to update our main.py to work with our new Vision class. Update the import, and then we can initialize our vision object before starting the main loop. Inside the main loop, we can now call find() on that vision object, passing in the latest screenshot from WindowCapture.\\\\n\\\\nContinue with the written tutorial here: https://learncodebygaming.com/blog/real-time-object-detection\"",
    "lengthSeconds": "1095",
    "uploadDate": "2020-06-22",
    "thumbnail_url": "https://i.ytimg.com/vi/7k4j"
  },
  {
    "link": "watch?v=Z8ZUSuRCbd8",
    "title": "Gladiabots Review & Tips for New Programmers",
    "tags": "gladiabots, gladiabots review, new programmer tips, gladiabots tips, ai battle games, beginner ai games, how to learn programming in mobile, best mobile app to learn programming, gladiabot, learn code by gaming, learncodebygaming, ai strategy game, coding games on mobile, coding games on steam, block coding for beginners, learn to code, how to play gladiabots, coding simulator game, robot battle games android, best ai games, programming games for beginners",
    "scraped_at": 1684583383.8579922,
    "genre": "Education",
    "views": "6947",
    "desc": "Gladiabots is an AI strategy game, where you write code for a team of robots and send them into battle against other teams. Matches are quick, and the only way to climb the ladder is to keep improving your AI. But is it any good? And will it help you learn how to program?\\\\n\\\\nGladiabots on Steam: https://store.steampowered.com/app/871930/Gladiabots/\\\\nGladiabots Wiki: https://wiki.gladiabots.com/\\\\n\\\\nGladiabots has 3 game types: Collection, Domination, and Elimination. And 4 classes of robots: Assault, Shotgun, Machine Gun, and Sniper. You can play single player or multiplayer, with a multitude of game modes including: random maps, campaigns, online leagues and tournaments, and private matches against your friends.\\\\n\\\\nThe in-game currency can be earned doing almost any activity, and don\\'t worry: it\\'s not pay to win. The credits gained only unlock cosmetic skins.\\\\n\\\\nProgramming your AI is done using an intuitive drag-and-drop interface. Unfortunately, there\\'s no way to type in your AI code instead. But the block-coding editor is at least pleasant to work with.\\\\n\\\\nMatches are 5 minutes a piece, or until the objective is achieved. And you don\\'t need to sit through all 5 minutes of your bots embarrassing themselves unless you want to: you can easily fast forward through an entire match. You can also rewatch old matches, and slow down matches to figure out where your logic is going wrong.\\\\n\\\\nOverall I\\'ve been impressed by the quality of Gladiabots. It has that handmade feel of an indie game, but the UI is surprisingly intuitive, and the aesthetics are pleasing. It\\'s not the kind of game to make me laugh or get my heart racing\\xe2\\x80\\xa6 rather it\\'s fun in a tinkerer\\'s sort of way. It\\'s engaging but not all consuming. If I play before bed, I\\'ll wake up still strategizing in my head the next morning.\\\\n\\\\nAt only $15, Gladiabots is a great value for all the content you get. It\\'s available on Steam, but also on Android and iOS. And it\\'s on these mobile platforms where the game really shines.\\\\n\\\\nNormally, I would never recommend a coding game that doesn\\'t actually have you writing code if you\\'re trying to become a programmer. But I get questions from people all the time asking how they can learn to program using just their phone. And if that\\'s your situation, Gladiabots isn\\'t a bad place to start.\\\\n\\\\nSo while I can\\'t recommend Gladiabots as a serious learning tool, it\\'s still worth checking out if you\\'re one of these people:\\\\n\\\\nThose Curious About Programming. If you\\'ve never programmed before, and you\\'re not sure if you\\'ll like it, give Gladiabots a try. If you like this game, I can almost guarantee you\\'ll like programming.\\\\nBeginners Struggling with If/Else or Code Tracing. If you\\'re a beginner programmer, and you\\'re specifically struggling with conditionals and logical flow, then playing Gladiabots might help you get over that hump. If you don\\'t understand what I just said there: if you\\'re having trouble with \\\\\"",
    "lengthSeconds": "330",
    "uploadDate": "2020-06-14",
    "thumbnail_url": "https://i.ytimg.com/vi/Z8ZUSuRCbd8/maxresdefault.jpg"
  },
  {
    "link": "watch?v=WymCpVUPWQ4",
    "title": "Fast Window Capture - OpenCV Object Detection in Games #4",
    "tags": "opencv, python, opencv video capture python, windows game capture, real time image, real time image processing, opencv video capture, capture screen, screenshot python, python record window, swapping through frame, imagegrab, pywin32, opencv tutorial, computer vision tutorial, real time window capture, capturing screen, real time screen capture python, screen reading python, opencv window capture, computer vision beginner tutorial, programming tutorial, grab screen",
    "scraped_at": 1684583384.7645016,
    "genre": "Education",
    "views": "173867",
    "desc": "Learn how to capture window data in real-time as a video stream for processing with OpenCV. We try several different methods searching for the fastest way possible. In this tutorial I also discuss the importance of good Google search skills as a programmer, and we revisit some basic object-oriented programming concepts.\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKtkKq2lK5xko4X-8EZzFPI\\\\n\\\\nGrab the code on GitHub: https://github.com/learncodebygaming/opencv_tutorials\\\\n\\\\nResearch discussed:\\\\nOpenCV getting started with videos: https://docs.opencv.org/4.2.0/dd/d43/tutorial_py_video_display.html\\\\nFastest way to take a screenshot with Python on Windows: https://stackoverflow.com/a/3586280/1893164\\\\nConvert PyAutoGUI image to OpenCV: https://stackoverflow.com/q/32918978/4655368\\\\nConvert SaveBitmapFile to an OpenCV image instead: https://stackoverflow.com/q/41785831/4655368\\\\nBest Numpy reference: https://numpy.org/doc/1.18/user/quickstart.html\\\\nList all your windows: https://stackoverflow.com/q/55547940/4655368\\\\n\\\\n0:47 Main capture loop\\\\n3:16 Using PyAutoGUI screenshot()\\\\n6:24 Measure FPS\\\\n8:27 Using Pillow ImageGrab\\\\n9:31 Using Pywin32 for screenshots\\\\n13:48 Converting win32ui.CreateBitmap() for OpenCV\\\\n17:23 Confining screenshots to a specific window\\\\n18:42 Creating a WindowCapture class\\\\n25:05 Trimming the window capture\\\\n28:15 Image to screen position conversion\\\\n29:35 Wrap up\\\\n\\\\nRead the full written tutorial with code samples here: https://learncodebygaming.com/blog/fast-window-capture\\\\n\\\\nUp to this point, we\\'ve been using OpenCV to detect objects in static images. Now we\\'re ready to apply those same techniques to video games in real time.\\\\n\\\\nRemember that video is just a series of still images shown in rapid succession. In this tutorial our goal is to capture screenshots as fast as possible and display them in an OpenCV window, so that we get a real time video stream of the game we\\'re interested in. This will set us up to begin processing image data with OpenCV in real-time.\\\\n\\\\nOpenCV has a tutorial on \\\\\"",
    "lengthSeconds": "1847",
    "uploadDate": "2020-05-28",
    "thumbnail_url": "https://i.ytimg.com/vi/WymCpVUPWQ4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=m1pbF9BW8tA",
    "title": "Grouping Rectangles into Click Points - OpenCV Object Detection in Games #3",
    "tags": "opencv, python, opencv group rectangles, opencv grouprectangles, opencv click on image, opencv rectangle, opencv rectangle detection, bounding rectangle opencv python, opencv tutorial, opencv object detection, open cv, computer vision tutorial python, opencv python, opencv python tutorial, multiple object detection, multiple object tracking",
    "scraped_at": 1684583384.2699952,
    "genre": "Education",
    "views": "41508",
    "desc": "Learn the trick to using OpenCV groupRectangles() for multiple object detection. This is part 3 in the OpenCV Python tutorial for gaming.\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKtkKq2lK5xko4X-8EZzFPI\\\\n\\\\nGrab the code on GitHub: https://github.com/learncodebygaming/opencv_tutorials\\\\nOpenCV Group Rectangles documentation: https://docs.opencv.org/4.2.0/d5/d54/group__objdetect.html#ga3dba897ade8aa8227edda66508e16ab9\\\\n\\\\n0:22 Review of the problem we\\'re solving\\\\n1:11 Group rectangles documentation\\\\n1:52 Building rectangle list\\\\n4:55 Using groupRectangles()\\\\n7:17 The TRICK\\\\n8:44 Finding the click points\\\\n10:26 Wrapping everything we\\'ve learned into a convenient function\\\\n\\\\nIn this part of the OpenCV tutorial series, I\\'m going to show you how to take overlapping results from matchTemplate() and turn them into single object detections. We\\'ll do this by using OpenCV\\'s groupRectangles(), and there is a trick I\\'ll show you for using this function successfully. We\\'ll finish up this section by converting our rectangle results into positions where our mouse could click to select the detected object.\\\\n\\\\nSo when we use thresholding with matchTemplate() and look at our results visually, we can quickly see that we\\'ve detected some number of objects. In the example below, it looks like we\\'ve detected 12 cabbages. But when we check our detected locations list, you\\'ll see that we have far more than 12 results. This is because we\\'ve found many matching results that are very close to one another. You can also see this visually in the result image as some box lines look thicker. These are actually many different detection results all overlapping each other.\\\\n\\\\nWe can solve this problem by using OpenCV\\'s groupRectangles().\\\\n\\\\nThe groupRectangles() function expects a list of rectangles that are in the form of [x, y, width, height]. It will then return a new list of rectangles where the rectangles that are near to each other have been grouped together. So the first thing we must do to use this function is to convert our list of (x, y) location results into a list of rectangles.\\\\n\\\\nfor loc in locations:\\\\n    rect = [int(loc[0]), int(loc[1]), needle_w, needle_h]\\\\n    rectangles.append(rect)\\\\n\\\\nNow that our rectangles list is constructed, we can call groupRectangles():\\\\n\\\\nrectangles, weights = cv.groupRectangles(rectangles, groupThreshold=1, eps=0.5)\\\\n\\\\nThe groupThreshold parameter will almost always be 1. If you set it to 0 it\\'s not going to group any rectangles at all. And if you set it to something higher, it\\'s going to require that more rectangles are overlapping each other before creating a grouped result for them.\\\\n\\\\nThe eps parameter controls how close together the rectangles need to be before they will be grouped together. Lower values require that rectangles be closer together to be merged, while higher values will group together rectangles that are farther away. This is a good value to play around with to make sure you\\'re getting the results you expect.\\\\n\\\\nFinally, groupRectangles() returns both the new rectangles list and weight information about the grouping process (which we will ignore).\\\\n\\\\nIf you run this code, you should find that your overlapping detection results have been discarded. But depending on the threshold that you set, you might also notice that some of your detections have been lost. Why is that?\\\\n\\\\nThis is the trick to using groupRectangles() that I mentioned earlier. If you have a lone match result that doesn\\'t have any other nearby or overlapping matches to it, groupRectangles() will discard that result. The best way I\\'ve found to correct this issue is to simply add every rectangle to our rectangles list twice. This will give you back your lost results.\\\\n\\\\nNow that we have nice detection results, where each object is detected just once, we can easily convert these rectangles into positions at the center of each rectangle. These represent points we could click on to select the detected object.\\\\n\\\\nContinue with the written tutorial here: https://learncodebygaming.com/blog/grouping-rectangles-into-click-points\"",
    "lengthSeconds": "842",
    "uploadDate": "2020-05-17",
    "thumbnail_url": "https://i.ytimg.com/vi/m1pbF9BW8tA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ffRYijPR8pk",
    "title": "Thresholding with Match Template - OpenCV Object Detection in Games #2",
    "tags": "opencv, python, opencv object detection, detect multiple objects in image opencv, opencv python tutorial, numpy, numpy where function, python numpy where, opencv game bot, how to use opencv, using opencv to detect objects, python find image in image, threshold opencv python, template matching, object detection tutorial, feature matching, how to detect objects in images using opencv, opencv projects, python zip function, matchtemplate, opencv threshold, opencv thresholding",
    "scraped_at": 1684583382.864018,
    "genre": "Education",
    "views": "64201",
    "desc": "Detect multiple objects with OpenCV\\'s match template function by using thresholding. In this tutorial, we dig into the details of how this works.\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKtkKq2lK5xko4X-8EZzFPI\\\\n\\\\nGitHub Repo: https://github.com/learncodebygaming/opencv_tutorials\\\\nOpenCV documentation: https://docs.opencv.org/4.2.0/\\\\nOfficial template matching tutorial: https://docs.opencv.org/4.2.0/d4/dc6/tutorial_py_template_matching.html\\\\n\\\\n1:18 Understanding the result from matchTemplate()\\\\n2:25 Using the debugger in VSCode\\\\n5:08 Why is the match template result smaller than the original image?\\\\n6:18 Using numpy where() to filter the results\\\\n7:27 Converting np.where() to a list of pixel positions\\\\n9:41 Adjusting the threshold\\\\n10:11 Drawing multiple rectangles\\\\n12:27 Using TM_SQDIFF_NORMED\\\\n\\\\nWith thresholding, we can detect multiple objects using OpenCV\\'s matchTemplate() function. They discuss briefly how to do this in the offical tutorial, but here I will cover it more in-depth.\\\\n\\\\nPreviously we used minMaxLoc() to get the best matching position for our needle image, but matchTemplate() actually returns a result matrix for all the positions it searched.\\\\n\\\\nEach value in this matrix represents the confidence score for how closely the needle image matches the haystack image at a given position. The index of the outer dimension represents the Y position, and the index of the inner list represent the X position. For example, the confidence value 0.58679795 in the data [see: https://learncodebygaming.com/blog/thresholding-with-match-template] corresponds to Y = 1 and X = 6. When we overlay the needle image on the haystack image, such that the upper left corner of the needle is placed at pixel position (6, 1), it\\'s match score is 0.58679795.\\\\n\\\\nNote that the resulting matrix size is (haystack_w \\xe2\\x88\\x92 needle_w + 1) * (haystack_h \\xe2\\x88\\x92 needle_h + 1). This is because there are no meaningful match results when the needle image is partially overhanging the haystack image.\\\\n\\\\nThe idea with thresholding is, we want to get the coordinates of all the places where the match confidence score is above some threshold number that we set.\\\\n\\\\nTo do that, the documentation suggests we should use the np.where() function. This will give us all the locations above that threshold.\\\\n\\\\nIn the result, the first array contains the Y positions, and the second contains the X positions. So in the above example we found two matches above the threshold we set, at positions (1, 1) and (15, 5).\\\\n\\\\nSo we have the data we need know, but the format returned by np.where() isn\\'t very convenient to work with. So lets convert it to a list of (X, Y) tuples: list(zip(*locations[::-1]))\\\\n\\\\nIn this line of code, [::-1] reverses a numpy array, so that we get the X values to come before the Y. Then the star * unpacks a list, so that we now have two one-dimensional arrays instead of one two-dimensional array. We then use zip() to merge those two lists into a bunch of new lists, each comprised of the elements from the input lists that share the same index. And because zip() actually returns a generator instead of a rendered list, we wrap it all in list() to get the final result we\\'re looking for.\\\\n\\\\nSo that\\'s how we\\'ve converted the Y and X arrays returned by np.where() into a list of (X, Y) tuples.\\\\n\\\\nNow that we have a list of matching locations, let\\'s draw rectangles around all of those locations. We\\'ll adapt our code from part 1 to do this, and simply loop over all the locations.\\\\n\\\\nKeep adjusting your threshold, and your comparison method, until you get as many correct matches as possible without any false positives. In this case, I achieved the best result by using cv.TM_SQDIFF_NORMED and setting a threshold of values below 0.17 (remember TM_SQDIFF_NORMED uses inverted results).\\\\n\\\\nYou\\'ll no doubt notice that you are getting many more location results than the number of rectangles you\\'re seeing on the result image. You\\'ll also notice that some of the rectangles are much thicker than others. This indicates that you\\'re getting many match results that are very close to one another, and your rectangles are overlapping each other.\\\\n\\\\nVisually this may not be too problematic, but if you\\'re trying to count up the number of some item in an image, or if you\\'re searching for screen locations to click on, then you\\'ll need some way to clean this up. And that\\'s what we\\'ll be covering in part 3 of this tutorial: how to group those overlapping rectangles into single detection results.\\\\n\\\\nRead the full written tutorial here: https://learncodebygaming.com/blog/thresholding-with-match-template\"",
    "lengthSeconds": "844",
    "uploadDate": "2020-05-03",
    "thumbnail_url": "https://i.ytimg.com/vi/ffRYijPR8pk/maxresdefault.jpg"
  },
  {
    "link": "watch?v=KecMlLUuiE4",
    "title": "OpenCV Object Detection in Games Python Tutorial #1",
    "tags": "opencv, python, opencv object detection, opencv python tutorial, python image processing, python find image on screen and click, opencv find image in image, opencv object tracking, opencv python install, python find image in image, find objects in pictures, computer vision projects, using opencv to detect objects, opencv projects, opencv matchtemplate, opencv match image, opencv template matching, computer vision tutorial, image recognition, detect objects",
    "scraped_at": 1684583382.170019,
    "genre": "Education",
    "views": "191943",
    "desc": "Learn how to use OpenCV for object detection in video games. This intro tutorial will show you how to install OpenCV for Python and get started with simple image template matching. This will serve as our foundation as we explore many different computer vision techniques in future videos.\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKtkKq2lK5xko4X-8EZzFPI\\\\n\\\\nGitHub Repo: https://github.com/learncodebygaming/opencv_tutorials\\\\nOpenCV documentation: https://docs.opencv.org/4.2.0/\\\\nOfficial template matching tutorial: https://docs.opencv.org/4.2.0/d4/dc6/tutorial_py_template_matching.html\\\\n\\\\n0:24 How to install OpenCV\\\\n1:45 How OpenCV relates to PyAutoGUI\\\\n2:52 How to navigate the OpenCV documentation\\\\n4:53 Comparison methods visualized\\\\n5:39 Writing code for cv.matchTemplate()\\\\n\\\\nOpenCV is an open source computer vision library with hundreds of functions for processing and understanding images. In this tutorial, I\\'m going to show you how to get started with OpenCV in Python by using it to find an image inside another image. This simple form of object detection will be a good starting point before we move on to more advanced image recognition techniques.\\\\n\\\\nThe quickest way to get started with OpenCV is: pip install opencv-python\\\\n\\\\nOnce installed, you can use the library by importing cv2. Numpy is used extensively when working with OpenCV data, so the top of your Python files will look like this:\\\\n\\\\nimport cv2 as cv\\\\nimport numpy as np\\\\n\\\\nThat\\'s all there is for setup. Now let\\'s grab an image we want to process. I\\'m going to be using this screenshot from Albion Online, but any screenshot will do.\\\\n\\\\nWhat we\\'re going to do is crop out a small section from our screenshot, save that as a separate image file, and then we\\'re going to use OpenCV to find the position of the smaller image inside our entire screenshot. From my screenshot, I\\'ll crop out one of the cabbages.\\\\n\\\\nThe OpenCV function we\\'ll be focusing on is called matchTemplate(). In the documentation, we can see we\\'re going to give this function an image to search over, an image to search for, and a method type for doing the comparison. And we\\'ll end up with a result array. You\\'ll want to experiment with the different comparison methods to see what works best for your use-case.\\\\n\\\\nAlright, let\\'s write some code. The first thing we want to do is load our image files.\\\\n\\\\nhaystack_img = cv.imread(\\'albion_farm.jpg\\', cv.IMREAD_UNCHANGED)\\\\nneedle_img = cv.imread(\\'albion_cabbage.jpg\\', cv.IMREAD_UNCHANGED)\\\\n\\\\nThe \\\\\"",
    "lengthSeconds": "869",
    "uploadDate": "2020-04-25",
    "thumbnail_url": "https://i.ytimg.com/vi/KecMlLUuiE4/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ysT1X49waTs",
    "title": "Perfecting our Woodcutting Bot - Learn JavaScript by playing Runescape 4/4",
    "tags": "javascript, runescape, rsps, old school runescape botting, how to program a runescape bot, mining bot, osrs botting, old school runescape bot, robot.js examples, woodcutting bot, how to bot runescape, how to bot osrs, osrs bot guide, osrs botting guide, how to code a runescape bot, robot.js, runescape bot, osrs bot, how to code osrs bot, javascript automation, runescape private server bot, nodejs bot, color bot, node js game tutorial, node js bot, osrs, bot source code, js",
    "scraped_at": 1684583383.432996,
    "genre": "Education",
    "views": "22937",
    "desc": "We finish coding our perfect woodcutting RuneScape bot! In part 4 we use our pixel color matching skills to confirm when logs appear in our inventory. This fixes a bug where we could drop something valuable instead, and it allows us to greatly speed up our bot. Finally, we use the color botting technique one more time to verify that every automated click performs the expected action.\\\\n\\\\n* This tutorial is for educational purposes only *\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfJjTJrovnq2lBnov_g0ZpN3\\\\n\\\\nView the Code\\\\nGitHub Repo: https://github.com/learncodebygaming/woodcutter\\\\nRobotJS Documentation: http://robotjs.io/docs/syntax\\\\n\\\\nRecommended JavaScript Resources\\\\nEloquent JavaScript: https://amzn.to/3deUEfb or online edition at https://eloquentjavascript.net/\\\\nW3Schools: https://www.w3schools.com/js/default.asp\\\\n\\\\n1:08 Confirm item to drop is a log\\\\n4:52 Harvesting faster\\\\n9:25 Confirm tree chop action\\\\n15:26 Final bot demonstration\\\\n16:48 Exercise ideas for what botting projects to code next\\\\n\\\\n* If your mouse is not moving to the correct coordinates *\\\\nTry this: https://github.com/learncodebygaming/woodcutter#if-your-mouse-is-not-moving-to-the-correct-coordinates\\\\n\\\\n--- 5 Project Ideas ---\\\\n\\\\nTo wrap up this tutorial, I want to leave you with some ideas for what your next steps could be. You\\'ve followed along with me up to this point, so now to really lock in your understanding it\\'d be a great idea to take some steps out on your own.\\\\n\\\\nHere\\'s five ideas for improving and expanding upon this bot, from easiest to hardest:\\\\n\\\\n1. Exit the script if you do 5 camera rotations in a row, because if that happens you\\'ve clearly left the forest.\\\\n2. Auto logout from the game when your script ends. You can do this by automating a couple of mouse clicks.\\\\n3. Adapt this script for mining instead of woodcutting. It should be very similar, but obviously the colors you\\'re looking for will be different. I haven\\'t tried this myself, so there could be some unforeseen complications with this one.\\\\n4. Auto logout if you\\'re attacked by monitoring your health.\\\\n5. Instead of dropping logs one by one, try dumping 8-12 at once. You\\'ll have to consider that you\\xe2\\x80\\x99ll be dealing with 8-12 inventory locations. If you continue to use the one log color, you\\'ll also need to be very precise about what pixels you check. Using relative coordinates, that is how far offset one inventory item is from another, will make this task much easier. Our wait cycle code will also need to be updated to look at the next open location in your inventory as it waits for the chopping to finish.\\\\n\\\\nIf you are attempting any of the exercises and need a little help, feel free to reach out to me about that in the comments, and I\\'ll try my best to help you. Good luck!\\\\n\\\\n--- Written Guide ---\\\\n\\\\nSo we\\'ve actually covered every concept you need to know to build an awesome bot in Runescape. In this video, we\\'re going to put that knowledge into practice by fixing all the issues with our woodcutting bot. It\\'s this last mile that really makes all the difference in the software you write. It\\'s the difference between a robust, impressive application, or a frustrating, bug-riddled experience.\\\\n\\\\nSo the first thing I want to do with our bot is overhaul the dropLogs() function. I\\'m going to show you how we can use our new knowledge about pixel matching to detect when a log appears in our inventory. This will prevent a potential major bug with our code, where we might accidentally drop a valuable item instead of just a log. It will also allow us to greatly speed up our harvesting, because as soon as we see a log in our inventory we\\xe2\\x80\\x99ll know we can move on to the next tree.\\\\n\\\\nOnce we get that working, we\\'ll again use pixel matching, this time to verify that a tree we are about to click on is actually a tree that we want to chop. This will prevent those situations where our screen click doesn\\'t quite result in a tree being cut, either because we\\'ve clicked on the wrong type of tree, or we\\'ve spotted some other brown pixel in the game, like one from the piles of logs our bot is leaving everywhere.\\\\n\\\\nWith these improvements, our automation is going to be looking very good.\\\\n\\\\nSo starting in our dropLogs() function, let\\'s check to see what color of pixel appears when there\\'s a log in our inventory. We\\'ll be checking the pixel position where we perform our initial right click.\\\\n\\\\nRunning this, I find that the pixel color at that position should be \\\\\"",
    "lengthSeconds": "1109",
    "uploadDate": "2020-04-05",
    "thumbnail_url": "https://i.ytimg.com/vi/ysT1X49waTs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=_25IuPegF44",
    "title": "Color Botting Basics - Learn JavaScript by playing RuneScape 3/4",
    "tags": "javascript, runescape, osrs, robotjs, color bot, pixel bot tutorial, computer vision, random mouse clicks, rsps, osrs bot, runescape bot, screen scraper, small automation projects, colour botting, runescape script, image detection, mining script osrs, woodcutting script osrs, javascript gui, auto clicker, js, how to bot osrs 2020, ui automation using javascript, botting from scratch, osrs botting, runescape botting to max, how to make a runescape bot, robot.js examples",
    "scraped_at": 1684583382.7270186,
    "genre": "Education",
    "views": "25655",
    "desc": "Our JavaScript RuneScape bot continues with part 3. Here we learn how to automate dropping logs from our inventory, how to use basic computer vision to find our targets to click on, how to randomize our clicks, and how to automate keyboard key presses to rotate our camera when we can\\'t find any more trees to click on. This video covers the key concepts you need to know to build a video game bot with RobotJS.\\\\n\\\\n* This tutorial is for educational purposes only *\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfJjTJrovnq2lBnov_g0ZpN3\\\\n\\\\nView the Code\\\\nGitHub Repo: https://github.com/learncodebygaming/woodcutter\\\\nRobotJS Documentation: http://robotjs.io/docs/syntax\\\\n\\\\nRecommended JavaScript Resources\\\\nEloquent JavaScript: https://amzn.to/3deUEfb or online edition at https://eloquentjavascript.net/\\\\nW3Schools: https://www.w3schools.com/js/default.asp\\\\n\\\\n0:39 Clicking on multiple trees (the painful way)\\\\n4:56 Dropping logs automatically\\\\n8:50 Refactoring that code into a dropLogs() function\\\\n10:14 Testing RobotJS screen capture\\\\n14:08 Using pixel color matching\\\\n18:07 Arrays\\\\n20:21 Classic for loops\\\\n22:44 Introducing randomness\\\\n25:13 Finishing our computer vision function\\\\n28:42 Review of function return and if statements\\\\n30:05 Understanding fatal error messages\\\\n31:55 Automating key presses to rotate the camera\\\\n36:38 Recap\\\\n\\\\n* If your mouse is not moving to the correct coordinates *\\\\nTry this: https://github.com/learncodebygaming/woodcutter#if-your-mouse-is-not-moving-to-the-correct-coordinates\\\\n\\\\nOk, so we\\'ve got a lot of things to cover in this part of the tutorial. We want to be able to move to different trees and chop them down, instead of waiting for the same tree to respawn. We also want to automatically drop the logs out of our inventory, so that it doesn\\'t fill up with useless logs. And once we\\'ve done these things the painful way, I\\'m going to show you how to do pixel color matching, so that our code can actually see what\\'s going on inside the game and it can try to find tree locations for us.\\\\n\\\\nWhen we left off, our bot could simply click over and over again in the same location to chop down a single tree. Now let\\'s use the same techniques to click on, and chop down, multiple trees.\\\\n\\\\nYou\\'ll find it\\'s quite difficult to find two pixel coordinate positions that will consistently cut down two trees, because as your character moves the pixel location of the tress also moves. I recommend cutting down two trees manually a few times until you get a consistent pattern. After you cut down tree #2, take a screenshot and use that to get the location of tree #1. Then manually cut down tree #1, take a screenshot, and use that to get the location of tree #2. The manually cut down tree #2 once more, so that your character is in the correct starting position for our code (because it will move our character from tree #2 to tree #1 as it\\'s first step).\\\\n\\\\nThis is of course very fragile. We\\'ll come back to this in a little bit.\\\\n\\\\nAs we have been developing our code, our inventory has been filling up with logs whenever we cut down trees. So far we\\'ve needed to discard those logs manually, which is pretty annoying, so let\\'s write an automation to do that for us. To do this, first make sure your inventory is open, and then we need to determine the pixel position where those logs appear in our inventory on the screen. Once we\\'ve determined that, we can have RobotJS move our mouse to that position, then do a right click on it to open the item options dialog. From the current mouse position, we can then move down some pixels to the \\\\\"",
    "lengthSeconds": "2244",
    "uploadDate": "2020-03-29",
    "thumbnail_url": "https://i.ytimg.com/vi/_25IuPegF44/maxresdefault.jpg"
  },
  {
    "link": "watch?v=VxEFkSfwIR0",
    "title": "RobotJS Tutorial for Beginners - Learn JavaScript by playing RuneScape 2/4",
    "tags": "runescape, javascript, runescape bot, bot osrs, robot.js, robotjs, javascript sleep, nodejs, node.js, osrs, rsps, runescape private server, beginner botting tutorial, how to make a runescape bot, learn javascript, automate runescape, robot.js examples, osrs bot guide, javascript beginner project ideas, javascript game project, robot javascript, nodejs bot, learn code by gaming, runescape bot 2020, botting, nodejs require, javascript click, javascript mouse, js, javascript automation",
    "scraped_at": 1684583382.030993,
    "genre": "Education",
    "views": "37816",
    "desc": "Part 2 of this tutorial will teach you the basics of how to automate mouse inputs using RobotJS. We go over require statements, functions, how to sleep in JavaScript, while loops, variables, and how to use the mouse methods provided by RobotJS. By the end of this video we\\'ll have a very simple stand-in-place RuneScape bot, and you\\'ll have an understanding of JavaScript\\'s fundamental concepts.\\\\n\\\\n* This tutorial is for educational purposes only *\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfJjTJrovnq2lBnov_g0ZpN3\\\\n\\\\nView the Source Code\\\\nGitHub repo: https://github.com/learncodebygaming/woodcutter\\\\n\\\\nDownload Links\\\\nNode.js: https://nodejs.org/\\\\nRobotJS: http://robotjs.io/\\\\nVisual Studio Code: https://code.visualstudio.com/download\\\\n\\\\nRecommended JavaScript Resources\\\\nEloquent JavaScript: https://amzn.to/3deUEfb or online edition at https://eloquentjavascript.net/\\\\nW3Schools: https://www.w3schools.com/js/default.asp\\\\n\\\\n0:18 How require statements work in Node.js\\\\n2:05 Using a main function\\\\n3:48 Sleep function in JavaScript\\\\n5:43 Function parameters explained\\\\n6:59 RuneScape private server setup steps\\\\n9:08 Clicking with RobotJS\\\\n12:09 Multiple automated mouse clicks\\\\n13:21 RobotJS documentation\\\\n15:47 Functions vs Methods\\\\n16:10 While loops\\\\n21:10 Recap\\\\n\\\\n* If your mouse is not moving to the correct coordinates *\\\\nTry this: https://github.com/learncodebygaming/woodcutter#if-your-mouse-is-not-moving-to-the-correct-coordinates\\\\n\\\\nIn the first video, we installed Node.js and the RobotJS library. Now we\\'re ready to start building our bot.\\\\n\\\\nA require statement allows you to import code from another file or another package. Here we use it to import the RobotJS package so that we can use the functions inside of it. You can read more about how require statements work here: https://nodejs.org/en/knowledge/getting-started/what-is-require/\\\\n\\\\nIn VSCode, you can ctrl + click on require(\\\\\"",
    "lengthSeconds": "1332",
    "uploadDate": "2020-03-23",
    "thumbnail_url": "https://i.ytimg.com/vi/VxEFkSfwIR0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=Uw11Lb8ov88",
    "title": "How To Code a RuneScape Bot with RobotJS - Learn JavaScript by playing RuneScape 1/4",
    "tags": "javascript, osrs, runescape, robotjs, rsps, gui automation, robot.js, how to program a runescape bot, runescape private server bot, woodcutting bot, old school runescape botting, rsps bot, osrs botting, node.js, nodejs, how to make a runescape bot, botting tutorial, bot programming guide, runescape scripting, how to write a bot for a game, learn coding as an absolute beginner, osrs botting 2020, botting from scratch, bot script osrs, runescape botting to max, runescape ai bot, ikov",
    "scraped_at": 1684583384.3489933,
    "genre": "Education",
    "views": "95657",
    "desc": "This tutorial will teach you how to code a RuneScape bot using JavaScript. No prior programming experience required! This guide is for beginners. We\\'ll use Node.js and the RobotJS library and use a technique called GUI automation.\\\\n\\\\n* This tutorial is for educational purposes only *\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfJjTJrovnq2lBnov_g0ZpN3\\\\n\\\\nView the Source Code\\\\nGitHub repo:  https://github.com/learncodebygaming/woodcutter\\\\n\\\\nDownload Links\\\\nNode.js: https://nodejs.org/\\\\nRobotJS: http://robotjs.io/\\\\nVisual Studio Code: https://code.visualstudio.com/download\\\\n\\\\nRecommended JavaScript Resources\\\\nEloquent JavaScript: https://amzn.to/3deUEfb or online edition at https://eloquentjavascript.net/\\\\nW3Schools: https://www.w3schools.com/js/default.asp\\\\n\\\\n0:35 Disclaimer: Don\\'t Cheat!\\\\n1:31 Using the browser console to run JavaScript\\\\n3:18 How to install Node.js\\\\n5:22 Using Notepad and PowerShell to write code\\\\n8:24 Using VSCode to write code\\\\n9:48 How to install RobotJS\\\\n\\\\nA note on the \\\\\"",
    "lengthSeconds": "846",
    "uploadDate": "2020-03-19",
    "thumbnail_url": "https://i.ytimg.com/vi/Uw11Lb8ov88/maxresdefault.jpg"
  },
  {
    "link": "watch?v=BLFYAXYXpug",
    "title": "Starbase - Programming In Space? Pre-Alpha YOLOL Guide (March 2020)",
    "tags": "starbase, yolol, starbase yolol, starbase programming, starbase coding, starbase yolo programming, yolol tutorial, yolol guide, what is yolol, learn yolol, starbase game, starbase devices, learn code by gaming, beginner yolol, cylon, starbase goto, starbase script, device fields, memory chip, external variable, yolol language, yolol preview, yolol basics, starbase program, star base, space mmo 2020, learn through game programming, programming in video games, yolol max",
    "scraped_at": 1684583381.9550214,
    "genre": "Education",
    "views": "9733",
    "desc": "An in-depth preview of the YOLOL programming language in the forthcoming space game Starbase. I discuss its potential for helping absolute beginners to learn how to program, as well as what experienced developers can look forward to.\\\\n\\\\n0:23 What is Starbase?\\\\n0:40 Why aspiring programmers should know about Starbase\\\\n2:23 Demo of how YOLOL works inside the game\\\\n7:59 YOLOL language highlights\\\\n9:20 YOLOL syntax review\\\\n10:06 Complex systems using multiple YOLOL chips\\\\n11:36 Features to get excited about\\\\n12:39 Starbase for experienced coders\\\\n13:14 Starbase for new programmers\\\\n\\\\nYOLOL Wiki: https://wiki.starbasegame.com/index.php/YOLOL\\\\nDevices Wiki: https://wiki.starbasegame.com/index.php/Devices_and_machines\\\\nCylon YOLOL fan group (check out their Discord): https://github.com/Jerald/yolol-is-cylons\\\\n\\\\nCorrection @ 8:26 the execution does automatically wrap around again. \\\\\"",
    "lengthSeconds": "890",
    "uploadDate": "2020-03-05",
    "thumbnail_url": "https://i.ytimg.com/vi/BLFYAXYXpug/maxresdefault.jpg"
  },
  {
    "link": "watch?v=LFDGgFRqVIs",
    "title": "PyAutoGUI not working? Use DirectInput",
    "tags": "pydirectinput, pyautogui, directinput, direct input, pyautogui click not working, pyautogui not working in game, python direct input, python, pyautogui not working, pyautogui not clicking, pyautogui doesn",
    "scraped_at": 1684583383.5039937,
    "genre": "Education",
    "views": "52526",
    "desc": "PyAutoGUI does not work for all video games, so I wrote PyDirectInput to solve this. With it, you can easily swap your PyAutoGUI code to use DirectInput instead. In this video, I explain the problems PyAutoGUI has with some video games, how you can use PyDirectInput to solve it, and how you can contribute to the PyDirectInput open source project.\\\\n\\\\nGitHub repo for PyDirectInput: https://github.com/learncodebygaming/pydirectinput\\\\nPyPI for PyDirectInput: https://pypi.org/project/PyDirectInput/\\\\nPyAutoGUI botting tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfJDe1xV1py5EusLt8FFzhMA\\\\nGitHub repo for PyAutoGUI: https://github.com/asweigart/pyautogui\\\\nPyAutoGUI book: https://amzn.to/3fJsbyV\\\\n\\\\n*Update* If any of the mouse functions [click(), mouseDown(), mouseUp()...] are too slow, you\\'ll want to set the optional _pause argument to false, ie. pydirectinput.click(x=300, y=100, _pause=False). Let me know if you think I should remove this _pause feature entirely.\\\\n\\\\nSince my video game botting tutorial, where we used PyAutoGUI, multiple people have told me that PyAutoGUI doesn\\'t work with the video game they\\'re playing. So in this video, I\\'m going to explain what\\'s going on and show you how you can fix it.\\\\n\\\\nSo why doesn\\'t PyAutoGUI work with some video games? On Windows, PyAutoGUI uses a slightly older, slightly deprecated Windows API to simulate mouse and keyboard inputs. Normally this is fine, but when you\\xe2\\x80\\x99re interacting with programs that make heavy use of DirectX, like most 3D video games do, you can run into problems. If you don\\xe2\\x80\\x99t know what DirectX is, it\\'s just a collection of libraries and APIs, written by Microsoft, to make video game development easier. It\\'s been super successful, and it\\xe2\\x80\\x99s basically why Windows dominates PC gaming. One of the subsets of DirectX is DirectInput. And DirectInput is basically an easier and more powerful interface for video game developers to use when dealing with user input for their game. A lot of times, game developers will choose to only support DirectInput, because it\\'s less development and players aren\\'t likely to ever notice.\\\\n\\\\nSo, to solve the problem we have, we just need to get PyAutoGUI to use the DirectInput Windows APIs instead of what it\\xe2\\x80\\x99s currently using. So I wrote a Python package to do exactly that. I\\xe2\\x80\\x99ve called it PyDirectInput. And just to get exact about what PyAutoGUI does wrong, and how my library fixes it, let me read the opening paragraph of the README to you, and then I\\'ll show you how to use it in practice.\\\\n\\\\n\\\\\"",
    "lengthSeconds": "395",
    "uploadDate": "2020-02-24",
    "thumbnail_url": "https://i.ytimg.com/vi/LFDGgFRqVIs/maxresdefault.jpg"
  },
  {
    "link": "watch?v=NKVZQLZhp2Y",
    "title": "The SIMPLEST Screeps Tutorial",
    "tags": "screeps, javascript, screeps tutorial, beginner javascript, javascript game, javascript tutorial, javascript gaming, screeps intro, screeps newb, screeps first, easy screeps, screeps basics, screeps beginner, screeps simple, minimalist screeps, 10 cpu, spawn1, screeps survival, screeps simulation, screeps loop, javascript new programmer, object oriented, what is screeps, screeps documentation, api reference, using documentation, game ticks, javascript web browser game",
    "scraped_at": 1684583383.3640192,
    "genre": "Education",
    "views": "38841",
    "desc": "Complete step-by-step tutorial for getting started in Screeps. For non-programmers and those new to JavaScript, I break down all the concepts for how you would write this beginner code. This is a follow up to my Simplest Screeps Code Possible video. I tried to go really slow in this one for anyone struggling to get into the game.\\\\n\\\\nGrab the code from my blog: https://learncodebygaming.com/blog/the-simplest-screeps-tutorial\\\\nTry it out for yourself in the Screeps simulator: https://screeps.com/a/#!/sim/survival\\\\n\\\\nIf you\\'re new to programming, or new to JavaScript, but you think Screeps looks really cool and you want to play it, in this tutorial I\\'m going to show you the simplest Screeps code possible and I\\'m going to walk you through what each line of code means, what it does, and how I got there. Super beginner friendly is my goal here.\\\\n\\\\nTo get started for this tutorial we just need to go into the Screeps simulation room.\\\\n\\\\nSo go to Screeps.com, scroll down to the \\\\\"",
    "lengthSeconds": "2361",
    "uploadDate": "2020-02-10",
    "thumbnail_url": "https://i.ytimg.com/vi/NKVZQLZhp2Y/maxresdefault.jpg"
  },
  {
    "link": "watch?v=fAdwp1oYLsQ",
    "title": "The SIMPLEST Screeps Code Possible",
    "tags": "screeps, javascript, screeps tutorial, screeps game, screeps beginner, screeps simple, screeps basic, screeps easy, javascript gaming, simple screeps, screeps introduction, screeps 2020, screeps guide, screeps beginner guide, screeps intro, screeps noob, screeps newb, screeps nooby, tutorial, screeps nooby guide, screeps for beginners, screeps youtube, javascript ai game, screeps quick start, screeps challenge, screeps function, screeps fully functioning, screeps start",
    "scraped_at": 1684583383.5899932,
    "genre": "Education",
    "views": "2528",
    "desc": "What is the simplest, easiest, most basic, yet fully-functioning Screeps code you can possibly write? Let\\'s find out!\\\\n\\\\nGrab the code from my blog: https://learncodebygaming.com/blog/the-simplest-screeps-code-possible\\\\nTry it out for yourself in the Screeps simulator: https://screeps.com/a/#!/sim/survival\\\\n\\\\nTo answer this question, we first need to define it well.\\\\n\\\\nLet\\'s start with the fully-functioning part. To me, a fully-functioning Screeps code means code that, if we left it alone and let it run for long enough, we would eventually upgrade our controller all the way to level 8, and we\\'d continue to gain control points even after that.\\\\n\\\\nSo that first part is pretty easy to define, but the second qualifier to my question, the \\\\\"",
    "lengthSeconds": "140",
    "uploadDate": "2020-01-31",
    "thumbnail_url": "https://i.ytimg.com/vi/fAdwp1oYLsQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=24IWlz2QTwc",
    "title": "Codewars Review & Tips",
    "tags": "codewars, code wars, how to use codewars, codewars review, codewars python, codewars javascript, is codewars good, codewars python first question, codewars first problem javascript, codewars first problem c",
    "scraped_at": 1684583382.934992,
    "genre": "Education",
    "views": "77324",
    "desc": "In this Codewars review, I talk about the pros and cons of using it to improve your programming skills. I also offer some tips for ranking up quickly.\\\\n\\\\nCodewars: https://www.codewars.com/\\\\n\\\\n0:38 Solving the first problem\\\\n2:12 Pros of Codewars\\\\n2:54 Cons of Codewars\\\\n3:52 What is Codewars NOT good for?\\\\n4:54 Who IS Codewars for?\\\\n5:32 Rank up tips\\\\n\\\\nIf you\\'re interested in playing Codewars to become a better programmer, and you want to know if it will be a good use of your time, that\\'s what I want to talk about in this video. I\\'m also going to give you some tips on how to rise up quickly through the Codewars ranks.\\\\n\\\\nCodewars is a website where you can practice your programming skills and earn ranks by completing challenges. You rank up depending on how many challenges you solve, and how difficult those challenges are.\\\\n\\\\nIt has a Japanese martial arts theme, and they use some strange lingo to go along with that theme, but you pick it up soon enough. You play the part of a code warrior who trains on Kata, which is what they call each programming challenge. By being more active on the site you earn honor, and by completing Kata rated above your current rank, you work towards that next rank.\\\\n\\\\nTo get registered, you must first complete a simple Kata in the language of your choice. If you can\\'t get past this first step, then you probably aren\\'t ready for Codewars yet, and you should spend more time learning the basics.\\\\n\\\\nBut if you really just want to get inside, here\\'s how you solve the first problem in Javascript. You just need to add the \\\\\"",
    "lengthSeconds": "432",
    "uploadDate": "2020-01-25",
    "thumbnail_url": "https://i.ytimg.com/vi/24IWlz2QTwc/maxresdefault.jpg"
  },
  {
    "link": "watch?v=U-NZjzDj-Xk",
    "title": "Coding by Voice with Voice Attack: a Practical Guide for Programmers",
    "tags": "voiceattack, voice attack, voice attack tutorial, code by voice, coding with voice, voice attack programming, voice macro, coding by voice, voice control python, python voice recognition, coding with voice recognition, coding with voice commands, software developer productivity, text to speech python, voice attack review, code voice recognition, voice attack guide, programming tips and tricks python, cool programming tricks, tavisrudd, voiceattack profiles",
    "scraped_at": 1684583381.8790185,
    "genre": "Education",
    "views": "27891",
    "desc": "Programming with voice recognition is something I\\'ve wanted to try for a while. In this video, I let you know what I think and how to set it up for yourself using Voice Attack.\\\\n\\\\nMy Python Voice Attack profile: https://github.com/learncodebygaming/voiceattack\\\\nGet Voice Attack: https://voiceattack.com/\\\\nTavis Rudd\\'s presentation: https://www.youtube.com/watch?v=8SkdfdXWYaI\\\\nVoice Attack manual: https://www.voiceattack.com/VoiceAttackHelp.pdf\\\\nDiscussion on how to setup Voice Attack dictation to type as you speak: https://forum.voiceattack.com/smf/index.php?topic=1825.0\\\\n\\\\nI first learned about Voice Attack while playing Elite Dangerous.\\\\n\\\\nVoiceAttack is uses the Windows Speech Engine that\\'s built into Windows to perform its voice recognition. VoiceAttack provides the glue between the text to speech engine and executing your macros in response to what that engine hears.\\\\n\\\\nIn the options, which you get to from the wrench in lower right, and under \\\\\"",
    "lengthSeconds": "1024",
    "uploadDate": "2020-01-13",
    "thumbnail_url": "https://i.ytimg.com/vi/U"
  },
  {
    "link": "watch?v=JXznuTe9B3k",
    "title": "Coding a simple Artificial Intelligence for Rocket League: RLBot Tutorial 3/3",
    "tags": "rlbot, rlbots, simple artificial intelligence projects, learn python by making projects, beginner python project, beginner python game projects, basic ai projects for beginners, simple artificial intelligence projects for students, open source bot, rocket league robots, python beginner projects with source code, python based ai projects, rocket league bot programming, how to make a rocket league bot, custom rocket league bots, python projects for beginners, python, rocket league",
    "scraped_at": 1684583384.0679922,
    "genre": "Education",
    "views": "7714",
    "desc": "Basic video game AI is built up from many simpler components whose actions are coordinated by decision making logic. Complex behavior emerges as we add more fundamental behaviors, and as we combine those in new ways depending on our evaluation of the in-game situation.\\\\n\\\\nIn this tutorial, I show you how to begin writing this coordination logic, which will provide you with an outline for building a more advanced bot. I then review a fully completed open source bot to further illustrate how smaller maneuvers and behaviors can be combined to achieve artificial intelligence. But before we get to all that, first I cover how to fix the bug in our bot that pops up when all the large boosts are taken.\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfK5YDEb2ovxgisBMYcOMHU8\\\\n\\\\nGitHub repo for this project: https://github.com/learncodebygaming/rlbot_boosthog\\\\nDownload RLBot: https://www.rlbot.org/\\\\nBeast from the East GitHub: https://github.com/NicEastvillage/RLBot-Beast\\\\n\\\\nCheckout https://learncodebygaming.com/ for more programming project ideas.\\\\nEmail me! info@learncodebygaming.com\\\\n\\\\nWhen we left off in the last tutorial, we encountered a problem when all the boosts are taken. In that situation get_nearest_boost() returns None, which in turn results in runtime errors when our code tries to do math against that null value.\\\\n\\\\nOne way we can fix that is to ensure get_nearest_boost() always returns a valid Vec3. If we loop through all the large boosts and don\\'t find any available, let\\'s return the location at the center of the field, given by Vec3(0, 0, 0). That\\'s sufficient to solve the runtime error, but it can be improved upon in many ways.\\\\n\\\\nOne way to improve is to have our bot go for a small boost when all the large ones are gone. In the solution I\\'ve provided, I simply loop over all the boosts again (if we didn\\'t find any large boost) but with the boost.is_full_boost check removed. This code works, but it\\'s less than ideal in a couple ways. Firstly, it\\'s very similar to the code we have before it. Writing code like this violates the DRY principle (which stands for Don\\'t Repeat Yourself). My solution also unnecessarily loops over all the boosts twice, which is less efficient than doing it just once. In our case, we know the number of boost pads on the field will never exceed 34, so the performance hit is minor, but it\\'s still good to notice these sorts of inefficiencies.\\\\n\\\\nAnother improvement we could make is to watch the packet.game_boosts[index].timer and anticipate when a boost will respawn before our bot gets to it.\\\\n\\\\nI\\'ve left it as an exercise for you to implement these optimizations.\\\\n\\\\nNow let\\'s talk about introducing some decision making logic into our bot.\\\\n\\\\nLet\\'s make our bot go for the ball during kickoff. We\\'ll make a new class variable has_first_touch_happened_yet to keep track of if the kickoff has been been completed or not. Inside get_output() we\\'ll start writing our behavior logic. If the first touch has not happened yet, we\\'ll set the target location to the ball, but once it has been touched we\\'ll switch back to use the nearest boost location as the target.\\\\n\\\\nTo determine when the ball has been touched, we\\'ll check to see if it has been moved off its starting position. The ball starts in the middle of the field, which is X=0 and Y=0, but because its position is measured from the center of the ball, the Z coordinate is slightly above 0. To account for this, we can use the Vec3 flat() method to ignore the Z component.\\\\n\\\\nIf you run this code, you\\'ll find that the bot continues to go after boost instead of the ball during kickoff. This is because there\\'s a problem with our not-equals check between the ball location and the ball starting location: != is not defined when comparing two Vec3 vectors! We can solve this in the Vec3 class by defining the comparison methods for equal: __eq__() and not equal: __ne__().\\\\n\\\\nWe also need to account for the situation when a kickoff happens following a goal, or at the start of overtime. To do this, we can check the packet.game_info.is_kickoff_pause value and flip has_first_touch_happened_yet back to False when this is the case.\\\\n\\\\nSo far so good. I think it\\'d be cool to add one more feature to our BoostHog bot. Let\\'s keep track of how many boosts we pickup, and then after some number of boost steals let\\'s target the ball again for a few seconds.\\\\n\\\\nContinue with the written tutorial here: https://learncodebygaming.com/blog/coding-a-simple-artificial-intelligence-for-rocket-league\"",
    "lengthSeconds": "1910",
    "uploadDate": "2019-12-29",
    "thumbnail_url": "https://i.ytimg.com/vi/JXznuTe9B3k/maxresdefault.jpg"
  },
  {
    "link": "watch?v=7urJlTXlM8Y",
    "title": "Your First Rocket League Bot: BoostHog! RLBot Tutorial 2/3",
    "tags": "rlbot, rlbots, rocket league bots, rlbot tutorial, how to write video game ai, learn python by making projects, beginner python project, beginner python game projects, python ai game tutorial, rocket league bot programming, how to make a rocket league bot, python portfolio projects, learn code by gaming, video game bot tutorial, how to write a bot for a game, rocket league programming language, learn python by making a game, learn python by doing projects, bots rocket league",
    "scraped_at": 1684583382.3040242,
    "genre": "Education",
    "views": "4721",
    "desc": "Let\\'s write the code for our basic boost stealing bot! Conceptually it\\'s simple: 1. Figure out where the boosts are located on the pitch and 2. Tell our car to drive to the nearest boost we find. In this video, I take you step-by-step through how I would write this code in Python.\\\\n\\\\nIf you\\'d like to learn Python by making a game AI, this is a great beginner project to get you started.\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfK5YDEb2ovxgisBMYcOMHU8\\\\n\\\\nGitHub repo for this project: https://github.com/learncodebygaming/rlbot_boosthog\\\\nDownload RLBot: https://www.rlbot.org/\\\\nRLBot Wiki for Input and Output Data: https://github.com/RLBot/RLBotPythonExample/wiki/Input-and-Output-Data\\\\n\\\\nCheckout https://learncodebygaming.com/ for more programming project ideas.\\\\n\\\\nSo our goal again is simple: we just need to find the nearest boost and go get it.\\\\n\\\\nTo begin, let\\'s dig into the data. Make sure you have the \\\\\"",
    "lengthSeconds": "2282",
    "uploadDate": "2019-12-28",
    "thumbnail_url": "https://i.ytimg.com/vi/7urJlTXlM8Y/maxresdefault.jpg"
  },
  {
    "link": "watch?v=DwBB7871rX0",
    "title": "RLBot Beginner Tutorial - Learn Python by playing Rocket League 1/3",
    "tags": "rlbot, rlbots, rocket league, rocket league bots, rlbot tutorial, python, how to write video game ai, learn python by making projects, beginner python project, python ai game tutorial, rocket league bot programming, how to make a rocket league bot, python ai game, python portfolio projects, learn code by gaming, learncodebygaming, boosthog, boost hog, rlbotgui, video game bot tutorial, how to write a bot for a game, rlbot 2020, rl bot, rl bot tutorial, custom rocket league bots",
    "scraped_at": 1684583383.6699948,
    "genre": "Education",
    "views": "22900",
    "desc": "RLBot is a framework for making Rocket League bots. In this tutorial, I show you how to get started with Rocket League bot programming by building a basic boost stealing bot. This is a great beginner Python project whether you\\'re looking to build a portfolio, or just want to have some fun learning how to write video game AI.\\\\n\\\\nI\\xe2\\x80\\x99m a big believer in project based learning. If you follow this tutorial to the end, my hope is that you\\xe2\\x80\\x99ll be prepared to continue where we left off, and this will be the launch point for your own creative exploration into the deeper world of Python development and video game artificial intelligence.\\\\n\\\\nFull tutorial playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfK5YDEb2ovxgisBMYcOMHU8\\\\n\\\\nRemember to setup GitHub for this project, especially if you plan on showcasing the RLBots you make in your portfolio.\\\\n\\\\nGitHub repo for this project: https://github.com/learncodebygaming/rlbot_boosthog\\\\nDownload Python 3 for Windows: https://www.python.org/downloads/\\\\nDownload Visual Studio Code: https://code.visualstudio.com/download\\\\nBuy Rocket League on Steam: https://store.steampowered.com/app/252950/Rocket_League/\\\\nDownload RL Bot: https://www.rlbot.org/\\\\nRLBot Wiki for Input and Output Data: https://github.com/RLBot/RLBotPythonExample/wiki/Input-and-Output-Data\\\\nRLBot Wiki for Item IDs: https://github.com/RLBot/RLBot/wiki/Item-IDs\\\\nRLBot Wiki for Colors and Bot Customization: https://github.com/RLBot/RLBot/wiki/Bot-Customization\\\\n\\\\nCheckout https://learncodebygaming.com/ for more programming project ideas.\\\\n\\\\nTo get started with making your own Rocket League bot, you\\'ll first need the prerequisites: the Rocket League game, a Python development environment, and the RLBot framework (links for all these above).\\\\n\\\\nThe first time you launch RLBotGUI it will take some time to download the needed Python packages. Once that\\'s done, go ahead and get the example bots by clicking on the plus sign and selecting \\\\\"",
    "lengthSeconds": "1037",
    "uploadDate": "2019-12-27",
    "thumbnail_url": "https://i.ytimg.com/vi/DwBB7871rX0/maxresdefault.jpg"
  },
  {
    "link": "watch?v=LMGT9Yf_eNI",
    "title": "Complete Botting Loop: PyAutoGUI Video Game Bot Tutorial",
    "tags": "pyautogui, pyautogui bot, beginner video game bot, learn code by gaming, pyautogui game bot, earth and beyond, earth and beyond bot, mmo bot, mmorpg bot programming, video game automation, video game botting tutorial, mmo trading bot, how to use pyautogui, pyautogui keyboard press, pyautogui projects, pyautogui mouse click, pyautogui runescape, bot 101, earth and beyond gameplay, earth ",
    "scraped_at": 1684583384.127993,
    "genre": "Education",
    "views": "5144",
    "desc": "Learn how to make this bot: https://www.youtube.com/playlist?list=PL1m2M8LQlzfJDe1xV1py5EusLt8FFzhMA\\\\nHere\\'s what the completed Earth \\\\u0026 Beyond automated trading loop should look like once you\\'ve finished the PyAutoGUI Video Game Bot Tutorial! If you want to know how to write code to do this, checkout the full playlist linked below.\\\\n\\\\nFull playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfJDe1xV1py5EusLt8FFzhMA\\\\n\\\\nGitHub repo for this project: https://github.com/learncodebygaming/enb_bot\"",
    "lengthSeconds": "694",
    "uploadDate": "2019-12-12",
    "thumbnail_url": "https://i.ytimg.com/vi/LMGT9Yf_eNI/maxresdefault.jpg"
  },
  {
    "link": "watch?v=iA95DvehUoM",
    "title": "Basic Image Recognition: PyAutoGUI Video Game Bot Tutorial 4/4 - Completed MMO Bot!",
    "tags": "pyautogui, pyautogui game bot, mmo bot, image bot, locateonscreen, pixel matching, pixelMatchesColor, pyautogui image recognition, gaming bot code, pyautogui bot, video game bot tutorial, beginner video game bot, video game botting tutorial, write a video game bot, python video game bot, python, simple game bots, basic botting, begginer botting, video game automation, mmorpg bot, how to make a video game bot, mmorpg bot programming, learncodebygaming, learn code by gaming",
    "scraped_at": 1684583382.652992,
    "genre": "Education",
    "views": "26760",
    "desc": "PyAutoGUI\\'s image matching features allow us to get information from the screen. In this video, I show you how to use these simple image recognition techniques to figure out what\\'s going on inside the game. This will allow us to complete our trading MMO bot, and opens up a world of possibilities for creating a real artificial intelligence that reacts to the world around it.\\\\n\\\\nIn this tutorial series, I\\'ll show you how to use PyAutoGUI to write a video game bot in Python. This is a great beginner AI project to strengthen your programming skills, or to take your first steps into video game automation. We\\'ll be playing Earth \\\\u0026 Beyond, a space MMO, and in it we\\'re going to automate a trade route to earn credits.\\\\n\\\\nEmail me! info@learncodebygaming.com\\\\n\\\\nFull playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfJDe1xV1py5EusLt8FFzhMA\\\\n\\\\nGitHub repo for this project: https://github.com/learncodebygaming/enb_bot\\\\n\\\\nPyAutoGUI Documentation: https://pyautogui.readthedocs.io/en/latest/\\\\n\\\\nAdditional PyAutoGUI tutorial at Automate the Boring Stuff with Python: http://automatetheboringstuff.com/chapter18/\\\\n\\\\nAutomate the Boring Stuff Book: https://amzn.to/3fJsbyV\\\\n\\\\nDonate to support the Earth \\\\u0026 Beyond Emulator: https://forum.enb-emulator.com/index.php?/donate/make-donation/\\\\n\\\\nAre you trying to learn how to program and want some help? I offer 1-on-1 coaching! Sign up for a chat with me at: https://learncodebygaming.com\"",
    "lengthSeconds": "3601",
    "uploadDate": "2019-11-26",
    "thumbnail_url": "https://i.ytimg.com/vi/iA95DvehUoM/maxresdefault.jpg"
  },
  {
    "link": "watch?v=ixwVSsKydIY",
    "title": "Automate Your Bot Script Creation: PyAutoGUI Video Game Bot Tutorial 3/4",
    "tags": "pynput, pynput tutorial, pyautogui, video game bot tutorial, pyautogui bot, pyautogui game bot, automating the boring stuff with python, recording bot, gaming bot code, earth and beyond game, python, mmo bot, simple game bots, basic botting, beginner video game bot, video game bot python, video game automation, how to write a bot, learncodebygaming, learn code by gaming, python video game bot, vscode bot, learn python by playing games, pynput listener, gui automation",
    "scraped_at": 1684583384.964502,
    "genre": "Education",
    "views": "20504",
    "desc": "In this video, I show you how to use pynput to capture mouse and keyboard inputs in the game, and then use those recordings to playback your actions later with PyAutoGUI. This will greatly speed up our ability to create action routines for our bot. By combining many different action recordings together, we can start to build up an artificial intelligence.\\\\n\\\\nIn this tutorial series, I\\'ll show you how to use PyAutoGUI to write a video game bot in Python. This is a great beginner AI project to strengthen your programming skills, or to take your first steps into video game automation. We\\'ll be playing Earth \\\\u0026 Beyond, a space MMO, and in it we\\'re going to automate a trade route to earn credits.\\\\n\\\\nFull playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfJDe1xV1py5EusLt8FFzhMA\\\\n\\\\nGitHub repo for this project: https://github.com/learncodebygaming/enb_bot\\\\n\\\\npynput Documentation: https://pynput.readthedocs.io/en/latest/\\\\n\\\\nPyAutoGUI Documentation: https://pyautogui.readthedocs.io/en/latest/\\\\n\\\\nAdditional PyAutoGUI tutorial at Automate the Boring Stuff with Python: http://automatetheboringstuff.com/chapter18/\\\\n\\\\nAutomate the Boring Stuff Book: https://amzn.to/3fJsbyV\\\\n\\\\nDonate to help keep Earth \\\\u0026 Beyond Emulator alive: https://forum.enb-emulator.com/index.php?/donate/make-donation/\\\\n\\\\nAre you trying to learn how to program and want some help? I offer 1-on-1 coaching! Sign up for a chat with me at: https://learncodebygaming.com\"",
    "lengthSeconds": "4540",
    "uploadDate": "2019-11-22",
    "thumbnail_url": "https://i.ytimg.com/vi/ixwVSsKydIY/maxresdefault.jpg"
  },
  {
    "link": "watch?v=NaZTtUmE990",
    "title": "Your First PyAutoGUI Game Bot: PyAutoGUI Video Game Bot Tutorial 2/4",
    "tags": "pyautogui, timing bot, pyautogui game bot, gaming bot code, pyautogui bot, python, mmo bot, simple game bots, beginner video game bot, video game bot python, video game bot tutorial, write a video game bot, python video game bot, video game botting tutorial, mmorpg bot, begginer botting, basic botting, video game automation, how to write a bot, how to make a video game bot, mmorpg bot programming, game scripting for beginners, learncodebygaming, learn code by gaming",
    "scraped_at": 1684583384.580995,
    "genre": "Education",
    "views": "64955",
    "desc": "Let\\'s create our first simple video game bot, a timing bot! We\\'ll be learning the basics of PyAutoGUI mouse and keyboard input controls.\\\\n\\\\nIn this tutorial series, I\\'ll show you how to use PyAutoGUI to write a video game bot in Python. This is a great beginner AI project to strengthen your programming skills, or to take your first steps into video game automation. We\\'ll be playing Earth \\\\u0026 Beyond, a space MMO, and in it we\\'re going to automate a trade route to earn credits.\\\\n\\\\nFull playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfJDe1xV1py5EusLt8FFzhMA\\\\n\\\\nGitHub repo for this project: https://github.com/learncodebygaming/enb_bot\\\\nPyAutoGUI Documentation: https://pyautogui.readthedocs.io/en/latest/\\\\nDownload Earth \\\\u0026 Beyond: https://www.net-7.org/\\\\nDonate to help keep the Earth \\\\u0026 Beyond emulator alive: https://forum.enb-emulator.com/index.php?/donate/make-donation/\\\\nAdditional PyAutoGUI tutorial at Automate the Boring Stuff with Python: http://automatetheboringstuff.com/chapter18/\\\\nAutomate the Boring Stuff Book: https://amzn.to/3fJsbyV\\\\n\\\\nCheckout https://learncodebygaming.com/ for more programming project ideas.\\\\n\\\\nA timing bot takes a predetermined series of actions, in a specific order, for a specific length of time. For example: press the \\'W\\' key for 5 seconds (to move forward), press \\'D\\' for half a second (to turn right), mouse click on the screen position 120, 200 (to open a menu), then wait 2 seconds (while the menu loads).\\\\n\\\\nInside Earth \\\\u0026 Beyond, create a new character and make it a Terran Tradesman, so that you start at the same station as me.\\\\n\\\\nInstall PyAutoGUI using the terminal with pip install pyautogui. Now create a new Python script with a main function, and importing pyautogui and sleep. Enable the PyAutoGUI failsafe by setting the FAILSAFE flag to True. With the failsafe enabled, whenever our bot gets off course we can simply move the mouse to the very upper left corner of the screen to stop our script.\\\\n\\\\nThe first thing we need to think about with this bot is where is our starting location going to be inside Loki Station. Because if we\\'re always inputting the same commands, then we need to have a consistent starting point in order to arrive at the desired destination using those fixed commands. At Loki Station, let\\'s begin our character wedge to the left of Louden MacEwen. Open a chat dialog with him and then close it to also give our character a consistent orientation.\\\\n\\\\nLet\\'s begin our code with a countdown timer to allow ourselves a window of time to switch to the game window when we start our Python script. You could simply sleep for 10 seconds, but I\\'ve created a loop that will print out another dot for each second that passes in our countdown. We\\'ll call this from main().\\\\n\\\\nNow let\\'s try doing any action to confirm that Earth \\\\u0026 Beyond is recognizing our PyAutoGUI inputs. Let\\'s press the \\'D\\' key for 1 second.\\\\n\\\\nRun this and confirm that your character turns like it should. If nothing happens, confirm that the program you\\'re using to launch your script is in administrator mode.\\\\n\\\\nWe\\'re going to be using this pyautogui.keyDown(), time.sleep(), pyautogui.keyUp() pattern often, so I recommend making a function to encapsulate that behavior. I\\'ve called mine holdKey().\\\\n\\\\nSo beginning from our starting location again, what we want to do is automate the process of moving our character through the station, into the bizarre, and starting a conversation with Eddie DuChampe. That\\'s going to require a series of key presses and pauses. I\\'ve created the code below by first estimating how long each keypress needed, and then running the script and refining the numbers each time until the goal destination is reached.\\\\n\\\\nNow that we\\'ve automated walking our character over to the trade merchant, the next thing we need to do is start a conversation with him so we can begin trading. To do that, we\\'ll need to click on him with the mouse. We can do this using pyautogui.moveTo(x, y, duration) to move the mouse, and then pyautogui.click() to perform the click. But first we need to know the x and y position on the screen where we want to click. I\\'ve written a function to figure out what our current mouse location is, using pyautogui.position(), and print it to the console.\\\\n\\\\nUsing this, we\\'re able to determine the x and y coordinates of the mouse when we hover it over the trade vendor, so we can complete our mouse click code.\\\\n\\\\nWhile talking with Eddie DuChampe, we want to buy as many \\\\\"",
    "lengthSeconds": "2801",
    "uploadDate": "2019-11-15",
    "thumbnail_url": "https://i.ytimg.com/vi/NaZTtUmE990/maxresdefault.jpg"
  },
  {
    "link": "watch?v=c07esP_ThBA",
    "title": "PyAutoGUI Video Game Bot Tutorial 1/4: Get Started with a Great Beginner AI Project!",
    "tags": "pyautogui, pyautogui bot, pyautogui game bot, beginner video game bot, write a video game bot, python video game bot, python, video game bot python, mmo bot, video game automation, how to write a bot, video game botting tutorial, how to make a video game bot, mmorpg bot programming, earth and beyond game, learncodebygaming, learn code by gaming, mmorpg bot, video game bot tutorial, gaming bot code, video game bot, beginner ai projects, game bot, gaming bot",
    "scraped_at": 1684583384.4989932,
    "genre": "Education",
    "views": "65590",
    "desc": "In this tutorial series, I\\'ll show you how to use PyAutoGUI to write a video game bot in Python. This is a great beginner AI project to strengthen your programming skills, or to take your first steps into video game automation. We\\'ll be playing Earth \\\\u0026 Beyond, a space MMO, and in it we\\'re going to automate a trade route to earn credits.\\\\n\\\\nIn this introductory video, I explain what we\\'re going to build and how to install Earth \\\\u0026 Beyond.\\\\n\\\\nFull playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfJDe1xV1py5EusLt8FFzhMA\\\\n\\\\nGitHub repo for this project: https://github.com/learncodebygaming/enb_bot\\\\nDownload Earth \\\\u0026 Beyond: https://www.net-7.org/\\\\nDonate to help keep the Earth \\\\u0026 Beyond emulator alive: https://forum.enb-emulator.com/index.php?/donate/make-donation/\\\\nAdditional PyAutoGUI tutorial at Automate the Boring Stuff with Python: http://automatetheboringstuff.com/chapter18/\\\\nAutomate the Boring Stuff Book: https://amzn.to/3fJsbyV\\\\n\\\\nCheckout https://learncodebygaming.com/ for more programming project ideas.\\\\n\\\\nGUI automation is a botting technique where you control the mouse and keyboard using code, and you use the pixels on the screen to get information about the state of the game. We aren\\'t bypassing the normal game inputs, and we aren\\'t accessing any hidden information. With GUI automation, we\\'re trying to emulate a human sitting at a computer.\\\\n\\\\nBefore doing this tutorial, you\\'ll want to have a basic understanding of Python. If you\\'re new to programming or Python, you should do an introductory Python tutorial first. But once you get through that, this is a great beginner programming project to help you get more experience writing Python.\\\\n\\\\nWe\\'re going to be using the PyAutoGUI library. This is a great library to learn, even for things other than botting, as it can be used for automated testing, working with spreadsheets, or automating any other tedious, repetitive task.\\\\n\\\\nIn this tutorial we\\'ll be botting Earth \\\\u0026 Beyond, a space MMO. It\\'s a good game for this project because it has a lot of repetitive gameplay, and it has keybindings that will making botting this game a little easier. Earth \\\\u0026 Beyond also has many static items in its interface, and this will make it easier when we start to do image recognition.\\\\n\\\\nInstalling Earth \\\\u0026 Beyond can be tricky, so here\\'s how to do it: Go to https://www.net-7.org/, click on the FAQ link in the main menu, click on the \\\\\"",
    "lengthSeconds": "451",
    "uploadDate": "2019-11-15",
    "thumbnail_url": "https://i.ytimg.com/vi/c07esP_ThBA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=K6r72esvc1w",
    "title": "Getting Nowhere with Coding Tutorials? (Tutorial Purgatory Programming)",
    "tags": "getting nowhere with coding tutorials, tutorial purgatory programming, tutorial purgatory, how to get out of tutorial purgatory, getting nowhere with programming tutorials, programming tutorials getting nowhere, tutorial purgatory meaning, stuck in tutorial purgatory, learncodebygaming, learn code by gaming, programming tutorial stuck, when am i done with programming tutorials, tutorial hell",
    "scraped_at": 1684583382.236019,
    "genre": "Education",
    "views": "1978",
    "desc": "If you\\'ve been getting nowhere with coding tutorials, you\\'re stuck in a cycle known as Tutorial Purgatory. Let\\'s talk about how to get out of tutorial purgatory, and how to find a good beginner project to get you moving forward again.\\\\n\\\\nDo you have a programming question? Let me know in the comments! If I can help I\\'ll make a video about it.\"",
    "lengthSeconds": "216",
    "uploadDate": "2019-11-01",
    "thumbnail_url": "https://i.ytimg.com/vi/K6r72esvc1w/maxresdefault.jpg"
  },
  {
    "link": "watch?v=qnPXk9Mj-V8",
    "title": "Best Technology for Full Stack Development?",
    "tags": "best technology for full stack development, web development options, learn code by gaming, learncodebygaming, best language for full stack development, best language full stack web developer, full stack technologies 2019, best technology for full stack, full stack technologies, full stack web development, how to become a full stack web developer in 2019, full stack web development best language",
    "scraped_at": 1684583383.2929933,
    "genre": "Education",
    "views": "540",
    "desc": "If you\\xe2\\x80\\x99re new to web development, you\\xe2\\x80\\x99re probably trying to decide what language or technology you should get into. In this video I briefly introduce each of the popular full stack web development options. For each one, I discuss why people use it, what the downsides are, and what it\\xe2\\x80\\x99s good for today. I hope this helps you decide what technology you should learn.\\\\n\\\\nHere\\'s the StackOverflow article that breaks down the most popular languages and frameworks: https://insights.stackoverflow.com/survey/2019#technology\\\\n\\\\nDo you have a programming question? Let me know in the comments! If I can help I\\'ll make a video about it.\"",
    "lengthSeconds": "865",
    "uploadDate": "2019-10-23",
    "thumbnail_url": "https://i.ytimg.com/vi/qnPXk9Mj"
  },
  {
    "link": "watch?v=Pk1Jtg57C-A",
    "title": "Feeling Programmer Fatigue?",
    "tags": "feel drained programming, drained from coding, lethargy when coding, coder fatigue, programmer fatigue, learn code by gaming, learncodebygaming, lethargic programmer, software development, computer programming, coding makes me sleepy, get more energy when coding, fun coding projects, programming stresses me out, overcoming programmer fatigue, tips for long coding sessions",
    "scraped_at": 1684583383.1579921,
    "genre": "Education",
    "views": "2452",
    "desc": "Do you often feel tired, fatigued, and lethargic when coding? How do you stop feeling drained? I offer up some tips to help.\\\\n\\\\nDo you have a programming question? Let me know in the comments! If I can help I\\'ll make a video about it.\"",
    "lengthSeconds": "170",
    "uploadDate": "2019-10-16",
    "thumbnail_url": "https://i.ytimg.com/vi/Pk1Jtg57C"
  },
  {
    "link": "watch?v=ZFLAWjHOPiQ",
    "title": "Screeps Tutorial Walkthrough for Beginners - 5. Defending Your Room",
    "tags": "screeps defense, screeps safe mode, screeps step 5, safe room screeps, screeps documentation, screeps walkthrough, screeps tutorial, screeps beginner guide, screeps, learn code by gaming, learncodebygaming, screeps game, javascript, screeps tower, enemy creeps, fill tower with energy, shoot tower screeps, basic tower code, getobjectbyid, findclosestbyrange, screeps tower repair",
    "scraped_at": 1684583383.994993,
    "genre": "Education",
    "views": "1736",
    "desc": "Screeps tutorial step number five: defending your room. We learn about safe mode, and how to build towers and use them to attack enemy creeps. I also talk briefly about the Screeps documentation.\\\\n\\\\nEven though Screeps isn\\'t designed to teach you how to program, I think it\\'s a great way for beginners to explore and get more practice with writing code. In this video series I play through the Screeps tutorial.\\\\n\\\\nhttps://screeps.com/\\\\n\\\\nFull playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKndesWcReHzj9-zq1qP2CG\\\\n\\\\nAre you trying to learn programming on your own and want some help? I offer a 1-on-1 coaching program designed to take you from knowing nothing about code to getting your first job in software development! Sign up for a free consultation with me at: https://learncodebygaming.com\"",
    "lengthSeconds": "597",
    "uploadDate": "2019-10-09",
    "thumbnail_url": "https://i.ytimg.com/vi/ZFLAWjHOPiQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=MbVdyt6D0RA",
    "title": "Screeps Tutorial Walkthrough for Beginners - 4. Auto-Spawning Creeps",
    "tags": "clean up memory screeps, spawn creeps, screeps step 4, screeps clean memory, screeps walkthrough, learn code by gaming, learncodebygaming, screeps, screeps tutorial, screeps game, screeps beginner guide, javascript, replace creep, lodash filter, debug screeps, screeps room visual, screeps clear memory",
    "scraped_at": 1684583382.790019,
    "genre": "Education",
    "views": "1597",
    "desc": "Screeps tutorial step number four: auto-spawning your creeps. We learn how to automatically spawn creeps after they die. We are also introduced to room visuals, which can help us understand what our code is doing. Finally, the tutorial goes over how to keep your memory clean.\\\\n\\\\nEven though Screeps isn\\'t designed to teach you how to program, I think it\\'s a great way for beginners to explore and get more practice with writing code. In this video series I play through the Screeps tutorial.\\\\n\\\\nhttps://screeps.com/\\\\n\\\\nFull playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKndesWcReHzj9-zq1qP2CG\\\\n\\\\nAre you trying to learn programming on your own and want some help? I offer a 1-on-1 coaching program designed to take you from knowing nothing about code to getting your first job in software development! Sign up for a free consultation with me at: https://learncodebygaming.com\"",
    "lengthSeconds": "366",
    "uploadDate": "2019-10-09",
    "thumbnail_url": "https://i.ytimg.com/vi/MbVdyt6D0RA/maxresdefault.jpg"
  },
  {
    "link": "watch?v=66tS8FAeAhI",
    "title": "Screeps Tutorial Walkthrough for Beginners - 3. Building Structures",
    "tags": "screeps build structure, debug screeps, screeps builder, screeps step 3, screeps build extension, screeps build, screeps construction site, screeps walkthrough, screeps beginner guide, screeps tutorial, learn code by gaming, learncodebygaming, screeps game, screeps, javascript, larger creep, fill extension structure, inrangeto, find method in javascript, lodash filter, big harvester creep",
    "scraped_at": 1684583383.9229925,
    "genre": "Education",
    "views": "2141",
    "desc": "Screeps tutorial step number three: building structures. We build extensions to increase the amount of energy available in our room for spawning creeps. This will allow us to build larger creeps. To do build these extensions, and other types of structures, we write the code for our builder creep role. We also learn how to debug our code with console.log().\\\\n\\\\nEven though Screeps isn\\'t designed to teach you how to program, I think it\\'s a great way for beginners to explore and get more practice with writing code. In this video series I play through the Screeps tutorial.\\\\n\\\\nhttps://screeps.com/\\\\n\\\\nFull playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKndesWcReHzj9-zq1qP2CG\\\\n\\\\nAre you trying to learn programming on your own and want some help? I offer a 1-on-1 coaching program designed to take you from knowing nothing about code to getting your first job in software development! Sign up for a free consultation with me at: https://learncodebygaming.com\"",
    "lengthSeconds": "750",
    "uploadDate": "2019-10-09",
    "thumbnail_url": "https://i.ytimg.com/vi/66tS8FAeAhI/maxresdefault.jpg"
  },
  {
    "link": "watch?v=HCSiOBFDGnQ",
    "title": "Screeps Tutorial Walkthrough for Beginners - 2. Upgrading Controller",
    "tags": "upgrader creep, screeps step 2, upgrade room controller, screeps roles, screeps walkthrough, screeps beginner guide, learn code by gaming, learncodebygaming, screeps tutorial, upgrade rcl, creep memory, screeps, screeps game, javascript",
    "scraped_at": 1684583384.1959937,
    "genre": "Education",
    "views": "2261",
    "desc": "Screeps tutorial step number two: upgrading your room controller. We learn to use the creep memory to differentiate between creep roles. Our new upgrader creep will use energy to upgrade the controller.\\\\n\\\\nEven though Screeps isn\\'t designed to teach you how to program, I think it\\'s a great way for beginners to explore and get more practice with writing code. In this video series I play through the Screeps tutorial.\\\\n\\\\nhttps://screeps.com/\\\\n\\\\nFull playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKndesWcReHzj9-zq1qP2CG\\\\n\\\\nAre you trying to learn programming on your own and want some help? I offer a 1-on-1 coaching program designed to take you from knowing nothing about code to getting your first job in software development! Sign up for a free consultation with me at: https://learncodebygaming.com\"",
    "lengthSeconds": "336",
    "uploadDate": "2019-10-09",
    "thumbnail_url": "https://i.ytimg.com/vi/HCSiOBFDGnQ/maxresdefault.jpg"
  },
  {
    "link": "watch?v=OacP_hyKs0c",
    "title": "Screeps Tutorial Walkthrough for Beginners - 1. Game UI & Basic Scripting",
    "tags": "screeps interface, screeps step 1, screeps module files, screeps console, creep gather energy, screeps walkthrough, screeps harvester, screeps havester, screeps game, screeps beginner guide, screeps tutorial help, screeps tutorial, screeps, learn code by gaming, learncodebygaming, javascript, javascript basic scripting, how to spawn a creep, spawncreep, game loop ticks, creep stuck, creep not moving, energize spawn",
    "scraped_at": 1684583384.8685002,
    "genre": "Education",
    "views": "9803",
    "desc": "Screeps tutorial step number one: the game interface and basic scripting. We learn how to spawn a creep, tell our harvester creep to gather energy, and then bring the energy back to the spawn. We cover how to commit our code and use the console in the browser UI. Finally, the tutorial shows us how to split our code into different module files.\\\\n\\\\nEven though Screeps isn\\'t designed to teach you how to program, I think it\\'s a great way for beginners to explore and get more practice with writing code. In this video series I play through the Screeps tutorial.\\\\n\\\\nhttps://screeps.com/\\\\n\\\\nFull playlist: https://www.youtube.com/playlist?list=PL1m2M8LQlzfKndesWcReHzj9-zq1qP2CG\\\\n\\\\nAre you trying to learn programming on your own and want some help? I offer a 1-on-1 coaching program designed to take you from knowing nothing about code to getting your first job in software development! Sign up for a free consultation with me at: https://learncodebygaming.com\"",
    "lengthSeconds": "864",
    "uploadDate": "2019-10-09",
    "thumbnail_url": "https://i.ytimg.com/vi/OacP_hyKs0c/maxresdefault.jpg"
  }
]